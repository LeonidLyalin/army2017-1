{"version":3,"sources":["../../src/providers/base-lang-page/base-lang-page.ts","../../src/pages/home/home.ts","../../src/providers/thematic-sql.ts","../../src/providers/draw-function/draw-function.ts","../../src/providers/filter-provider/filter-participant-provider.ts","../../src/providers/conference-sql/conference-sql.ts","../../src/providers/conference-sql/conference-api-service.ts","../../src/pages/conference-detail/conference-detail.ts","../../src/providers/filter-provider/filter-conference-provider.ts","../../src/pages/bar-scanner/bar-scanner.ts","../../src/pages/exhibit-detail/exhibit-detail.ts","../../src/providers/exhibit/exhibit-sql.ts","../../src/providers/filter-provider/filter-exhibit-provider.ts","../../src/pages/demo-program-detail/demo-program-detail.ts","../../src/providers/filter-provider/filter-demo-program-provider.ts","../../src/pages/about-forum/about-forum.ts","../../src/pages/my-forum/my-forum.ts","../../src/pages/signup/signup.ts","../../src/pages/park-patriot-all/war-tactic-page/war-tactic-page.ts","../../node_modules/@angular/core/@angular lazy","../../src/providers/base-list-page/base-list-page.ts","../../src lazy","../../src/providers/base-sql.ts","../../src/providers/my-forum-sql.ts","../../src/providers/my-forum/my-forum-api.ts","../../src/providers/participant/participant-api.service.ts","../../src/pages/conference/conference.ts","../../src/providers/thematic-conference-sql/thematic-conference-sql.ts","../../src/providers/base-api-service.ts","../../src/providers/table-action-sql/thematic-action-sql.ts","../../src/pages/exhibit/exhibit.ts","../../src/providers/exhibit/exhibit-api-service.ts","../../src/pages/demo-program/demo-program.ts","../../src/pages/how-to-get/how-to-get.ts","../../src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot.ts","../../src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-car/how-to-get-patriot-by-car.ts","../../src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-transport/how-to-get-patriot-by-transport.ts","../../src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-transport-kiev/how-to-get-patriot-by-transport-kiev.ts","../../src/pages/how-to-get/how-to-get-routes/how-to-get-routes.ts","../../src/pages/patriot/patriot.ts","../../src/pages/patriot-detail/patriot-detail.ts","../../src/providers/patriot/patriot-sql.ts","../../src/pages/settings/settings.ts","../../src/pages/account/account.ts","../../src/providers/user/user-api.service.ts","../../src/pages/login/login.ts","../../src/pages/support/support.ts","../../src/pages/about/about.ts","../../src/pages/tutorial/tutorial.ts","../../src/pages/park-patriot-all/park-patriot/park-patriot.ts","../../src/pages/park-patriot-all/sektor-vks-page/sector-vks-page.ts","../../src/pages/park-patriot-all/demo-opk-page/demo-opk-page.ts","../../src/providers/thematic/thematic-api-service.ts","../../src/providers/place/place-api-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/place-sql/place-sql.ts","../../src/providers/map-sql/map-sql.ts","../../src/pages/tabs/tabs.ts","../../src/pages/leaflet-map/leaflet-map.ts","../../src/providers/patriot/patriot-api-service.ts","../../src/providers/participant-sql.ts","../../src/pages/thematic/thematic.ts","../../src/providers/map-base/map-base.ts","../../src/pages/filter/filter-participant/filter-participant.ts","../../src/providers/language/language.ts","../../src/pages/filter/filter-conference/filter-conference.ts","../../src/pages/help/participant-help/participant-help.ts","../../src/pages/help/conference-help/conference-help.ts","../../src/pages/help/map-help/map-help.ts","../../src/pages/qr-scanner/qr-scanner.ts","../../src/pages/filter/filter-exhibit/filter-exhibit.ts","../../src/pages/help/exhibit-help/exhibit-help.ts","../../src/pages/filter/filter-demo-program/filter-demo-program.ts","../../src/pages/help/demo-program-help/demo-program-help.ts","../../src/pages/participant-detail/participant-detail.ts","../../src/providers/user-data.ts","../../src/pages/filter/filter.ts","../../src/pages/participant/participant.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {Events, NavController} from \"ionic-angular\";\n\n\n/*\n  Generated class for the BaseLangPageProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class BaseLangPageProvider {\n    lang: string;\n    userId: any;\n\n    titleStr: string;\n    setFilterStr: string;\n    cancelFilterStr: string;\n    yesStr: string;\n    noStr: string;\n    addStr: string;\n    loadStr: string;\n    //login: boolean;\n\n\n    constructor(public navCtrl: NavController,\n                /*public navParams: NavParams,*/\n                public events: Events,\n                public http: Http) {\n        //console.log('Hello BaseLangPageProvider Provider');\n\n        this.userId = localStorage.getItem('userid');\n\n\n        this.lang = localStorage.getItem('lang');\n        if (this.lang == 'ru') {\n            this.setRussianStrings();\n        }\n        else {\n            this.setEnglishStrings();\n\n        }\n\n        this.events.subscribe('language:change', () => {\n\n\n            this.lang = localStorage.getItem('lang');\n            if (this.lang == 'ru') {\n                //console.log('this.events.subscribe(language:change)', this.lang);\n                this.setRussianStrings();\n            }\n            else {\n                this.setEnglishStrings();\n            }\n        });\n\n        this.events.subscribe('user:login', () => {\n           // this.login=true;\n            this.userId = localStorage.getItem('userid');\n        });\n\n        this.events.subscribe('user:signup', () => {\n          //  this.login=true;\n            this.userId = localStorage.getItem('userid');\n        });\n\n        this.events.subscribe('user:logout', () => {\n            //this.login=false;\n            this.userId = localStorage.getItem('userid');\n\n        });\n    }\n\n\n    ionViewDidLoad() {\n        this.userId = localStorage.getItem('userid');\n        this.lang = localStorage.getItem('lang');\n        if (this.lang == 'ru') this.setRussianStrings();\n        else this.setEnglishStrings();\n    }\n\n    setRussianStrings(titleStr?) {\n        this.titleStr = titleStr;\n        this.setFilterStr = 'Установить';\n        this.cancelFilterStr = 'Отменить';\n        this.yesStr = 'Да';\n        this.noStr = 'Нет';\n        this.addStr = 'Добавить';\n\n    }\n\n    setEnglishStrings(titleStr?) {\n        this.titleStr = titleStr;\n        this.setFilterStr = 'Set';\n        this.cancelFilterStr = 'Cancel';\n        this.noStr = 'No';\n        this.addStr = 'Add';\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/base-lang-page/base-lang-page.ts","import {Component, ViewChild} from '@angular/core';\n\nimport {\n    Content, MenuController, NavController, Platform, Slides, LoadingController, Events,\n    AlertController\n} from 'ionic-angular';\n\n\n\nimport {ParticipantPage} from \"../participant/participant\";\nimport {ConferencePage} from \"../conference/conference\";\nimport {BaseApi} from \"../../providers/base-api-service\";\nimport {Http} from \"@angular/http\";\nimport {BaseSql} from \"../../providers/base-sql\";\nimport {TableActionSql} from \"../../providers/table-action-sql/thematic-action-sql\";\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\n\nimport {LeafletMapPage} from \"../leaflet-map/leaflet-map\";\nimport {BarScannerPage} from \"../bar-scanner/bar-scanner\";\nimport {ExhibitPage} from \"../exhibit/exhibit\";\nimport {DemoProgramPage} from \"../demo-program/demo-program\";\nimport {HowToGetPage} from \"../how-to-get/how-to-get\";\nimport {AboutForumPage} from \"../about-forum/about-forum\";\n\nimport {PatriotPage} from \"../patriot/patriot\";\n\n\n@Component({\n    selector: 'page-home',\n    templateUrl: 'home.html'\n})\nexport class HomePage extends BaseLangPageProvider {\n    showSkip = true;\n\n    public iconHeight: number;\n    public iconWidth: number;\n\n    /**\n     * number of times this page was loaded\n     */\n    public viewCount: number;\n    public viewCountStr: string;\n    // lang: string;\n    private iconDivHeight: number = 10;//divider for the evaliation of the icon optimal size according to content width\n\n    @ViewChild('slides') slides: Slides;\n    @ViewChild(Content) content: Content;\n\n\n    //interface strings\n    //title: string;\n    /*onMapStr: string;\n    myForumStr: string;\n    thematicStr: string;*/\n\n    aboutForumStr: string;\n    mapStr: string;\n    participantsStr: string;\n    conferenceStr: string;\n    demoProgramStr: string;\n    howDoYouGetStr: string;\n    onTheForumStr: string;\n    parkPatriotStr: string;\n    answersAndQuestionsStr: string;\n    entrancesExitsStr: string;\n    restaurantsCafe: string;\n    wcStr: string;\n    infoStr: string;\n    myForumStr: string;\n    qrScannerStr: string;\n    waitLoadStr: string;\n    exhibitsMoDStr: string;\n\n    constructor(public navCtrl: NavController,\n                public menu: MenuController,\n                public platform: Platform,\n                public http: Http,\n                public loadingCtrl: LoadingController,\n                public events: Events,\n                public alertCtrl: AlertController) {\n        super(navCtrl, events, http);\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Армия 2017');\n        //  this.title = 'Армия 2017';\n        this.aboutForumStr = 'О Форуме';\n        this.mapStr = 'Карта форума';\n        this.participantsStr = 'Участники';\n        this.exhibitsMoDStr = 'Экспонаты МО';\n        this.conferenceStr = 'Конференция';\n        this.demoProgramStr = 'Демо программа';\n        this.howDoYouGetStr = 'Как добраться';\n        this.onTheForumStr = 'О Форуме \"Армия-2017\"';\n        this.parkPatriotStr = 'Парк \"Патриот\"';\n        this.answersAndQuestionsStr = 'Вопросы и ответы';\n        this.entrancesExitsStr = 'Входы-выходы';\n        this.restaurantsCafe = 'Рестораны/кафе';\n        this.wcStr = 'Туалеты';\n        this.infoStr = 'Справочная информация';\n        this.myForumStr = 'Мой форум';\n        this.qrScannerStr = 'QR сканнер';\n        this.waitLoadStr = 'Загрузка...';\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Army 2017');\n        //this.title = 'Army 2017';\n        this.aboutForumStr = 'About';\n        this.mapStr = 'Map';\n        this.participantsStr = 'Exhibitors';\n        this.exhibitsMoDStr = 'Exhibits of the Mod';\n        this.conferenceStr = 'Conference';\n        this.demoProgramStr = 'Demo program';\n        this.howDoYouGetStr = 'How to get to';\n        this.onTheForumStr = 'Forum \"Army-2017\"';\n        this.parkPatriotStr = 'Park \"Patriot\"';\n        this.answersAndQuestionsStr = 'Answers & Questions';\n        this.entrancesExitsStr = 'Entrances & Exits';\n        this.restaurantsCafe = 'Restaurant & Cafe';\n        this.wcStr = 'WC';\n        this.infoStr = 'Info';\n        this.myForumStr = 'My Forum';\n        this.qrScannerStr = 'QR scanner';\n        this.waitLoadStr = 'Loading...';\n    }\n\n    onSlideChangeStart(slider: Slides) {\n        this.showSkip = !slider.isEnd();\n    }\n\n    getDate() {\n        let today = new Date();\n        let dd = today.getDate();\n        let ddStr: string;\n        let mmStr: string;\n        let mm = today.getMonth() + 1; //January is 0!\n        let yyyy = today.getFullYear();\n\n        if (dd < 10) {\n            ddStr = '0' + String(dd)\n        }\n        else ddStr = String(dd);\n\n        if (mm < 10) {\n            mmStr = '0' + String(mm)\n        }\n        else mmStr = String(mm);\n\n        return ddStr + '.' + mmStr + '.' + yyyy;\n    }\n\n    // objc[14286]: Class PLBuildVersion is implemented in both /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices (0x1105cccc0) and /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (0x1103426f0). One of the two will be used. Which one is undefined.\n    // [{\"name\": \"id\", \"type\": \"text PRIMARY KEY\"},{\"name\": \"name_rus\", \"type\": \"text\"},{\"name\": \"name_eng\", \"type\": \"text\"},{\"name\": \"coords\", \"type\": \"text\"},{\"name\": \"number_on_map\", \"type\": \"text\"},{\"name\": \"name_map\", \"type\": \"text\"},{\"name\": \"goto\", \"type\": \"text\"},{\"name\": \"shape\", \"type\": \"text\"}, {\"name\": \"marker\", \"type\": \"text\"}, {\"name\": \"tooltip\", \"type\": \"text\"},{\"name\": \"popup\", \"type\": \"text\"}]\n//  [{\"name\":\"id\",\"type\":\"text PRIMARY KEY\"},{\"name\":\"map\",\"type\":\"text\"},{\"name\":\"place_previous\", \"type\":\"text\"},{\"name\":\"name_map\",\"type\":\"text\"},{\"name\": \"name_rus\", \"type\": \"text\"}, {\"name\": \"name_eng\", \"type\": \"text\"}, {\"name\": \"width\", \"type\": \"text\"},{\"name\": \"height\", \"type\": \"text\"},{\"name\": \"map_left\", \"type\": \"text\"},{\"name\": \"map_right\", \"type\": \"text\"},{\"name\": \"map_up\", \"type\": \"text\"},{\"name\": \"map_down\", \"type\": \"text\"},{\"name\": \"min_zoom\", \"type\": \"text\"},{\"name\": \"max_zoom\", \"type\": \"text\"},{\"name\": \"begin_zoom\", \"type\": \"text\"}]\n\n     loadBase() {\n         let api = new BaseApi(this.http);\n         // api.getApi('universal_list.php?IBLOCK=21').subscribe(data => {\n         api.getApi('universal_list.php?IBLOCK=21').subscribe(data => {\n                 //console.log(\"in home.ts after getApi=\", data);\n\n                 let tableAction = new TableActionSql(this.http);\n                 for (let i = 0; i < data.length; i++) {\n\n                     //console.log(\"data.id\", data[i][\"ID\"]);\n                     tableAction.checkForId(data[i][\"ID\"]).then(res => {\n                         //console.log(\"tableAction.checkForId res=\", res);\n                         if (!res) {\n                             // //console.log(\n                             //console.log(\"data.status\", data[i][\"STATUS\"]);\n                             //console.log(\"data.fields\", data[i][\"FIELDS\"]);\n                             let fields = JSON.parse(data[i][\"FIELDS\"]);\n                             //console.log(\"fields=\", fields);\n                             //console.log(\"fields.length=\", fields.length);\n                             //console.log(\"fields[1]\", fields[1]);\n                             if (!this.platform.is('core')) {\n                                 let loader = this.loadingCtrl.create({\n                                     content: this.waitLoadStr,\n                                     duration: 30000,\n                                 });\n                                 loader.present().then(() => {\n                                     if (data[i][\"STATUS\"] == 'recreate') {\n\n                                         //console.log('mydata[i][\"TABLE_NAME\"]=', data[i][\"TABLE_NAME\"]);\n                                         //console.log('fields=', fields);\n                                         //console.log('mydata[i][\"STATUS\"]=', data[i][\"STATUS\"]);\n                                         //console.log('constrains=', data[i][\"CONSTRAINS\"]);\n                                         let table = new BaseSql(this.http, data[i][\"TABLE_NAME\"], fields, data[i][\"CONSTRAINS\"], data[i][\"STATUS\"]);\n                                         table.loadApi(data[i][\"API_PATH\"]);\n                                     }\n                                     if (data[i][\"STATUS\"] == 'update') {\n\n                                         //console.log('mydata[i][\"TABLE_NAME\"]=', data[i][\"TABLE_NAME\"]);\n                                         //console.log('fields=', fields);\n                                         //console.log('mydata[i][\"STATUS\"]=', data[i][\"STATUS\"]);\n                                         //console.log('constrains=', data[i][\"CONSTRAINS\"]);\n                                         let table = new BaseSql(this.http, data[i][\"TABLE_NAME\"], fields, data[i][\"CONSTRAINS\"], data[i][\"STATUS\"]);\n                                         table.updateApi(data[i][\"API_PATH\"] + '?DATE_MODIFY_FROM=' + data[i][\"DATE_MODIFY_FROM\"]);\n                                     }\n                                     tableAction.addItem({\n                                             id: data[i][\"ID\"],\n                                             table_name: data[i][\"TABLE_NAME\"],\n                                             action: data[i][\"STATUS\"],\n                                             date_change: this.getDate(),\n                                         }\n                                     ).then(res => {\n                                         //console.log(\"tableAction.addItem res=\", res);\n                                         loader.dismiss();\n                                     });\n                                     //loader.dismiss();\n                                 });\n                             }\n                         }\n\n                     })\n                     //if this action was never make\n\n\n                 }\n\n             }\n         );\n\n     }\n\n   /* async loadBase() {\n        let api = new BaseApi(this.http);\n        // api.getApi('universal_list.php?IBLOCK=21').subscribe(data => {\n\n        let data = await  api.getApi('universal_list.php?IBLOCK=21').first().toPromise();\n        //console.log(\"in home.ts after getApi=\", data);\n\n        let tableAction = new TableActionSql(this.http);\n        for (let i = 0; i < data.length; i++) {\n\n            //console.log(\"data.id\", data[i][\"ID\"]);\n            let res = await tableAction.checkForId(data[i][\"ID\"]);\n            //console.log(\"tableAction.checkForId res=\", res);\n            if (!res) {\n                // //console.log(\n                //console.log(\"data.status\", data[i][\"STATUS\"]);\n                //console.log(\"data.fields\", data[i][\"FIELDS\"]);\n                let fields = JSON.parse(data[i][\"FIELDS\"]);\n                //console.log(\"fields=\", fields);\n                //console.log(\"fields.length=\", fields.length);\n                //console.log(\"fields[1]\", fields[1]);\n                if (!this.platform.is('core')) {\n                    let loader = this.loadingCtrl.create({\n                        content: this.waitLoadStr,\n                        duration: 30000,\n                    });\n                    await loader.present();\n                    if (data[i][\"STATUS\"] == 'recreate') {\n\n                        //console.log('mydata[i][\"TABLE_NAME\"]=', data[i][\"TABLE_NAME\"]);\n                        //console.log('fields=', fields);\n                        //console.log('mydata[i][\"STATUS\"]=', data[i][\"STATUS\"]);\n                        //console.log('constrains=', data[i][\"CONSTRAINS\"]);\n                        let table = new BaseSql(this.http, data[i][\"TABLE_NAME\"], fields, data[i][\"CONSTRAINS\"], data[i][\"STATUS\"]);\n                        await table.loadApi(data[i][\"API_PATH\"]);\n                    }\n                    if (data[i][\"STATUS\"] == 'update') {\n\n                        //console.log('mydata[i][\"TABLE_NAME\"]=', data[i][\"TABLE_NAME\"]);\n                        //console.log('fields=', fields);\n                        //console.log('mydata[i][\"STATUS\"]=', data[i][\"STATUS\"]);\n                        //console.log('constrains=', data[i][\"CONSTRAINS\"]);\n                        let table = new BaseSql(this.http, data[i][\"TABLE_NAME\"], fields, data[i][\"CONSTRAINS\"], data[i][\"STATUS\"]);\n                        await table.updateApi(data[i][\"API_PATH\"] + '?DATE_MODIFY_FROM=' + data[i][\"DATE_MODIFY_FROM\"]);\n                    }\n                    await tableAction.addItem({\n                            id: data[i][\"ID\"],\n                            table_name: data[i][\"TABLE_NAME\"],\n                            action: data[i][\"STATUS\"],\n                            date_change: this.getDate(),\n                        }\n                    );\n                    await loader.dismiss();\n\n                }\n            }\n\n\n        }\n\n\n    }*/\n\n\n    ionViewWillEnter() {\n        this.iconHeight = this.content.contentHeight / this.iconDivHeight;\n        this.iconWidth = this.iconHeight;//must be th same\n        //console.log(\"this.iconHeight=\" + this.iconHeight);\n        this.slides.update();\n        this.menu.enable(true);\n\n        this.viewCountStr = localStorage.getItem('viewcount');\n        this.viewCount = Number(this.viewCountStr);\n        //console.log('this.viewCount=', this.viewCount);\n\n        if (this.viewCount == 0) {\n            if (this.userId) {\n                this.events.publish('user:login');\n            }\n            /**\n             * init tables of database\n             */\n\n            //   [{\"name\":\"id\", \"type\":\"text PRIMARY KEY\"},{\"name\":\"name_place\",\"type\":\"text\"},{\"name\":\"coords\", \"type\":\"text\"}, {\"name\":\"name_rus\", \"type\":\"text\"},{\"name\":\"purpose\", \"type\":\"text\"},{\"name\":\"characteristics\", \"type\":\"text\"}, {\"name\":\"name_eng\", \"type\":\"text\"}, {\"name\":\"purpose_eng\", \"type\":\"text\"}, {\"name\":\"composition\", \"type\":\"text\"}, {\"name\":\"characteristics_eng\", \"type\":\"text\"},{\"name\":\"map\", \"type\":\"text\"},{\"name\":\"name_map\", \"type\":\"text\"},  {\"name\":\"place\",\"type\":\"text\"}]\n\n            this.loadBase();\n\n\n        }\n\n        this.viewCount++;\n        localStorage.setItem('viewcount', String(this.viewCount));\n    }\n\n    /*ionViewDidload() {\n\n\n    }*/\n\n    aboutPage() {\n        this.navCtrl.push(AboutForumPage);\n    }\n\n    forumMapPage() {\n        let mapSql = new BaseSql(this.http, 'map');\n        mapSql.selectWhere('name_map=\"forum_map.jpg\"').then(res => {\n\n            //console.log(\"res=\", res);\n            let map = <any>res[0];\n            this.navCtrl.push(LeafletMapPage, {\n                typeOfMap: 'simple',\n                icons: 'bus-stops.svg,check-in.svg',\n                map: map\n            });\n        });\n    };\n\n\n    // this.navCtrl.push(ForumMapPage);\n\n\n    parkPatriot() {\n        this.navCtrl.push(PatriotPage,);\n    }\n\n    conferencePage() {\n        this.navCtrl.push(ConferencePage, {select: 'all'});\n    }\n\n\n    participantPage() {\n        this.navCtrl.push(ParticipantPage, {select: 'all'});\n    }\n\n\n    /*toggleMenu(){\n      this.navCtrl.m\n    }*/\n\n\n    BarScannerPage() {\n        this.navCtrl.push(BarScannerPage);\n    }\n\n    ExhibitListPage() {\n        this.navCtrl.push(ExhibitPage);\n    }\n\n\n    DemoProgramPage() {\n        this.navCtrl.push(DemoProgramPage);\n\n    }\n\n    showWC() {\n        let mapSql = new BaseSql(this.http, 'map');\n        mapSql.selectWhere('name_map=\"patriot-expo.svg\"').then(res => {\n\n            //console.log(\"res=\", res);\n            let map = <any>res[0];\n            this.navCtrl.push(LeafletMapPage, {\n                typeOfMap: 'icon',\n                map: map,\n                icons: 'wc.svg',\n                titleStr: this.wcStr\n            });\n        });\n    }\n\n    showCafe() {\n        let mapSql = new BaseSql(this.http, 'map');\n        mapSql.selectWhere('name_map=\"patriot-expo.svg\"').then(res => {\n\n            //console.log(\"res=\", res);\n            let map = <any>res[0];\n            this.navCtrl.push(LeafletMapPage, {\n                typeOfMap: 'icon',\n                map: map,\n                icons: 'cafe.svg,restaurant.svg',\n                titleStr: this.restaurantsCafe\n            });\n        });\n    }\n\n    showEnrance() {\n        let mapSql = new BaseSql(this.http, 'map');\n        mapSql.selectWhere('name_map=\"patriot-expo.svg\"').then(res => {\n\n            //console.log(\"res=\", res);\n            let map = <any>res[0];\n            this.navCtrl.push(LeafletMapPage, {\n                typeOfMap: 'icon',\n                map: map,\n                icons: 'entranceA.svg,entranceB.svg,entranceC.svg',\n                titleStr: this.entrancesExitsStr\n            });\n        });\n    }\n\n    showInfo() {\n        let mapSql = new BaseSql(this.http, 'map');\n        mapSql.selectWhere('name_map=\"patriot-expo.svg\"').then(res => {\n\n            //console.log(\"res=\", res);\n            let map = <any>res[0];\n            this.navCtrl.push(LeafletMapPage, {\n                typeOfMap: 'icon',\n                map: map,\n                icons: 'medpoint.svg,meeting-point.svg,mother-and-child.svg,media-center.svg,guest-hall.svg',\n                titleStr: this.infoStr\n            });\n        });\n\n    }\n\n    howToGet() {\n        this.navCtrl.push(HowToGetPage);\n    }\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport {BaseSql} from \"./base-sql\";\n\n/*\n Generated class for the ThematicSql provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\nexport interface thematic {\n  id: string,\n  name_rus: string,\n  name_eng: string,\n  number: string\n}\n\n\ndeclare let window: any;\n@Injectable()\nexport class ThematicSql extends BaseSql {\n  /* public text: string = \"\";\n   public db = null;\n   public arr = [];*/\n\n  /*  public fileds = [\n   {name: 'id', type: 'text'},\n   {name: 'name_rus', type: 'text'},\n   {name: 'name_eng', type: 'text'},\n   {name: 'number', type: 'text'}\n   ];*/\n\n  /* tableName: string = 'thematic';*/\n\n  constructor(public http: Http\n              ) {\n\n    super(http, 'thematic', [\n      {name: 'id', type: 'text PRIMARY KEY'},\n      {name: 'name_rus', type: 'text'},\n      {name: 'name_eng', type: 'text'},\n      {name: 'number', type: 'text'}\n    ]);\n    //console.log('Hello ThematicSql Provider');\n    //   this.openDb();\n    this.countTable().then(res => {\n      //console.log(\"after count table\", res);\n    })\n  }\n\n\n\n\n\n\n\n  getThematicOfParticipant(participantId) {\n    //console.log('getThematic for participant');\n    return new Promise(res => {\n      let query = 'select thematic from participant';\n      query += ' where id=' + participantId;\n      //console.log(query);\n      this.db.executeSql(query, [], rs => {\n        //console.log(rs);\n        let list = rs.rows.item(0).thematic;\n        //console.log(list);\n        this.getThematicList(list).then(rs => {\n            //console.log(\"res after getThematicList=\", rs);\n            res(rs);\n          }\n        )\n      });\n\n    });\n  }\n\n\n  /*  getFieldFromTable(id, field, table) {\n   //console.log('get ' + field + ' for ' + table\n   );\n   return new Promise(res => {\n   let query = 'select thematic from ' + table;\n   query += ' where id=' + id;\n   //console.log(query);\n   this.db.executeSql(query, [], rs => {\n   //console.log(rs);\n   let list = rs.rows.item(0).thematic;\n   //console.log(list);\n   this.getThematicList(list).then(rs => {\n   //console.log(\"res after getThematicList=\", rs);\n   res(rs);\n   }\n   )\n   });\n\n   });\n   }*/\n  /**\n   * thematic can be a string of thematics separated with ','\n   * @param list\n   * @returns {Promise<T>}\n   */\n\n  getThematicList(list: string) {\n    return new Promise(res => {\n      //console.log('get thematic list=', list);\n      let thematic: string[];\n      thematic = [];\n      thematic = list.split(',');\n      //console.log('an array=', thematic);\n      let whereStr: string = ' where ';\n      for (let i = 0; i < thematic.length; i++) {\n        if (i > 0) whereStr += ' or ';\n        whereStr += 'number=' + thematic[i];\n      }\n      //console.log(\"whereStr=\", whereStr);\n      let query = \"SELECT * FROM thematic\";\n      query += ' ' + whereStr;\n      //console.log(query);\n      this.arr = [];\n      this.db.executeSql(query, [], rs => {\n        if (rs.rows.length > 0) {\n\n          for (let i = 0; i < rs.rows.length; i++) {\n            this.arr.push(<thematic>rs.rows.item(i));\n          }\n        }\n        res(this.arr);\n      }, (e) => {\n        //console.log('Sql Query Error', e);\n      });\n    })\n  }\n\n  /**\n   * Make a list of participants for a certain thematic\n   * @param thematic\n   * @returns {Promise<T>}\n   */\n  getParticipantForThematic(thematic: string) {\n    //console.log(\"getParticipantForThematic\");\n    //console.log(\"thematic=\", thematic);\n    return new Promise(res => {\n      let query = 'select a.id, a.name_rus, a.name_eng, a.desc_rus as desc, ' +\n        'a.desc_eng as desc, a.logo, a.address_rus, a.address_eng, a.phone, a.email, ' +\n        'a.www, b.id as my_forum_id, c.name_rus as place_name ' +\n        'from participant a left join myforum b on a.id=b.my_id left join place c on a.place=c.id ' +\n        ' where a.thematic like \"' + thematic + ',%\" or a.thematic like \"%,' + thematic + ',%\" or a.thematic like \"%,' + thematic + '\" or a.thematic=\"' + thematic + '\"';\n      //console.log(query);\n      this.db.executeSql(query, [], rs => {\n        this.arr = [];\n        if (rs.rows.length > 0) {\n          for (let i = 0; i < rs.rows.length; i++) {\n            this.arr.push(<any>rs.rows.item[i]);\n          }\n\n        }\n\n\n        res(this.arr);\n        (e) => {\n          //console.log('Sql Query Error', e);\n        }\n      });\n\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/thematic-sql.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {place} from \"../place-sql/place-sql\";\n\n/*\n  Generated class for the DrawFunctionProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n\n@Injectable()\nexport class DrawFunctionProvider {\n\n  constructor(public http: Http) {\n    //console.log('Hello DrawFunctionProvider Provider');\n\n\n\n  }\n\n\n  /**\n   * http://stackoverflow.com/questions/2212604/javascript-check-mouse-clicked-inside-the-circle-or-polygon\n   * @param nvert Number of vertices in the polygon. Whether to repeat the first vertex at the end is discussed below.\n   * @param vertx Arrays containing the x-coordinates of the polygon's vertices.\n   * @param verty Arrays containing the  y-coordinates of the polygon's vertices.\n   * @param testx X coordinate of the test point.\n   * @param testy Y-coordinate of the test point.\n   * @returns {boolean}\n   */\n  /*  pnpoly(nvert, vertx, verty, testx, testy) {\n   var i, j, c = false;\n   for (i = 0, j = nvert - 1; i < nvert; j = i++) {\n   if (( ( verty[i] > testy ) != ( verty[j] > testy ) ) &&\n   ( testx < ( vertx[j] - vertx[i] ) * ( testy - verty[i] ) / ( verty[j] - verty[i] ) + vertx[i] )) {\n   c = !c;\n   }\n   }\n   return c;\n   }*/\n\n  /* logXY(event: MouseEvent): void {\n   //alert( event.clientX);\n   // alert( event.clientY);\n   //console.log('Width: ' + this.platform.width());\n   //console.log('Height: ' + this.platform.height());\n   //console.log(\"scrollTop=\" + this.content.scrollTop);\n   //console.log(\"scrollToTop=\" + this.content.scrollToTop);\n   //console.log(\"contentTop=\" + this.content.contentTop);\n   //console.log(\"contentBottom=\" + this.content.contentBottom);\n   //console.log(\"diretionX=\" + this.content.directionX);\n   //console.log(\"diretionY=\" + this.content.directionY);\n   //console.log(\"content height=\" + this.content.contentHeight);\n   //console.log(\"content width=\" + this.content.contentWidth);\n   //console.log(\"getContentDimensions().contentTop=\" + this.content.getContentDimensions().contentTop);\n   //console.log(\"getContentDimensions().scrollTop=\" + this.content.getContentDimensions().scrollTop);\n   //console.log(\"getContentDimensions().contentLeft=\" + this.content.getContentDimensions().contentLeft);\n   //console.log(\"getContentDimensions().contentWidth=\" + this.content.getContentDimensions().contentWidth);\n\n   //console.log(\"getContentDimensions().scrollLeft=\" + this.content.getContentDimensions().scrollLeft);\n   //console.log(\"getContentDimensions().scrollHeight=\" + this.content.getContentDimensions().scrollHeight);\n   //console.log(\"scrollLeft=\" + this.content.scrollLeft);\n\n\n   let posX = event.clientX + this.content.getContentDimensions().scrollLeft;\n\n   if (this.forumMap.x > this.platform.width()) posX = posX * this.forumMap.x / this.platform.width();\n\n   let posY = event.clientY + this.content.getContentDimensions().scrollTop;\n   //console.log(\"X=\" + event.clientX + \"; Y=\" + event.clientY);\n   //console.log(\"posX=\" + posX + \"; posY=\" + posY);\n   for (let point of this.coords) {\n   if (((point.x1 < posX) && (point.x2 > posX)) && ((point.y1 < posY) && (point.y2 > posY))) {\n   this.navCtrl.push(point.page);\n   }\n\n   }\n\n\n   }*/\n\n  /*  checkClick(event: MouseEvent) {\n   // alert( event.clientY);\n   let X: number;\n   let Y: number;\n   //console.log('Width: ' + this.platform.width());\n   //console.log('Height: ' + this.platform.height());\n   //console.log(\"scrollTop=\" + this.content.scrollTop);\n   //console.log(\"scrollToTop=\" + this.content.scrollToTop);\n   //console.log(\"contentTop=\" + this.content.contentTop);\n   //console.log(\"contentBottom=\" + this.content.contentBottom);\n   //console.log(\"diretionX=\" + this.content.directionX);\n   //console.log(\"diretionY=\" + this.content.directionY);\n   //console.log(\"content height=\" + this.content.contentHeight);\n   //console.log(\"content width=\" + this.content.contentWidth);\n   //console.log(\"getContentDimensions().contentTop=\" + this.content.getContentDimensions().contentTop);\n   //console.log(\"getContentDimensions().scrollTop=\" + this.content.getContentDimensions().scrollTop);\n   //console.log(\"getContentDimensions().contentLeft=\" + this.content.getContentDimensions().contentLeft);\n   //console.log(\"getContentDimensions().contentWidth=\" + this.content.getContentDimensions().contentWidth);\n   //console.log(\"getContentDimensions().scrollLeft=\" + this.content.getContentDimensions().scrollLeft);\n   //console.log(\"getContentDimensions().scrollHeight=\" + this.content.getContentDimensions().scrollHeight);\n   //console.log(\"scrollLeft=\" + this.content.scrollLeft);\n   //console.log(\"event.clientX=\", event.clientX);\n   //console.log(\"event.clientY=\", event.clientY);\n   //console.log(\"this.scroll.scrollX=\", this.scroll.scrollX);\n   //console.log(\"this.scroll.scrollY=\", this.scroll.scrollY)\n   //console.log(\"getContentDimensions().contentHeight\" + this.content.getContentDimensions().contentHeight);\n   //console.log(\"getContentDimensions().contentBottom\" + this.content.getContentDimensions().contentBottom);\n   //console.log(\"getContentDimensions().scrollHeight\" + this.content.getContentDimensions().scrollHeight);\n   //console.log(\"getContentDimensions().scrollWidth\" + this.content.getContentDimensions().scrollWidth);\n\n\n   //Prepare our X and Y\n   X = event.clientX;\n   Y = event.clientY;\n\n   Y = Y - this.content.contentTop;\n   //form of variables needed\n   /!*for (let point of this.coordsRaw) {\n   let nvert: number = 0;\n   let vertx: number[];\n   let verty: number[];\n   vertx = [];\n   verty = [];\n   for (let i = 0; i < point.coords.length; i++) {\n\n   if ((i % 2) == 0) {\n   nvert++;\n   //console.log(point.coords[i]);\n   vertx.push(point.coords[i]);\n   }\n   else {\n   //console.log(point.coords[i]);\n   verty.push(point.coords[i]);\n   }\n\n   }\n   //console.log(nvert);\n   //console.log(vertx);\n   //console.log(verty);\n   //console.log(\"X=\", X);\n   //console.log(\"Y=\", Y);\n   if (this.pnpoly(nvert, vertx, verty, X, Y)) {\n   alert(point.name_rus)\n   }\n   }*!/\n\n   }*/\n\n  drawPoly(placeSingle: place, canvas, imageMap:any) {\n    //console.log(\"placeSingle.coords=\", placeSingle.coords);\n\n    let mCoordsStr = placeSingle.coords.toString();\n    let mCoordsTmp = mCoordsStr.split(',');\n    //console.log(\"mCoordsTmp=\", mCoordsTmp);\n    let mCoords: number[]=[];\n\n    for (let mCoordsSingle of mCoordsTmp) {\n      //console.log(\"mCoordsSingle=\", mCoordsSingle);\n      mCoords.push(Number(mCoordsSingle));\n\n    }\n    let i, n;\n    n = mCoords.length;\n    //console.log(\"mCoords=\", mCoords);\n    // set the 'default' values for the colour/width of fill/stroke operations\n    let hdc = canvas.nativeElement.getContext('2d');\n    hdc.drawImage(imageMap, 0, 0);\n    hdc.fillStyle = 'red';\n    hdc.strokeStyle = 'red';\n    hdc.lineWidth = 2;\n    // this.hdc.strokeRect(0, 0, 100, 100);\n    hdc.beginPath();\n    hdc.moveTo(mCoords[0], mCoords[1]);\n    for (i = 2; i < n; i += 2) {\n      hdc.lineTo(mCoords[i], mCoords[i + 1]);\n    }\n    hdc.lineTo(mCoords[0], mCoords[1]);\n    hdc.stroke();\n  }\n\n  drawRect(placeSingle: place, canvas, imageMap:any) {\n    let mCoordsStr: string = placeSingle.coords.toString();\n    //console.log(\"mCoordsStr=\", mCoordsStr);\n    let mCoords = mCoordsStr.split(',');\n    //console.log(mCoords);\n    //console.log(\"placeSingle.coords=\", placeSingle.coords);\n    //console.log(\"placeSingle.coords[0]=\", placeSingle.coords[0]);\n    let top, left, bot, right: number;\n    left = Number(mCoords[0]);\n    top = Number(mCoords[1]);\n    right = Number(mCoords[2]);\n    bot = Number(mCoords[3]);\n    //console.log(\"left=\", left);\n    //console.log(\"top=\", top);\n    //console.log(\"right=\", right);\n    //console.log(\"bot=\", bot);\n    // set the 'default' values for the colour/width of fill/stroke operations\n    let hdc = canvas.nativeElement.getContext('2d');\n    hdc.drawImage(imageMap, 0, 0);\n    hdc.fillStyle = 'red';\n    hdc.strokeStyle = 'red';\n    hdc.lineWidth = 2;\n    hdc.strokeRect(left, top, right - left, bot - top);\n\n  }\n\n  drawFigure(placeSingle: place,canvas, imageMap:any, event) {\n\n    let element=event.target;\n    //console.log(\"element=\",element);\n    //console.log(\"element.shape=\",element.shape);\n    if (element.shape=='poly'){\n      this.drawPoly(placeSingle, canvas, imageMap);\n      return true;\n    }\n    if (element.shape=='rect'){\n      this.drawRect(placeSingle, canvas, imageMap);\n      return true;\n    }\n    //define drawRect or DrawPoly\n    if (placeSingle.shape == 'poly') {\n      this.drawPoly(placeSingle, canvas, imageMap);\n      return true;\n    }\n    if (placeSingle.shape == 'rect') {\n      this.drawRect(placeSingle, canvas, imageMap);\n      return true;\n    }\n    let mCoords: string = placeSingle.coords.toString();\n    let tmpCoords = mCoords.split(',');\n    if (tmpCoords.length > 4) {\n      this.drawPoly(placeSingle, canvas, imageMap);\n      return true;\n    }\n    else {\n      this.drawRect(placeSingle, canvas, imageMap);\n      return true;\n    }\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/draw-function/draw-function.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseLangPageProvider} from \"../base-lang-page/base-lang-page\";\nimport {Events, NavController} from \"ionic-angular\";\n\n/*\n Generated class for the FilterParticipantProvider provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n@Injectable()\nexport class FilterParticipantProvider extends BaseLangPageProvider {\n  public thematicField: string;\n\n\n  filterStr: string;\n  public thematicTitle: string;\n  public thematicValue: string;\n\n  public mapField: string;\n  public mapTitle: string;\n  public mapValue: string;\n\n  public placeField: string;\n  public placeTitle: string;\n  public placeValue: string;\n\n  public countryField: string;\n  public countryTitle: string;\n  public countryValue: string;\n\n  public partOfName: string;\n\n /* setFilterStr: string;\n  cancelFilterStr: string;*/\n  findName: string;\n\n\n  constructor(public navCtrl: NavController,\n              public http: Http,\n              public events: Events) {\n    super(navCtrl, events, http)\n    //console.log('Hello FilterExhibitProvider Provider');\n\n  }\n\n  setFilterValue(filterStr) {\n    this.filterStr = filterStr;\n    //console.log(\"provider this.filterStr\",this.filterStr)\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n    this.thematicTitle = 'Тематика';\n    this.mapTitle = 'Павильоны';\n    this.placeTitle = 'Стенды';\n    this.countryTitle = 'Страны';\n\n    //interface strings\n    this.setFilterStr = 'Установить';\n    this.cancelFilterStr = 'Отменить';\n    this.findName = 'Наименование';\n\n  }\n\n  setEnglishStrings(){\n    super.setEnglishStrings();\n    this.thematicTitle = 'Thema';\n    this.mapTitle = 'Hall';\n    this.placeTitle = 'Stand';\n    this.countryTitle = 'Country';\n\n    //interface strings\n    this.setFilterStr = 'Set';\n    this.cancelFilterStr = 'Cancel';\n    this.findName = 'Name';\n  }\n\n\n  cancelFilter() {\n    this.thematicField = '';\n    this.thematicValue = '';\n    this.mapField = '';\n    this.mapValue = '';\n    this.placeField = '';\n    this.placeValue = '';\n    this.countryField = '';\n    this.countryValue = '';\n    this.findName='';\n    this.partOfName='';\n\n    this.filterStr='';\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/filter-provider/filter-participant-provider.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseSql} from \"../base-sql\";\nimport {ConferenceApi} from \"./conference-api-service\";\n\n/*\n Generated class for the ConferenceSql provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n\n\n\nexport interface conferenceRus {\n  id: string;\n  name_rus: string;\n  name_rus_upper: string;\n  place_name: string;\n\n  place: string;\n  format: string;\n\n  contact: string;\n\n  thematic_conference: string;\n  organizer: string;\n\n  date_event: string;\n  time_beg: string;\n  time_end: string;\n\n\n}\n\nexport interface conference extends conferenceRus {\n\n  name_eng: string;\n\n  place_name_eng: string;\n\n\n  format_eng: string;\n\n  contact_eng: string;\n\n\n  organizer_eng: string;\n\n\n\n\n\n}\n\nexport interface conferenceRusMyForum extends conferenceRus{\n\n  my_forum_id: string;\n  place_name_place: string;\n}\n\n\n\ndeclare let window: any;\n\n@Injectable()\nexport class ConferenceSql extends BaseSql{\n  public text: string = \"\";\n  public db = null;\n  public arr = [];\n\n  public api:ConferenceApi;\n\n  constructor(public http: Http) {\n    super(http,'conference',[\n      {name:\"id\", type:\"text PRIMARY KEY\"},\n      {name:\"name_rus\", type:\"text\"},\n      {name:\"name_eng\", type:\"text\"},\n      {name:\"place_name\", type:\"text\"},\n      {name:\"place_name_eng\", type:\"text\"},\n      {name:\"place\", type:\"text\"},\n      {name:\"format\", type:\"text\"},\n      {name:\"format_eng\", type:\"text\"},\n      {name:\"contact\", type:\"text\"},\n      {name:\"contact_eng\", type:\"text\"},\n      {name:\"thematic_conference\", type:\"text\"},\n      {name:\"organizer\", type:\"text\"},\n      {name:\"organizer_eng\", type:\"text\"},\n      {name:\"date_event\", type:\"text\"},\n      {name:\"time_beg\", type:\"text\"},\n      {name:\"time_end\", type:\"text\"},\n      {name:\"name_rus_upper\", type:\"text\"},\n    ]);\n/*    this.openDb();*/\n  }\n\n\n\naddFromApi(){\n  this.api=new ConferenceApi(this.http);\n  this.api.getConference().subscribe(res=>{\n    let listApi=<conference[]>res;\n    for (let i=0;i<listApi.length;i++){\n      this.addItemConference(listApi[i]);\n    }\n  });\n}\n  addItemConference(conferenceSingle: conference) {\n    return new Promise(resolve => {\n\n      const InsertQuery = 'insert or replace into conference(' +\n        'id, ' +\n        'name_rus, ' +\n        'name_eng, ' +\n        'place_name, ' +\n        'place_name_eng, ' +\n        'place, ' +\n        'format, ' +\n        'format_eng, ' +\n        'contact, ' +\n        'contact_eng, ' +\n        'thematic_conference, ' +\n        'organizer, ' +\n        'organizer_eng, ' +\n        'date_event, ' +\n        'time_beg, ' +\n        'time_end,' +\n        'name_rus_upper' +\n        ') values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ? )';\n      this.db.executeSql(InsertQuery, [\n        conferenceSingle.id,\n        conferenceSingle.name_rus,\n        conferenceSingle.name_eng,\n        conferenceSingle.place_name,\n        conferenceSingle.place_name_eng,\n        conferenceSingle.place,\n        conferenceSingle.format,\n        conferenceSingle.format_eng,\n        conferenceSingle.contact,\n        conferenceSingle.contact_eng,\n        conferenceSingle.thematic_conference,\n        conferenceSingle.organizer,\n        conferenceSingle.organizer_eng,\n        conferenceSingle.date_event,\n        conferenceSingle.time_beg,\n        conferenceSingle.time_end,\n        conferenceSingle.name_rus.toUpperCase()\n\n      ], (r) => {\n        //console.log('Inserted... Sucess..', parseInt(conferenceSingle.id));\n        this.select().then(s => {\n          resolve(true)\n        });\n      }, e => {\n        //console.log('Inserted Error', e);\n        resolve(false);\n      })\n    })\n  }\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/conference-sql/conference-sql.ts","import {Injectable} from '@angular/core';\nimport {Http /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\nimport {BaseApi} from \"../base-api-service\";\n\n\n@Injectable()\nexport class ConferenceApi extends BaseApi{\n//  private baseUrl = 'http://army2017.ru/api';\n\n  private conference: any = {};\n\n\n  constructor(public http: Http) {\n    super(http);\n    //console.log('conferenceSingle api is created');\n  }\n\n  public userId:any;\n\n  getConference() {\n    //console.log('**about to make HTTP call for all');\n    return this.http.get(this.baseUrlApi+'conference_list.php')\n      .map(response => {\n        this.conference = response.json();\n        //console.log(\"after API\");\n        //console.log(this.conference);\n        return this.conference;\n      });\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/conference-sql/conference-api-service.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {ThematicConferenceSql} from \"../../providers/thematic-conference-sql/thematic-conference-sql\";\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {ConferenceSql} from \"../../providers/conference-sql/conference-sql\";\nimport {Http} from \"@angular/http\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\n\n\n@Component({\n    selector: 'page-conference-detail',\n    templateUrl: 'conference-detail.html'\n})\nexport class ConferenceDetailPage extends BaseListPageProvider {\n\n    element: any;\n    thematic: any;\n    myForum: any;\n\n    //\n\n\n    //interface strings\n    title: string;\n    onMapStr: string;\n    myForumStr: string;\n    thematicStr: string;\n\n    constructor(public NavCtrl: NavController,\n                public navParams: NavParams,\n                public thematicConferenceSql: ThematicConferenceSql,\n                public conferenceDetailSql: ConferenceSql,\n                public sqlMyForum: MyForumSql,\n                public events: Events,\n                public http: Http,\n                ) {\n        super(NavCtrl, navParams, events, http);\n        //console.log(\"now in conference detail\");\n        //console.log(navParams);\n        this.thematic = [];\n        if (navParams.data.element)\n            this.element = navParams.data.element;\n        else if (navParams.data.res) this.element = navParams.data.res;\n        this.iblockId = 14;\n\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Мероприятие');\n\n        this.onMapStr = 'На карте';\n        this.myForumStr = 'Мой форум';\n        this.thematicStr = 'Тематика:'\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Event');\n        this.onMapStr = 'Map';\n        this.myForumStr = 'My Forum';\n        this.thematicStr = 'Thematic Section:'\n    }\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        // this.userId = localStorage.getItem('userid');\n        this.thematicConferenceSql.getThematicOfConference(this.element.id).then(\n            res => {\n                if (res) {\n                    //console.log(\"res in thematicConference page=\", res);\n                    this.thematic = <any>res;\n\n                    /*  this.conferenceDetailSql.getFieldFromTable(this.element.id, 'id', 'myforum').then(\n                        //getMyForumForId(this.element.id).then(\n                        rs => {\n                          if (rs) {\n                            //console.log(\"res in element myForumitem\", rs);\n                            this.myForum = <any>rs;\n                          }\n            \n                        }\n                      );*/\n                }\n            }\n        );\n\n    }\n\n\n\n    /**\n     * add event to MyForum on the site and the mobile app\n     * @param id\n     */\n\n\n    async changeMyForum(element) {\n        if (this.userId) {\n            //   let participant = this.participantList.find(x => x.id == id);\n            //element.my_forum_id = id.my_forum_id;\n            // //console.log('was added =', element);\n            if (element.my_forum_id > 0) {\n\n                element.my_forum_id = await this.deleteFromMyForum(element.id);\n                this.events.publish('myforum:delete:conference', (element.id)\n                );\n            }\n            else {\n                element.my_forum_id = await this.addToMyForumSite(element.id);\n                // ''this.participantApi\n                this.events.publish('myforum:add:conference', ({id: element.id, my_forum_id: element.my_forum_id})\n                );\n\n\n\n            }\n        }\n    }\n\n    deleteFromMyForum(id) {\n        if (this.userId) {\n            this.sqlMyForum.delFromMyForum(id).then(res => {\n                if (res) return null;\n                else return -1;\n            });\n        }\n    }\n\n    async addToMyForumSite(id) {\n        if (this.userId) {\n            return await this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId);\n        }\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conference-detail/conference-detail.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseLangPageProvider} from \"../base-lang-page/base-lang-page\";\nimport {Events, NavController} from \"ionic-angular\";\n\n\n@Injectable()\nexport class FilterConferenceProvider extends BaseLangPageProvider{\n  filterStr: string;\n\n\n  public thematicConferenceField: string;\n  public thematicConferenceTitle: string;\n  public thematicConferenceValue: string;\n\n  public mapField: string;\n  public mapTitle: string;\n  public mapValue: string;\n\n  public placeField: string;\n  public placeTitle: string;\n  public placeValue: string;\n\n /* public countryField: string;\n  public countryTitle: string;\n  public countryValue: string;*/\n\n  public dateField: string;\n  public dateTitle: string;\n  public dateValue: string;\n\n  public partOfName: string;\n\n/*  setFilterStr: string;\n  cancelFilterStr: string;*/\n  findName: string;\n\n  constructor(public navCtrl: NavController,\n              public http: Http,\n              public events: Events) {\n    super(navCtrl, events, http)\n    //console.log('Hello FilterExhibitProvider Provider');\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n    this.thematicConferenceTitle = 'Тематика';\n    this.mapTitle = 'Павильоны';\n    this.placeTitle = 'Стенды';\n    this.dateTitle = 'Дата';\n\n    //interface strings\n    this.setFilterStr = 'Установить';\n    this.cancelFilterStr = 'Отменить';\n    this.findName = 'Наименование';\n  }\n\n  setEnglishStrings(){\n    super.setEnglishStrings();\n    this.thematicConferenceTitle = 'Thema';\n    this.mapTitle = 'Hall';\n    this.placeTitle = 'Stand';\n    this.dateTitle = 'Date of event';\n    //interface strings\n    this.setFilterStr = 'Set';\n    this.cancelFilterStr = 'Cancel';\n    this.findName = 'Name';\n  }\n\n  setFilterValue(filterStr) {\n    this.filterStr = filterStr;\n    //console.log(\"provider this.filterStr\",this.filterStr)\n  }\n\n/*  filterCreateWhereStr() {\n    //console.log(\"this.thematicConferenceValue\", this.thematicConferenceValue);\n    //console.log(\"this.countryValue\", this.countryValue);\n    //console.log(\"this.mapValue=\", this.mapValue);\n    //console.log(\"(this.placeValue=\", this.placeValue);\n    let whereStr = '';\n\n    if ((this.partOfName) && (this.partOfName != '')) {\n      if (this.lang == 'ru') {\n        whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.partOfName.toUpperCase() + '%\"';\n      }\n      else {\n        whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.partOfName.toUpperCase() + '%\"'\n      }\n\n    }\n\n    if ((this.countryValue) && (this.countryValue != '')) {\n      if (this.lang == 'ru') {\n        whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_rus=\"' + this.countryValue + '\"';\n      }\n      else {\n        whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_eng=\"' + this.countryValue + '\"';\n      }\n    }\n    if ((this.mapValue) && ((this.placeValue == '') && (this.mapValue != ''))) {\n      let places = new BaseSql(this.http, 'place');\n      places.selectDistinct('id', 'name_map=\"' + this.mapValue + '\"').then(res => {\n        let placeList = <any>res;\n        //console.log(\"place\", placeList);\n        if (placeList.length() > 0) whereStr += ((whereStr != '') ? ' and (' : ' (');\n        for (let i = 0; i < placeList.length(); i++) {\n          whereStr += ' place=' + placeList[i].id;\n          if (i < placeList.length() - 1) whereStr += ' or ';\n        }\n        whereStr += ')';\n      })\n      //console.log(\"((this.placeValue=='') && (this.mapValue!=''))\", whereStr);\n    }\n\n    if (this.thematicConferenceValue) {\n\n      whereStr += ((whereStr != '') ? ' and ' : '') + '(a.thematic=\"' + this.thematicConferenceValue + '\" or a.thematic like \"' + this.thematicConferenceValue +\n        ',%\"' + ' or a.thematic like \"%,' + this.thematicConferenceValue + '\" or  a.thematic like \"%,' + this.thematicConferenceValue + ',%\")';\n    }\n    //console.log(\"(whereStr after thematic=\", whereStr);\n\n    /!*if (this.partOfName != '') whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus like ' + '\"%' + this.partOfName + '%\"';\n     *!/\n    if (this.placeValue && (this.placeValue != ''))\n      whereStr += ((whereStr != '') ? ' and ' : '') + '  a.place=\"' + this.placeValue + '\"';\n    if (whereStr != '') whereStr = ' where ' + whereStr;\n    //console.log('so whereStr is =', whereStr);\n    return whereStr;\n  }*/\n\n\n  cancelFilter() {\n    this.thematicConferenceField = '';\n    this.thematicConferenceValue = '';\n    this.mapField = '';\n    this.mapValue = '';\n    this.placeField = '';\n    this.placeValue = '';\n    this.dateField = '';\n    this.dateValue = '';\n   /* this.countryField = '';\n    this.countryValue = '';*/\n    this.findName='';\n     this.partOfName='';\n\n      this.filterStr='';\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/filter-provider/filter-conference-provider.ts","import {Component} from '@angular/core';\nimport {AlertController, Events, NavController, NavParams, Platform} from 'ionic-angular';\nimport {BarcodeScanner} from '@ionic-native/barcode-scanner';\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\nimport {BaseSql} from \"../../providers/base-sql\";\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\n\n\n/**\n * Generated class for the BarScannerPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-bar-scanner',\n  templateUrl: 'bar-scanner.html',\n})\nexport class BarScannerPage extends BaseLangPageProvider {\n  participantId = 1;\n  conferenceId = 14;\n  badgeId = 22;\n  contactId = 23;\n\n  participantStr: string;\n  conferenceStr: string;\n  contactStr: string;\n  inMyForumStr: string;\n  inContactStr:string;\n  addedStr:string;\n  constructor(public navCtrl: NavController, public navParams: NavParams, public barcodeScanner: BarcodeScanner, public events: Events,\n              public http: Http, public platform: Platform, public alertCtrl: AlertController) {\n    super(navCtrl, events, http);\n  }\n\n  ionViewDidLoad() {\n    super.ionViewDidLoad();\n    //console.log('ionViewDidLoad QrScannerPage');\n    //  this.scan2();\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings('QR сканер');\n    this.participantStr = 'Участник';\n    this.conferenceStr = 'Мероприятие';\n    this.contactStr = 'Контакт';\n    this.inMyForumStr = ' (Мой форум)';\n    this.contactStr='Контакт';\n    this.inContactStr='уже сохранен';\n    this.addedStr='добавлен в контакты';\n\n\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings('QR scanner');\n    this.participantStr = 'Exhibitor';\n    this.conferenceStr = 'Event';\n    this.contactStr = 'Contact';\n    this.inMyForumStr = ' in My Forum';\n    this.contactStr='Contact';\n    this.inContactStr='is saved';\n    this.addedStr='added in contact';\n\n  }\n\n\n  scanBarCode() {\n    //console.log('scannig product barcode');\n    this.platform.ready().then(() => {\n      this.barcodeScanner.scan().then((result) => {\n        if (!result.cancelled) {\n          //console.log(result.text);\n          //console.log(result.format);\n          let qrcode = result.text;\n          let tableParticipant = new BaseSql(this.http, 'participant');\n          tableParticipant.selectWhere('qrcode=\"' + qrcode+'\"').then(res => {\n            //console.log(\"res\",<any>res);\n            if (res) {\n\n              let rec = <any>res[0];\n              //console.log(rec);\n              let tableMyForum = new MyForumSql(this.http);\n              tableMyForum.selectWhere('my_iblock_id=' + this.participantId + ' and my_id=' + rec.id+' and user='+this.userId).then(rs => {\n                //console.log(\"rs=\",rs);\n                if (rs) {\n                  let alert = this.alertCtrl.create({\n                    title: this.participantStr + this.inMyForumStr,\n                    subTitle: ((this.lang == 'ru') ? rec.name_rus : rec.name_eng),\n                    buttons: ['OK']\n                  });\n                  alert.present();\n                }\n                else {\n                  let confirm = this.alertCtrl.create({\n                    title: this.participantStr,\n                    message: this.addStr+' '+((this.lang == 'ru') ? rec.name_rus : rec.name_eng)+' ' + this.inMyForumStr,\n                    buttons: [\n                      {\n                        text: this.yesStr,\n                        handler: () => {\n                          //console.log('Yes clicked');\n                          tableMyForum.addToMyForumSite(rec.id, this.participantId, this.userId).then(res => {\n                            //console.log(rec.name_rus, \" added\");\n                          })\n                        }\n                      },\n                      {\n                        text: this.noStr,\n                        handler: () => {\n                          //console.log('No clicked');\n                        }\n                      }\n                    ]\n                  });\n                  confirm.present();\n                }\n\n              });\n            }\n            else {\n              let tableConference = new BaseSql(this.http, 'conference');\n              tableConference.selectWhere('qrcode=\"' + qrcode+'\"').then(resConference => {\n                if (resConference) {\n                  let rec = <any>resConference[0];\n                  //console.log(rec);\n                  let tableMyForum = new MyForumSql(this.http);\n                  tableMyForum.selectWhere('my_iblock_id=' + this.conferenceId +\n                    ' and my_id=' + rec.id+' and user='+this.userId).then(rsMyForumConference => {\n                    //console.log(\"rsMyForumConference=\",rsMyForumConference);\n                    if (rsMyForumConference) {\n                      let alert = this.alertCtrl.create({\n                        title: this.conferenceStr + this.inMyForumStr,\n                        subTitle: ((this.lang == 'ru') ? rec.name_rus : rec.name_eng),\n                        buttons: ['OK']\n                      });\n                      alert.present();\n                    }\n                    else {\n                      let confirm = this.alertCtrl.create({\n                        title: this.conferenceStr,\n                        message: this.addStr+' '+((this.lang == 'ru') ? rec.name_rus : rec.name_eng)+' ' + this.inMyForumStr,\n                        buttons: [\n                          {\n                            text: this.yesStr,\n                            handler: () => {\n                              //console.log('Yes clicked');\n                              tableMyForum.addToMyForumSite(rec.id, this.conferenceId, this.userId).then(res => {\n                                //console.log(rec.name_rus, \" added\");\n                              });\n                            }\n                          },\n                          {\n                            text: this.noStr,\n                            handler: () => {\n                              //console.log('No clicked');\n                            }\n                          }\n                        ]\n                      });\n                      confirm.present();\n                    }\n\n                  });\n                }\n                else {\n                  let tableContact = new BaseSql(this.http, 'contact');\n                  tableContact.selectWhere('qrcode=\"' + qrcode+'\"').then(resContact => {\n                    if (resContact) {\n                      let rec = <any>resContact[0];\n                      let alert = this.alertCtrl.create({\n                        title: this.contactStr + this.inContactStr,\n                        subTitle: ((this.lang == 'ru') ? rec.name_rus : rec.name_eng),\n                        buttons: ['OK']\n                      });\n                      alert.present();\n                    }\n                    else {//if (!resContact) {\n                      let myApi=new BaseSql(this.http,'contact');\n                      myApi.loadApi('api/contact/get_contact.php');\n                      let alert = this.alertCtrl.create({\n                        title: this.addedStr ,\n                        subTitle: qrcode,\n                        buttons: ['OK']\n                      });\n                      alert.present();\n                    }\n                  });\n\n                }\n\n              });\n            }\n          });\n\n        }\n      }, (error) => {\n        //console.log('error when scanning product barcode', error);\n      });\n    });\n\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/bar-scanner/bar-scanner.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {Http} from \"@angular/http\";\nimport {ExhibitSql} from \"../../providers/exhibit/exhibit-sql\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\n\n\n@Component({\n    selector: 'page-exhibit-detail',\n    templateUrl: 'exhibit-detail.html'\n})\nexport class ExhibitDetailPage extends BaseListPageProvider {\n    element: any;\n    thematic: any;\n    myForum: any;\n\n\n    //interface strings\n    title: string;\n    onMapStr: string;\n    myForumStr: string;\n    thematicStr: string;\n    charactersStr: string;\n    characters = [];\n\n    // characteristicsHtml: string;\n\n    constructor(public NavCtrl: NavController,\n                public navParams: NavParams,\n                public exhibitDetailSql: ExhibitSql,\n                public sqlMyForum: MyForumSql,\n                public events: Events,\n                public http: Http,\n               ) {\n        super(NavCtrl, navParams, events, http);\n        //console.log(\"now in exhibit detail\");\n        //console.log(navParams);\n        this.thematic = [];\n        if (navParams.data.element)\n            if (navParams.data.element.length)\n                this.element = navParams.data.element[0];\n            else this.element = navParams.data.element;\n        else if (navParams.data.res) this.element = navParams.data.res;\n        this.iblockId = 10;\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Экспонат');\n        this.charactersStr = 'ТТХ';\n        this.onMapStr = 'На карте';\n        this.myForumStr = 'Мой форум';\n        this.thematicStr = 'Тематика:'\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Exhibit');\n        this.charactersStr = 'Technical characteristics';\n        this.onMapStr = 'Map';\n        this.myForumStr = 'My Forum';\n        this.thematicStr = 'Thematic Section:'\n    }\n\n    /*\n    Время развертывания, мин::\n    первой очереди (без палаток):\n    10; полное:30-45 мин;;\n    Вместимость предперевязочной и эвакуационной палаток, чел:: на носилках: 18; сидя (дополнительно) - 10;;\n     */\n    prepareCharacteristics() {\n\n        this.characters = [];\n        // let tmpHtml = '';\n        if (!this.element.characteristics) return;\n        let doubleSemiColon = this.element.characteristics.split(';;');\n        //  if (doubleSemiColon.length > 1) {\n        //    let i = 0;\n        for (let i = 0; i < doubleSemiColon.length; i++) {\n\n\n            let doubleColon = doubleSemiColon[i].split('::');\n\n            for (let j = 0; j < doubleColon.length; j++) {\n\n                let singleComma = doubleColon[j].split(';');\n                singleComma.forEach(singleCommaStr => {\n                    let tmpStr: string;\n                    let size: number = 0;\n\n                    tmpStr = singleCommaStr;\n                    if (i == 0 && j == 0) {\n                        tmpStr += ':';\n                        size = 2\n                    }\n\n                    this.characters.push({size: size, text: tmpStr});\n                    /*let singleColon=singleCommaStr.split(':');\n                    singleColon.forEach(singleColonStr=>{\n                      this.characters.push(singleColonStr);\n                    })*/\n                });\n            }\n        }\n    }\n\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        // this.userId = localStorage.getItem('userid');\n\n        this.prepareCharacteristics();\n        this.exhibitDetailSql.getFieldFromTable(this.element.id, 'id', 'myforum').then(\n            //getMyForumForId(this.conferenceSingle.id).then(\n            rs => {\n                if (rs) {\n                //    //console.log(\"res in conferenceSingle myForumExhibit\", rs);\n                    this.myForum = <any>rs;\n                }\n\n            }\n        );\n\n\n    }\n\n\n\n\n    async changeMyForum(element) {\n        if (this.userId) {\n         //   let participant = this.participantList.find(x => x.id == id);\n            //element.my_forum_id = id.my_forum_id;\n            // //console.log('was added =', element);\n            if (element.my_forum_id > 0) {\n\n                element.my_forum_id = await this.deleteFromMyForum(element.id);\n                this.events.publish('myforum:delete:exhibit', (element.id)\n                );\n            }\n            else {\n                element.my_forum_id = await this.addToMyForumSite(element.id);\n                // ''this.participantApi\n                this.events.publish('myforum:add:exhibit', ({id: element.id, my_forum_id: element.my_forum_id})\n                );\n\n\n\n            }\n        }\n    }\n\n    deleteFromMyForum(id) {\n        if (this.userId) {\n            this.sqlMyForum.delFromMyForum(id).then(res => {\n                if (res) return null;\n                else return -1;\n            });\n        }\n    }\n\n    async addToMyForumSite(id) {\n        if (this.userId) {\n            return await this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId);\n        }\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/exhibit-detail/exhibit-detail.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseSql} from \"../base-sql\";\nimport {ExhibitApiService} from \"../../providers/exhibit/exhibit-api-service\";\n\n/*\n Generated class for the exhibitSql provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n\n\n\nexport interface exhibitRus {\n  id: string;\n  name_rus: string;\n  name_rus_upper: string;\n  place_name: string;\n\n  place: string;\n  format: string;\n\n  contact: string;\n\n  thematic_exhibit: string;\n  organizer: string;\n\n  date_event: string;\n  time_beg: string;\n  time_end: string;\n\n\n}\n\nexport interface exhibit extends exhibitRus {\n\n  name_eng: string;\n\n  place_name_eng: string;\n\n\n  format_eng: string;\n\n  contact_eng: string;\n\n\n  organizer_eng: string;\n\n\n\n\n\n}\n\nexport interface ExhibitsSql extends exhibitRus{\n\n  my_forum_id: string;\n  place_name_place: string;\n}\n\n\n\ndeclare let window: any;\n\n@Injectable()\nexport class ExhibitSql extends BaseSql{\n  public text: string = \"\";\n/*  public db = null;\n  public arr = [];*/\n\n  public api:ExhibitApiService;\n\n  constructor(public http: Http) {\n    super(http,'exhibit',[\n      {name:\"id\", type:\"text PRIMARY KEY\"},\n        {name:\"name_place\",type:\"text\"},\n        {name:\"coords\", type:\"text\"},\n        {name:\"name_rus\", type:\"text\"},\n        {name:\"purpose\", type:\"text\"},\n        {name:\"characteristics\", type:\"text\"},\n        {name:\"name_eng\", type:\"text\"},\n        {name:\"purpose_eng\", type:\"text\"},\n        {name:\"composition\", type:\"text\"},\n        {name:\"characteristics_eng\", type:\"text\"},\n        {name:\"map\", type:\"text\"},\n        {name:\"name_map\", type:\"text\"},\n        {name:\"place\",type:\"text\"}]);\n\n\n\n\n\n\n  }\n\n\n\naddFromApi(){\n  this.api=new ExhibitApiService(this.http);\n  this.api.getExhibit().subscribe(res=>{\n    let listApi=<exhibit[]>res;\n    for (let i=0;i<listApi.length;i++){\n   //   this.addItemexhibit(listApi[i]);\n    }\n  });\n}\n/*  addItemexhibit(exhibitSingle: exhibit) {\n    return new Promise(resolve => {\n\n      const InsertQuery = 'insert or replace into exhibit(' +\n        'id, ' +\n        'name_rus, ' +\n        'name_eng, ' +\n        'place_name, ' +\n        'place_name_eng, ' +\n        'place, ' +\n        'format, ' +\n        'format_eng, ' +\n        'contact, ' +\n        'contact_eng, ' +\n        'thematic_exhibit, ' +\n        'organizer, ' +\n        'organizer_eng, ' +\n        'date_event, ' +\n        'time_beg, ' +\n        'time_end,' +\n        'name_rus_upper' +\n        ') values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ? )';\n      this.db.executeSql(InsertQuery, [\n        exhibitSingle.id,\n        exhibitSingle.name_rus,\n        exhibitSingle.name_eng,\n        exhibitSingle.place_name,\n        exhibitSingle.place_name_eng,\n        exhibitSingle.place,\n        exhibitSingle.format,\n        exhibitSingle.format_eng,\n        exhibitSingle.contact,\n        exhibitSingle.contact_eng,\n        exhibitSingle.thematic_exhibit,\n        exhibitSingle.organizer,\n        exhibitSingle.organizer_eng,\n        exhibitSingle.date_event,\n        exhibitSingle.time_beg,\n        exhibitSingle.time_end,\n        exhibitSingle.name_rus.toUpperCase()\n\n      ], (r) => {\n        //console.log('Inserted... Sucess..', parseInt(exhibitSingle.id));\n        this.select().then(s => {\n          resolve(true)\n        });\n      }, e => {\n        //console.log('Inserted Error', e);\n        resolve(false);\n      })\n    })\n  }*/\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/exhibit/exhibit-sql.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseLangPageProvider} from \"../base-lang-page/base-lang-page\";\nimport {Events, NavController} from \"ionic-angular\";\n\n\n@Injectable()\nexport class FilterExhibitProvider extends BaseLangPageProvider {\n    public thematicField: string;\n\n\n    filterStr: string;\n    public thematicTitle: string;\n    public thematicValue: string;\n\n    public mapField: string;\n    public mapTitle: string;\n    public mapValue: string;\n\n    public placeField: string;\n    public placeTitle: string;\n    public placeValue: string;\n\n    public countryField: string;\n    public countryTitle: string;\n    public countryValue: string;\n\n    public partOfName: string;\n\n    /*  setFilterStr: string;\n      cancelFilterStr: string;*/\n    findName: string;\n\n    constructor(public navCtrl: NavController,\n                public http: Http,\n                public events: Events) {\n        super(navCtrl, events, http)\n        //console.log('Hello FilterExhibitProvider Provider');\n\n    }\n\n    setFilterValue(filterStr) {\n        this.filterStr = filterStr;\n        //console.log(\"exhibit this.filterStr\", this.filterStr)\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings();\n        this.thematicTitle = 'Тематика';\n        this.mapTitle = 'Павильоны';\n        this.placeTitle = 'Стенды';\n        this.countryTitle = 'Страны';\n\n        //interface strings\n        this.setFilterStr = 'Установить';\n        this.cancelFilterStr = 'Отменить';\n        this.findName = 'Наименование';\n\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings();\n        this.thematicTitle = 'Thema';\n        this.mapTitle = 'Hall';\n        this.placeTitle = 'Stand';\n        this.countryTitle = 'Country';\n\n        //interface strings\n        this.setFilterStr = 'Set';\n        this.cancelFilterStr = 'Cancel';\n        this.findName = 'Name';\n    }\n\n    cancelFilter() {\n        this.thematicField = '';\n        this.thematicValue = '';\n        this.mapField = '';\n        this.mapValue = '';\n        this.placeField = '';\n        this.placeValue = '';\n        this.countryField = '';\n        this.countryValue = '';\n        this.findName = '';\n\n        this.filterStr = '';\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/filter-provider/filter-exhibit-provider.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {Http} from \"@angular/http\";\nimport {ExhibitSql} from \"../../providers/exhibit/exhibit-sql\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\n\n\n@Component({\n    selector: 'page-demo-program-detail',\n    templateUrl: 'demo-program-detail.html'\n})\nexport class DemoProgramDetailPage extends BaseListPageProvider {\n    element: any;\n    thematic: any;\n    myForum: any;\n\n\n    //interface strings\n    title: string;\n    onMapStr: string;\n    myForumStr: string;\n    thematicStr: string;\n    charactersStr: string;\n    characters = [];\n\n    // characteristicsHtml: string;\n\n    constructor(public NavCtrl: NavController,\n                public navParams: NavParams,\n                public exhibitDetailSql: ExhibitSql,\n                public sqlMyForum: MyForumSql,\n                public events: Events,\n                public http: Http,\n               ) {\n        super(NavCtrl, navParams, events, http);\n        //console.log(\"now in exhibit detail\");\n        //console.log(navParams);\n        this.thematic = [];\n        if (navParams.data.element)\n            if (navParams.data.element.length)\n                this.element = navParams.data.element[0];\n            else this.element = navParams.data.element;\n        else if (navParams.data.res) this.element = navParams.data.res;\n        this.iblockId = 10;\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Экспонат');\n        this.charactersStr = 'ТТХ';\n        this.onMapStr = 'На карте';\n        this.myForumStr = 'Мой форум';\n        this.thematicStr = 'Тематика:'\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Exhibit');\n        this.charactersStr = 'Technical characteristics';\n        this.onMapStr = 'Map';\n        this.myForumStr = 'My Forum';\n        this.thematicStr = 'Thematic Section:'\n    }\n\n    /*\n    Время развертывания, мин::\n    первой очереди (без палаток):\n    10; полное:30-45 мин;;\n    Вместимость предперевязочной и эвакуационной палаток, чел:: на носилках: 18; сидя (дополнительно) - 10;;\n     */\n    prepareCharacteristics() {\n\n        this.characters = [];\n        // let tmpHtml = '';\n        if (!this.element.characteristics) return;\n        let doubleSemiColon = this.element.characteristics.split(';;');\n        //  if (doubleSemiColon.length > 1) {\n        //    let i = 0;\n        for (let i = 0; i < doubleSemiColon.length; i++) {\n\n\n            let doubleColon = doubleSemiColon[i].split('::');\n\n            for (let j = 0; j < doubleColon.length; j++) {\n\n                let singleComma = doubleColon[j].split(';');\n                singleComma.forEach(singleCommaStr => {\n                    let tmpStr: string;\n                    let size: number = 0;\n\n                    tmpStr = singleCommaStr;\n                    if (i == 0 && j == 0) {\n                        tmpStr += ':';\n                        size = 2\n                    }\n\n                    this.characters.push({size: size, text: tmpStr});\n                    /*let singleColon=singleCommaStr.split(':');\n                    singleColon.forEach(singleColonStr=>{\n                      this.characters.push(singleColonStr);\n                    })*/\n                });\n            }\n        }\n    }\n\n\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        // this.userId = localStorage.getItem('userid');\n\n        this.prepareCharacteristics();\n        this.exhibitDetailSql.getFieldFromTable(this.element.id, 'id', 'myforum').then(\n            //getMyForumForId(this.conferenceSingle.id).then(\n            rs => {\n                if (rs) {\n                //    //console.log(\"res in conferenceSingle myForumExhibit\", rs);\n                    this.myForum = <any>rs;\n                }\n\n            }\n        );\n\n\n    }\n\n    async changeMyForum(element) {\n        if (this.userId) {\n            //   let participant = this.participantList.find(x => x.id == id);\n            //element.my_forum_id = id.my_forum_id;\n            // //console.log('was added =', element);\n            if (element.my_forum_id > 0) {\n\n                element.my_forum_id = await this.deleteFromMyForum(element.id);\n                this.events.publish('myforum:delete:demo', (element.id)\n                );\n            }\n            else {\n                element.my_forum_id = await this.addToMyForumSite(element.id);\n                // ''this.participantApi\n                this.events.publish('myforum:add:demo', ({id: element.id, my_forum_id: element.my_forum_id})\n                );\n\n\n\n            }\n        }\n    }\n\n    deleteFromMyForum(id) {\n        if (this.userId) {\n            this.sqlMyForum.delFromMyForum(id).then(res => {\n                if (res) return null;\n                else return -1;\n            });\n        }\n    }\n\n    async addToMyForumSite(id) {\n        if (this.userId) {\n            return await this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/demo-program-detail/demo-program-detail.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseLangPageProvider} from \"../base-lang-page/base-lang-page\";\nimport {Events, NavController} from \"ionic-angular\";\n\n\n@Injectable()\nexport class FilterDemoProgramProvider extends BaseLangPageProvider{\n  filterStr: string;\n\n\n\n  public placeField: string;\n  public placeTitle: string;\n  public placeValue: string;\n\n /* public countryField: string;\n  public countryTitle: string;\n  public countryValue: string;*/\n\n  public dateField: string;\n  public dateTitle: string;\n  public dateValue: string;\n\n  public partOfName: string;\n\n/*  setFilterStr: string;\n  cancelFilterStr: string;*/\n  findName: string;\n\n  constructor(public navCtrl: NavController,\n              public http: Http,\n              public events: Events) {\n    super(navCtrl, events, http)\n    //console.log('Hello FilterExhibitProvider Provider');\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n\n    this.placeTitle = 'Стенды';\n    this.dateTitle = 'Дата';\n\n    //interface strings\n    this.setFilterStr = 'Установить';\n    this.cancelFilterStr = 'Отменить';\n    this.findName = 'Наименование';\n  }\n\n  setEnglishStrings(){\n    super.setEnglishStrings();\n\n    this.placeTitle = 'Stand';\n    this.dateTitle = 'Date of event';\n    //interface strings\n    this.setFilterStr = 'Set';\n    this.cancelFilterStr = 'Cancel';\n    this.findName = 'Name';\n  }\n\n  setFilterValue(filterStr) {\n    this.filterStr = filterStr;\n    //console.log(\"provider this.filterStr\",this.filterStr)\n  }\n\n\n\n\n  cancelFilter() {\n\n    this.placeField = '';\n    this.placeValue = '';\n    this.dateField = '';\n    this.dateValue = '';\n   /* this.countryField = '';\n    this.countryValue = '';*/\n    this.findName='';\n\n      this.filterStr='';\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/filter-provider/filter-demo-program-provider.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the AboutForumPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n    selector: 'page-about-forum',\n    templateUrl: 'about-forum.html',\n})\nexport class AboutForumPage extends BaseListPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl, navParams, events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad AboutForumPage');\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('О Форуме');\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('About Forum');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about-forum/about-forum.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {ParticipantDetailPage} from \"../participant-detail/participant-detail\";\nimport {ConferenceDetailPage} from \"../conference-detail/conference-detail\";\nimport {PlaceSql, place} from \"../../providers/place-sql/place-sql\";\nimport {LeafletMapPage} from \"../leaflet-map/leaflet-map\";\nimport {map, MapSql} from \"../../providers/map-sql/map-sql\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\nimport {ExhibitDetailPage} from \"../exhibit-detail/exhibit-detail\";\nimport {DemoProgramDetailPage} from \"../demo-program-detail/demo-program-detail\";\n\n/**\n * Generated class for the MyForumPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n    selector: 'page-my-forum',\n    templateUrl: 'my-forum.html',\n})\nexport class MyForumPage extends BaseListPageProvider {\n\n    public myForumParticipant: any;\n    public myForumApi: any;\n\n    public myForumConference: any;\n    public myForumExhibit: any;\n    public myForumDemoProgram: any;\n\n\n    public forumSegment: string = 'conferenceItems';\n\n\n    participantStr: string;\n    conferenceStr: string;\n    exhibitStr: string;\n    demoStr: string;\n\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public http: Http,\n                public sqlMyForum: MyForumSql,\n                public placeSql: PlaceSql,\n                public mapSql: MapSql,\n                public events: Events,) {\n        super(navCtrl, navParams, events, http);\n        this.setEvents();\n\n\n    }\n\n    setEvents() {\n        //for participants\n\n        this.events.subscribe('myforum:add:participant', (id) => {\n                //console.log('was added id =', id);\n                \n                let participant = this.myForumParticipant.find(x => x.id == id.id);\n            participant.my_forum_id = id.my_forum_id;\n                //console.log('was added =', participant);\n            }\n        );\n        this.events.subscribe('myforum:delete:participan', (id) => {\n                //console.log('was deleted id=', id);\n                let participant = this.myForumParticipant.find(x => x.id == id);\n            participant.my_forum_id = null;\n                //console.log('was deleted =', participant);\n                if (this.lang == 'ru') this.selectParticipantRus();\n                else this.selectParticipantEng();\n            }\n        );\n\n        //for exhibit\n        this.events.subscribe('myforum:add:exhibit', (id) => {\n                //console.log('was added id =', id);\n                let exhibit = this.myForumExhibit.find(x => x.id == id.id);\n                exhibit.my_forum_id = id.my_forum_id;\n                //console.log('was added =', exhibit);\n                if (this.lang == 'ru') this.selectExhibitRus();\n                else this.selectExhibitEng();\n\n            }\n        );\n        this.events.subscribe('myforum:delete:exhibit', (id) => {\n                //console.log('was deleted id=', id);\n                let exhibit = this.myForumExhibit.find(x => x.id == id);\n                exhibit.my_forum_id = null;\n                //console.log('was deleted =', exhibit);\n                if (this.lang == 'ru') this.selectExhibitRus();\n                else this.selectExhibitEng();\n            }\n        );\n\n//for DemoProgram\n        this.events.subscribe('myforum:add:demo', (id) => {\n                //console.log('was added id =', id);\n                let demo = this.myForumDemoProgram.find(x => x.id == id.id);\n                demo.my_forum_id = id.my_forum_id;\n                //console.log('was added =', demo);\n                if (this.lang == 'ru') this.selectDemoProgramRus();\n                else this.selectDemoProgramEng();\n            }\n        );\n        this.events.subscribe('myforum:delete:demo', (id) => {\n                //console.log('was deleted id=', id);\n                let demo = this.myForumDemoProgram.find(x => x.id == id);\n                demo.my_forum_id = null;\n                //console.log('was deleted =', demo);\n                if (this.lang == 'ru') this.selectDemoProgramRus();\n                else this.selectDemoProgramEng();\n            }\n        );\n        //\n        this.events.subscribe('myforum:add:conference', (id) => {\n                //console.log('was added id =', id);\n                let conferenceSingle = this.myForumConference.find(x => x.id == id.id);\n                conferenceSingle.my_forum_id = id.my_forum_id;\n                //console.log('was added =', conferenceSingle);\n            }\n        );\n        this.events.subscribe('myforum:delete:conference', (id) => {\n                //console.log('was deleted id=', id);\n                let conferenceSingle = this.myForumConference.find(x => x.id == id);\n                conferenceSingle.my_forum_id = null;\n                //console.log('was deleted =', conferenceSingle);\n            }\n        );\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Мой форум');\n\n        this.participantStr = 'Участники';\n        this.conferenceStr = 'Конференция';\n        this.exhibitStr = 'Экспонаты МO';\n        this.demoStr = 'Демо программа';\n\n\n    }\n\n    setEnglishStrings() {\n        this.titleStr = 'My Forum';\n        this.participantStr = 'Exhibitors';\n        this.conferenceStr = 'Conference';\n        this.exhibitStr = 'Exhibits of MoD';\n        this.demoStr = 'Demo program';\n\n    }\n\n    getApi() {\n        //get My Forum for the User\n        if (!this.userId) alert(\"Незарегистрированный пользователь\");\n        //console.log('run promise for myForumParticipant. run!');\n        this.http.get('http://army2017.ru/api/my_forum/my_forum_list.php?USER=' + this.userId + '&LOWERCASE=1').map(res => res.json()).subscribe(data => {\n            this.myForumApi = data;\n            //console.log(this.myForumApi);\n            //console.log('delete all');\n            this.sqlMyForum.delAll();\n            //console.log('insert new elements for myforum');\n            this.sqlMyForum.addItemList(this.myForumApi);\n            if (this.lang == 'ru') {\n                this.selectParticipantRus();\n                this.selectConferenceRus();\n                this.selectExhibitRus();\n                this.selectDemoProgramRus();\n            }\n            else {\n                this.selectParticipantEng();\n                this.selectConferenceEng();\n                this.selectExhibitEng();\n                this.selectDemoProgramEng();\n            }\n\n\n        });\n\n    }\n\n    ionViewDidLoad() {\n\n        super.ionViewDidLoad();\n        this.getApi();\n\n\n    }\n\n    ionViewWillEnter() {\n        //  this.refreshMyForum();\n    }\n\n    refreshMyForum() {\n        //console.log(\"refreshMyForum\");\n        this.getApi();\n\n\n    }\n\n    selectParticipantRus() {\n        //console.log('selectParticipantRus');\n        this.sqlMyForum.getRusParticipantMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumParticipant = res;\n        })\n\n    }\n\n\n    selectParticipantEng() {\n        //console.log('selectParticipantEng');\n        this.sqlMyForum.getEngParticipantMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumParticipant = res;\n        })\n\n    }\n\n\n    selectExhibitRus() {\n        //console.log('selectParticipantRus');\n        this.sqlMyForum.getRusExhibitMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumExhibit = res;\n        })\n\n    }\n\n\n    selectExhibitEng() {\n        //console.log('selectParticipantEng');\n        this.sqlMyForum.getEngExhibitMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumExhibit = res;\n        })\n\n    }\n\n    selectConferenceRus() {\n        //console.log('selectConferenceRus');\n        this.sqlMyForum.getRusConferenceMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumConference = res;\n        })\n\n    }\n\n\n    selectConferenceEng() {\n        //console.log('selectConferenceEng');\n        this.sqlMyForum.getEngConferenceMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumConference = res;\n        })\n\n    }\n\n    selectDemoProgramRus() {\n        //console.log('selectConferenceRus');\n        this.sqlMyForum.getRusDemoProgramMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumDemoProgram = res;\n        })\n\n    }\n\n\n    selectDemoProgramEng() {\n        //console.log('selectConferenceEng');\n        this.sqlMyForum.getEngDemoProgramMyForum(this.userId).then(res => {\n            //console.log('our select');\n            //console.log(res);\n            this.myForumDemoProgram = res;\n        })\n\n    }\n\n    changeForumSegment(itemSegment) {\n        //console.log(itemSegment);\n        this.forumSegment = itemSegment;\n\n    }\n\n    /*\n      selectItems() {\n        ////////console.log(\"this.myForumParticipant\");\n        // this.myForumParticipant=this.sqlMyForum.getRows2();\n\n        ////////console.log(this.myForumParticipant);\n        this.sqlMyForum.select().then(res => {\n          //console.log('our select');\n          //console.log(res);\n          this.myForumParticipant = res;\n        })\n      }\n    */\n\n    goToParticipantDetail(participant) {\n        //console.log(\"goToParticipantDetail()\");\n        //console.log(participant);\n        // go to the session detail page\n        // and pass in the session data\n        /* this.navCtrl.push(ParticipantDetailPage, {\n             participant\n         });*/\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusParticipantFull('where a.id=' + participant.id).then(res => {\n                let participant = <any>res;\n                //console.log(\"participantDetail=\", participant);\n                this.navCtrl.push(ParticipantDetailPage, {\n                    participant: participant,\n                    listOut: this.myForumParticipant\n                }).then(res => {\n                    //console.log(\"i return from page\", res);\n                });\n            });\n        } else\n            this.sqlMyForum.getEngParticipantFull('where a.id=' + participant.id).then(res => {\n                let participant = <any>res;\n                this.navCtrl.push(ParticipantDetailPage, {\n                    participant: participant,\n                    listOut: this.myForumParticipant\n                }).then(res => {\n                        //console.log(\"i return from page\", res);\n\n                    }\n                );\n            });\n    }\n\n    /*  delFromMyForum(id) {\n        this.sqlMyForum.delFromMyForum(id).then(res => {\n          if (res) this.refreshMyForum();\n        });\n      }*/\n\n\n    goToConferenceDetail(conferenceSingle) {\n        //console.log(\"goToParticipantDetail()\");\n        //console.log(conferenceSingle);\n        // go to the session detail page\n        // and pass in the session data\n        this.navCtrl.push(ConferenceDetailPage, {\n            conferenceSingle\n        });\n    }\n\n    showMapMyForum() {\n        if (this.forumSegment == 'conferenceItems') {\n\n            this.placeSql.select().then(res => {\n                let place: place[] = (<place[]>res);\n                this.mapSql.getRecordForFieldValue('name_map', \"'\" + place[0].name_map + \"'\").then(res => {\n                    //console.log(\"res=\", res);\n                    let map = <map[]>res;\n                    this.navCtrl.push(LeafletMapPage, {\n                        typeOfMap: 'conference',\n                        popupElement: this.myForumConference,\n                        place: place,\n                        map: map\n                    });\n                });\n            });\n        }\n        if (this.forumSegment == 'participantItems') {\n\n            this.placeSql.select().then(res => {\n                let place: place[] = (<place[]>res);\n                this.mapSql.getRecordForFieldValue('name_map', \"'\" + place[0].name_map + \"'\").then(res => {\n                    //console.log(\"res=\", res);\n                    let map = <map[]>res;\n                    this.navCtrl.push(LeafletMapPage, {\n                        typeOfMap: 'participant',\n                        popupElement: this.myForumParticipant,\n                        place: place,\n                        map: map\n                    });\n                });\n            });\n        }\n    }\n\n\n    /**\n     *\n     * @param exhibitSingle\n     */\n    goToExhibitDetail(elementSingle) {\n        //console.log(\"goToExhibitDetail()\");\n        //console.log(elementSingle);\n        // go to the session detail page\n        // and pass in the session data\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusExhibitFull('where a.id=' + elementSingle.id).then(res => {\n                let element = <any>res;\n                //console.log(\"participantDetail=\", element);\n                this.navCtrl.push(ExhibitDetailPage, {\n                    element\n                });\n            });\n        } else\n            this.sqlMyForum.getEngExhibitFull('where a.id=' + elementSingle.id).then(res => {\n                let element = <any>res;\n                this.navCtrl.push(ExhibitDetailPage, {element});\n            });\n    }\n\n\n    goToDemoProgramDetail(element) {\n        //console.log(\"goToParticipantDetail()\");\n        //console.log(element);\n        // go to the session detail page\n        // and pass in the session data\n        this.navCtrl.push(DemoProgramDetailPage, {\n            element\n        });\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-forum/my-forum.ts","import {Component} from '@angular/core';\nimport {NgForm} from '@angular/forms';\n\nimport {Events, NavController} from 'ionic-angular';\n\nimport {UserData} from '../../providers/user-data';\n\nimport {TabsPage} from '../tabs/tabs';\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\n\n@Component({\n    selector: 'page-user',\n    templateUrl: 'signup.html'\n})\nexport class SignupPage extends BaseLangPageProvider {\n    signup: {\n        login?: string, password?: string, name?: string,\n        lastname?: string, email?: string; confirm_password?: string\n    } = {};\n\n\n    submitted = false;\n\n\n    loginStr: string;\n    passwordStr: string;\n    passwordIsReq: string;\n    loginIsReq: string;\n    signUpStr: string;\n    nameIsReq: string;\n    lastnameIsReq: string;\n    emailIsReq: string;\n    confirmIsReq: string;\n\n    nameStr: string;\n    lastnameStr: string;\n    emailStr: string;\n    confirmStr: string;\n\n    constructor(public navCtrl: NavController,\n                public userData: UserData,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl, events, http)\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Регистрация');\n        this.loginStr = 'Логин';\n        this.passwordStr = 'Пароль';\n        this.passwordIsReq = 'Требуется пароль';\n        this.loginIsReq = 'Необходим логин';\n        this.nameIsReq = 'Необходимо имя';\n        this.lastnameIsReq = 'Необходима фамилия';\n        this.emailIsReq = 'Необходима электронная почта';\n        this.confirmIsReq = 'Необходимо подтверждение пароля';\n        this.signUpStr = 'Зарегистрироваться';\n\n        this.nameStr = 'Имя';\n        this.lastnameStr = 'Фамилия';\n        this.emailStr = 'Электронная почта';\n        this.confirmStr = 'Подтверждение пароля';\n\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Signup');\n        this.loginStr = 'Login';\n        this.passwordStr = 'Password';\n        this.passwordIsReq = 'Password is required';\n        this.loginIsReq = 'Login is required';\n        this.nameIsReq = 'Name is required';\n        this.lastnameIsReq = 'Last name is required';\n        this.emailIsReq = 'Email is required';\n        this.confirmIsReq = 'Password confirm is required';\n        this.signUpStr = 'Sign Up';\n\n        this.nameStr = 'Name';\n        this.lastnameStr = 'Lastname';\n        this.emailStr = 'Email';\n        this.confirmStr = 'Confirm_password';\n    }\n\n    onSignup(form: NgForm) {\n        this.submitted = true;\n\n        if (form.valid) {\n            this.userData.signup(this.signup.login, this.signup.password, this.signup.name,\n                this.signup.lastname, this.signup.email, this.signup.confirm_password);\n            this.navCtrl.push(TabsPage);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseListPageProvider} from \"../../../providers/base-list-page/base-list-page\";\nimport {Http} from \"@angular/http\";\nimport {PlaceSql} from \"../../../providers/place-sql/place-sql\";\nimport {map, MapSql} from \"../../../providers/map-sql/map-sql\";\nimport {LeafletMapPage} from \"../../leaflet-map/leaflet-map\";\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\n\n\n/**\n * Generated class for the WarTacticPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n\n/**\n * Generated class for the AboutForumPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n    selector: 'page-war-tactic-page',\n    templateUrl: 'war-tactic-page.html',\n})\nexport class WarTacticPage extends BaseLangPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl,  events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad AboutForumPage');\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('О Форуме');\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('About Forum');\n    }\n\n       showLeafLetPlaceOnMap(name_rus, typeOfMap) {\n      //  //console.log(\"item=\", item);\n        let placeSql = new PlaceSql(this.http);\n        let mapSql = new MapSql(this.http);\n\n\n        placeSql.selectWhere('name_rus=' + name_rus).then(res => {\n            //console.log('showLeafLetMap res=', res);\n            let place = (<any[]>res);\n            mapSql.getRecordForFieldValue('name_map', \"'\" + place[0].name_map + \"'\").then(res => {\n                //console.log(\"res=\", res);\n                let map = <map[]>res;\n                this.navCtrl.push(LeafletMapPage, {\n                    typeOfMap: typeOfMap,\n                    popupElement: res,\n                    place: place,\n                    map: map\n                });\n            });\n        });\n    }\n\n}\n\n\n\n[{\"name\":\"id\",\"type\":\"text PRIMARY KEY\"},{\"name\":\"name_rus\",\"type\": \"text\"},{\"name\":\"name_rus_upper\",\"type\": \"text\"},{\"name\":\"name_eng\",\"type\": \"text\"},\n    {\"name\":\"image\",\"type\": \"text\"},{\"name\":\"image_file\",\"type\": \"text\"},{\"name\":\"place\",\"type\": \"text\"},{\"name\":\"marker\",\"type\": \"text\"},{\"name\":\"popup\",\"type\": \"text\"},\n    {\"name\":\"tooltip\",\"type\": \"text\"},{\"name\":\"desc_rus\",\"type\": \"text\"},{\"name\":\"desc_eng\",\"type\": \"text\"}]\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/park-patriot-all/war-tactic-page/war-tactic-page.ts","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 174;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 174\n// module chunks = 0","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseLangPageProvider} from \"../base-lang-page/base-lang-page\";\nimport {Events, NavController, NavParams} from \"ionic-angular\";\nimport {place, PlaceSql} from \"../place-sql/place-sql\";\nimport {map, MapSql} from \"../map-sql/map-sql\";\nimport {LeafletMapPage} from \"../../pages/leaflet-map/leaflet-map\";\n\n\n/*\n  Generated class for the BaseListPageProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class BaseListPageProvider extends BaseLangPageProvider {\n    placeS: any;\n\n    iblockId: any;\n\n    filterStr: string;\n\n    addMyForumStr: string;\n    delMyForumStr: string;\n    /*loadStr: string;*/\n    listOut: any;\n\n\n    showFilter: boolean = false;\n    colorFilter: string = \"white\";\n\n    showHelp: boolean = false;\n    colorHelp: string = \"white\";\n\n    showMainList: boolean = true;\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl, events, http);\n        //console.log('Hello BaseListPageProvider Provider');\n        this.listOut = [];\n\n\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n\n    }\n\n    setRussianStrings(titleStr?) {\n        super.setRussianStrings(titleStr);\n        this.addMyForumStr = 'В \"Мой форум\"';\n        this.delMyForumStr = 'Удалить из \"Мой форум\"';\n        this.loadStr = 'Загрузка';\n    }\n\n    setEnglishStrings(titleStr?) {\n        super.setEnglishStrings(titleStr);\n        this.addMyForumStr = 'Add in \"My Forum\"';\n        this.delMyForumStr = 'Del from \"My Forum\"';\n        this.loadStr = 'Loading';\n    }\n\n    showHideFilter() {\n        if (!this.showHelp) {\n            if (this.showFilter) {\n                this.colorFilter = \"white\";\n                this.showFilter = false;\n            }\n            else {\n                this.colorFilter = \"red\";\n                this.showFilter = true;\n            }\n        }\n        this.showMainList = !(this.showHelp || this.showFilter);\n\n    }\n\n    showHideHelp() {\n        if (!this.showFilter) {\n            if (this.showHelp) {\n                this.colorHelp = \"white\";\n                this.showHelp = false;\n            }\n            else {\n                this.colorHelp = \"red\";\n                this.showHelp = true;\n            }\n        }\n        this.showMainList = !(this.showHelp || this.showFilter);\n        //console.log(this.lang);\n    }\n\n    showMapList(typeOfMap_in) {\n        let placeSql = new PlaceSql(this.http);\n        let mapSql = new MapSql(this.http);\n        placeSql.selectWhere('id=' + this.listOut[0].place).then(res => {\n            let place: place[] = (<place[]>res);\n            mapSql.getRecordForFieldValue('name_map', \"'\" + place[0].name_map + \"'\").then(res => {\n                //console.log(\"res=\", res);\n                let map = <map[]>res;\n                this.navCtrl.push(LeafletMapPage, {\n                    typeOfMap: typeOfMap_in,\n                    popupElement: this.listOut,\n                    place: place,\n                    map: map\n                });\n            });\n        });\n    }\n\n\n    showLeafLetMap(item, typeOfMap) {\n        //console.log(\"item=\", item);\n        let placeSql = new PlaceSql(this.http);\n        let mapSql = new MapSql(this.http);\n\n\n        placeSql.selectWhere('id=' + item.place).then(res => {\n            //console.log('showLeafLetMap res=', res);\n            let place = (<any[]>res);\n            mapSql.getRecordForFieldValue('name_map', \"'\" + place[0].name_map + \"'\").then(res => {\n                //console.log(\"res=\", res);\n                let map = <map[]>res;\n                this.navCtrl.push(LeafletMapPage, {\n                    typeOfMap: typeOfMap,\n                    popupElement: item,\n                    place: place,\n                    map: map\n                });\n            });\n        });\n    }\n\n    showLeafLetMapSimple(name_map, typeOfMap) {\n        let mapSql = new MapSql(this.http);\n        mapSql.getRecordForFieldValue('name_map', \"'\" + name_map + \"'\").then(res => {\n            //console.log(\"res=\", res);\n            let map = <map[]>res;\n            this.navCtrl.push(LeafletMapPage, {\n                typeOfMap: typeOfMap,\n\n\n                map: map\n            });\n        });\n\n    }\n\n\n    showLeafLetPlaceOnMap(element, typeOfMap) {\n      //  //console.log(\"item=\", item);\n        let placeSql = new PlaceSql(this.http);\n        let mapSql = new MapSql(this.http);\n\n\n        placeSql.selectWhere('id=' + element.place).then(res => {\n            //console.log('showLeafLetMap res=', res);\n            let place = (<any[]>res);\n            mapSql.getRecordForFieldValue('name_map', \"'\" + place[0].name_map + \"'\").then(res => {\n                //console.log(\"res=\", res);\n                let map = <map[]>res;\n                this.navCtrl.push(LeafletMapPage, {\n                    typeOfMap: typeOfMap,\n                    popupElement: element,\n                    place: place,\n                    map: map\n                });\n            });\n        });\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/base-list-page/base-list-page.ts","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 217;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 217\n// module chunks = 0","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseApi} from \"../providers/base-api-service\";\n\n\n/*\n base class for operation with thematic table\n */\nexport interface thematic {\n    id: string,\n    name_rus: string,\n    name_eng: string,\n    number: string\n}\n\nexport interface baseField {\n    name: string;\n    type: string;\n}\n\ndeclare let window: any;\n\n@Injectable()\nexport class BaseSql {\n    //public text: string = \"\";\n    public db = null;\n    public arr = [];\n    public fields;\n\n    tableName: string;//'thematic';\n\n    constructor(public http: Http,\n                // public thematicApi: ThematicConferenceApi,\n                tableName: string,\n                fields?, constrains?, status?) {\n        //console.log('Hello BaseSql Provider for ', tableName);\n\n        this.tableName = tableName;\n        if (fields) {\n            this.fields = fields;\n            let fieldsStr = this.createFieldStr();\n\n            if ((constrains) && (constrains != '')) {\n                //console.log(constrains);\n                fieldsStr += ',' + constrains;\n\n            }\n            if (status)\n                this.openDb(fieldsStr, status);\n            else this.openDb(fieldsStr);\n        }\n        else this.openDb();\n\n    }\n\n\n    /**\n     * create strind (delimiter - comma) from an array of fields\n     *\n     * @returns {string}\n     */\n\n    private createFieldStr() {\n        let fieldStr = '';\n        for (let field of this.fields) {\n            if (fieldStr != '') fieldStr += ', ';\n            fieldStr += field.name + ' ' + field.type;\n\n        }\n        //console.log(\"createFieldStr=\", fieldStr);\n        return fieldStr;\n    }\n\n    /**\n     * create string for insert SQL-query (from field containing fields' names)\n     *\n     * @returns {string}\n     */\n    private createFieldInsertStr() {\n        let fieldStr = '';\n        for (let field of this.fields) {\n            if (fieldStr != '') fieldStr += ', ';\n            fieldStr += field.name;\n\n        }\n        //console.log(\"createFieldInsertStr=\", fieldStr);\n        return fieldStr;\n    }\n\n    /**\n     * create string containing question marks (e.i. '?,?,') for insert SQL-query\n     *\n     * @returns {string}\n     */\n    private createQuestionMarkStr() {\n        let fieldStr = '';\n        for (let i = 0; i < this.fields.length; i++) {\n            if (fieldStr != '') fieldStr += ', ';\n            fieldStr += '?';\n        }\n        //console.log(\"createQuestionMarkStr=\", fieldStr);\n        return fieldStr;\n    }\n\n    /**\n     * open of createand then open the database\n     * @param fieldStr - fields in the created database\n     * @param status - what to do?\n     */\n    openDb(fieldStr?, status?) {\n        this.db = window.sqlitePlugin.openDatabase({name: 'todo.db', location: 'default'});\n        if (status) {\n            if (status == 'recreate') {\n                this.dropTable();\n            }\n        }\n        this.db.transaction(\n            (tx) => {\n                if (fieldStr != '') {\n                    //console.log('CREATE TABLE IF NOT EXISTS ' + this.tableName + ' (' + fieldStr + ')');\n                    tx.executeSql('CREATE TABLE IF NOT EXISTS '\n                        + this.tableName\n                        + ' (' + fieldStr + ')'\n                    );\n                }\n            }\n            ,\n            (e) => {\n                //console.log('Transaction Error ' + this.tableName + ' create', e);\n            }, () => {\n            }\n        )\n    }\n\n    /**\n     * create array which contains a bunch of values for insert\n     * @param item\n     * @returns {Array}\n     */\n\n\n    createInsValues(item) {\n        //console.log(\"createInsValues(item)=\", this.fields);\n        //console.log(\"item=\", item);\n        let insValues = [];\n        for (let field of this.fields) {\n            //console.log(\"field.name\", field.name);\n            //console.log(\"item[field.name]=\", item[field.name]);\n            insValues.push(item[field.name]);\n        }\n        //console.log(\"insValues=\", insValues);\n        return insValues;\n    }\n\n    addItem(item) {\n        //console.log(\"base addItem item=\", item);\n        return new Promise(resolve => {\n            let insertQuery = 'insert or replace into ' + this.tableName + '(' +\n                this.createFieldInsertStr() +\n                ') values (' + this.createQuestionMarkStr() + ')';\n            //console.log('insert query=', insertQuery);\n            //  //console.log('insert values=',  this.createInsValues(item));\n            this.db.executeSql(insertQuery, this.createInsValues(item), (r) => {\n                //console.log('base sql addItem(item) Inserted... Success..', r);\n            }, e => {\n                //console.log('Inserted Error', e);\n                resolve(false);\n            })\n        })\n    }\n\n    addItemList(itemList) {\n\n        //console.log(\"base addItem itemList=\", itemList);\n        return new Promise(resolve => {\n            let insertQuery = 'insert or replace into ' + this.tableName + '(' +\n                this.createFieldInsertStr() +\n                ') values (' + this.createQuestionMarkStr() + ')';\n            //console.log('insert query=', insertQuery);\n            //  //console.log('insert values=',  this.createInsValues(item));\n            for (let item of itemList) {\n                this.db.executeSql(insertQuery, this.createInsValues(item), (r) => {\n                    //console.log('base sql addItem(item) Inserted... Success..', r);\n                }, e => {\n                    //console.log('Inserted Error', e);\n                    resolve(false);\n                })\n            }\n\n\n            resolve(true)\n        });\n\n\n    }\n\n\n    /**\n     * select query for this.tableName table\n     * @param fieldSort - field or fields (separated by comma) which define(s) order of sorting\n     * @returns {Promise<T>}\n     */\n    select(fieldSort ?: string) {\n        return new Promise(res => {\n\n            this.arr = [];\n            let query = \"SELECT * FROM \" + this.tableName;\n            if (fieldSort) {\n                if (fieldSort != '') query += 'order by ' + fieldSort;\n            }\n            //console.log(\"query=\", query);\n            this.db.executeSql(query, [], rs => {\n\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                    res(this.arr);\n                }\n                else res(false);\n            }, (e) => {\n                res(false);\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    selectWhere(whereStr ?, fieldSort ?: string) {\n        return new Promise(res => {\n\n            this.arr = [];\n            let query = \"SELECT * FROM \" + this.tableName;\n            if (whereStr != '') {\n                if (!whereStr.includes('where')) query += ' where ';\n                query += ' ' + whereStr;\n            }\n            if (fieldSort) {\n                if (fieldSort != '') query += ' order by ' + fieldSort;\n            }\n            //console.log(\"query=\", query);\n            this.db.executeSql(query, [], rs => {\n\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                    res(this.arr);\n                }\n                else res(false);\n            }, (e) => {\n                res(false);\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    selectDistinct(distinctField, whereStr?, fieldSort?: string) {\n        return new Promise(res => {\n\n            this.arr = [];\n            let query = \"SELECT distinct(\" + distinctField + \") FROM \" + this.tableName;\n            if (whereStr) {\n                if (whereStr != '') query += ' where ' + whereStr;\n            }\n            if (fieldSort) {\n                if (fieldSort != '') {\n                    query += ' order by ' + fieldSort;\n                }\n            }\n            //console.log(\"selectDistinct query=\", query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"rs=\", rs);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                    res(this.arr);\n                }\n                else res(false);\n            }, (e) => {\n                res(false);\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /**\n     * delete all records from the table tableName according to possible whereStr clause\n     * @param whereStr\n     * @returns {Promise<any>}\n     */\n    delAll(whereStr?) {\n        //console.log('try to delete all ' + this.tableName);\n        return new Promise(resolve => {\n            let query = \"DELETE FROM \" + this.tableName;\n            if (whereStr) {\n                query += ' where ' + whereStr;\n            }\n            //console.log('Delete All query', query);\n            this.db.executeSql(query, [], (s) => {\n                //console.log('DeleteAll  Success...', s, whereStr);\n\n            }, (err) => {\n                //console.log('Deleting Error', err);\n            });\n        })\n\n    }\n\n    /**\n     * drop and anihilate the table tableName\n     * @returns {Promise<any>}\n     */\n\n    dropTable() {\n        //console.log('try to drop table ' + this.tableName);\n        return new Promise(resolve => {\n            let query = \"drop table \" + this.tableName;\n            this.db.executeSql(query, [], (s) => {\n                //console.log('Drop table Success...', s);\n\n            }, (err) => {\n                //console.log('Dropping table Error', err);\n            });\n        })\n\n    }\n\n    /**\n     * return certain filed from a table accronind to id\n     * @param id\n     * @param field\n     * @param table\n     * @returns {Promise<T>}\n     */\n\n\n    getFieldFromTable(id, field, table, whereStr?) {\n        //console.log('get ' + field + ' for ' + table);\n        let myWhere = '';\n        return new Promise(res => {\n            let query = 'select ' + field + ' from ' + table;\n            myWhere = ' id=' + id;\n\n            if (whereStr) {\n                if (whereStr.includes('where')) {\n                    myWhere = whereStr + myWhere;\n                }\n                else {\n                    myWhere = 'where ' + whereStr + myWhere;\n\n                }\n            }\n            else myWhere = 'where ' + myWhere;\n            query += myWhere;\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                if (rs) {\n                    if ((<any>rs).rows.length) {\n                        let list = [];\n                        for (let i = 0; i < (<any>rs).rows.length; i++) {\n                            list.push((<any>rs).rows.item[i]);\n                        }\n                        res(list);\n                    }\n                    else res(rs);\n\n\n                }\n                else rs(false);\n            }, (err) => {\n                //console.log(query, '  Error', err);\n            });\n\n        });\n    }\n\n    /**\n     *\n     * @param list - list of values for fieldName\n     * @param fieldName - name of field to where clause\n     * @returns {Promise<T>}\n     */\n\n    getFieldTableList(list: string, fieldName) {\n        return new Promise(res => {\n            //console.log('get ' + this.tableName + ' list=', list);\n            let thematic: string[];\n            thematic = list.split(',');\n            //console.log('an array=', thematic);\n            let whereStr: string = ' where ';\n            for (let i = 0; i < thematic.length; i++) {\n                if (i > 0) whereStr += ' or ';\n                whereStr += fieldName + '=' + thematic[i];\n            }\n            //console.log(\"whereStr=\", whereStr);\n            let query = \"SELECT * FROM \" + this.tableName;\n            query += ' ' + whereStr;\n            //console.log(query);\n            this.arr = [];\n            this.db.executeSql(query, [], rs => {\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n    }\n\n    /**\n     *  returns number of records in tableName\n     * @returns {Promise<T>}\n     */\n    countTable() {\n        return new Promise(res => {\n            this.arr = [];\n            let query = \"SELECT count(*) as count FROM \" + this.tableName;\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"rs=\", rs);\n                //console.log(\"table \" + this.tableName + \". rs.rows.item[0].count=\", <any>rs.rows.item[0].count);\n                res(<any>rs.rows.item[0].count);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    delId(id) {\n        return new Promise(resolve => {\n            let query = \"DELETE FROM \" + this.tableName + \" WHERE id=?\";\n            this.db.executeSql(query, [id], (s) => {\n                //console.log('Delete from place Success...', s);\n\n                resolve(true);\n\n            }, (err) => {\n                //console.log('Deleting Error', err);\n                resolve(false);\n            });\n        })\n    }\n\n    /**\n     * simple check id record with id is in table\n     * @param id\n     * @returns {Promise<T>}\n     */\n    checkForId(id) {\n        return new Promise(res => {\n            let query = 'SELECT * FROM ' + this.tableName + ' WHERE id=' + id;\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"checkForId(id)!!! id=\", id, query);\n                //console.log(rs);\n                //console.log(rs.rows.length);\n                return res(rs.rows.length > 0);\n\n\n            });\n        });\n    }\n\n    checkForFieldValues(fields) {\n        let whereStr = '';\n        for (let field of fields) {\n            whereStr += ((whereStr != '') ? ' and ' : '') + field.name + '=' + ((field.type == \"text\") ? '\"' : '') + field.value + ((field.type == \"text\") ? '\"' : '');\n        }\n\n        //console.log(\"checkForFieldValues whereStr=\", whereStr);\n\n        let query = 'SELECT count(*) as count FROM ' + this.tableName;\n\n        query += ((whereStr != '') ? ' where ' + whereStr : '');\n        //console.log(query);\n        return new Promise(res => {\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"checkForFieldValues(fields)=\", fields);\n                //console.log(rs);\n                //console.log(rs.rows.length);\n                if (rs.rows.length > 0) res(rs.rows.item(0).count);\n                else res(0);\n\n            });\n\n        });\n    }\n\n    /**\n     * return a record from table where field=value\n     * @param field\n     * @param value\n     * @returns {Promise<T>}\n     */\n    getRecordForFieldValue(field, value) {\n\n        return new Promise(res => {\n            this.arr = [];\n            let query = \"SELECT * FROM \" + this.tableName;\n            query += ' where ' + field + '=' + value;\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"rs=\", rs);\n                //console.log(\"table \" + this.tableName + \". rs.rows.item[0]=\", <any>rs.rows.item[0]);\n                res(<any>rs.rows.item(0));\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /**\n     * select distinct values for field (fieldNane) for table\n     * @param list\n     * @param fieldName\n     * @returns {Promise<T>}\n     */\n    getTableFieldDistinctList(list, fieldName: string) {\n        return new Promise(res => {\n            //console.log('get thematicConference list=', list);\n            let tableList: string[];\n            tableList = list.split(',');\n            //console.log('an array=', tableList);\n            let whereStr: string = ' where ';\n            for (let i = 0; i < tableList.length; i++) {\n                if (i > 0) whereStr += ' or ';\n                whereStr += 'id=' + tableList[i];\n            }\n            //console.log(\"whereStr=\", whereStr);\n            let query = \"SELECT distinct(\" + fieldName + \") FROM \" + this.tableName;\n            query += ' ' + whereStr;\n            //console.log(query);\n            this.arr = [];\n            this.db.executeSql(query, [], rs => {\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n    }\n\n    loadApi(path) {\n        let api = new BaseApi(this.http);\n        api.getApi(path).subscribe(data => {\n                this.addItemList(data);\n                /*for (let i = 0; i < data.length; i++) {\n                  //console.log(\"try to insert data[i]=\", data[i]);\n                  this.addItem(data[i]).then(res => {\n                    //console.log('after insert res=', res);\n                    return res;\n                  });\n                }*/\n            }\n        )\n    }\n\n    updateApi(path) {\n        let api = new BaseApi(this.http);\n        api.getApi(path).subscribe(data => {\n\n            for (let i = 0; i < data.length; i++) {\n                this.delId(data[i].id).then(rs => {\n\n                        //console.log(\"updateApi addItem(data[i]=\", data[i]);\n                        this.addItem(data[i]).then(res => {\n                            //console.log('updateApi after insert res=', res);\n                            return res;\n                        });\n                    }\n                )\n                ;\n            }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/base-sql.ts","import {Injectable} from '@angular/core';\nimport {BaseSql} from \"./base-sql\";\nimport {Http} from \"@angular/http\";\nimport {MyForumApi} from \"./my-forum/my-forum-api\";\n/*\n Generated class for the Sqlite provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n\n/*declare var window: any;*/\n@Injectable()\n\nexport class MyForumSql extends BaseSql {\n\n    public myForumApi: MyForumApi;\n\n    constructor(public http: Http) {\n\n        super(http, 'myforum', [\n                {name: 'id', type: 'text PRIMARY KEY'},\n                {name: 'user', type: 'text'},\n                {name: 'my_iblock_id', type: 'text'},\n                {name: 'my_id', type: 'text'}],\n            'UNIQUE (\"user\", \"my_id\")'\n        );\n\n        //console.log(\"create MyForumSql\");\n        this.myForumApi = new MyForumApi(this.http);\n        //  this.openDb();\n    }\n\n\n    /**\n     * get only records which are in MyForum also\n     * @returns {Promise<T>}\n     */\n    getEngParticipantMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            let query = 'select a.id, a.name_eng as name, a.desc_eng as desc, a.country_eng as country, ' +\n                'a.address_eng as address, a.phone, a.email, a.www, a.logo, a.place, b.id as my_forum_id,' +\n                ' c.name_eng as place_name, c.name_eng as place_name_place, c.coords, c.name_map from participant a, myforum b ' +\n                'left join place c on a.place=c.id where a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    /**\n     * get only records which are in MyForum also\n     * @returns {Promise<T>}\n     */\n    getRusParticipantMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            let query = 'select a.id, a.name_rus as name, a.desc_rus as desc, a.country_rus, ' +\n                'a.address_rus as address, a.phone, a.email, a.www, a.logo, a.place, b.id as my_forum_id,' +\n                ' c.name_rus as place_name, c.name_rus as place_name_place, c.coords, c.name_map from participant a, myforum b ' +\n                'left join place c on a.place=c.id where a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    getRusExhibitMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            // let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_rus as name, a.place,' +\n                'b.id as my_forum_id, c.name_rus as place_name_place, c.name_rus as place_name, c.name_map, c.coords' +\n                ' from exhibit a, myforum b  left join place c on a.place=c.id where  a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' order by a.name_rus';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getEngExhibitMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            // let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_eng as name, a.place,' +\n                'b.id as my_forum_id, c.name_eng as place_name_place, c.name_eng as place_name, c.name_map, c.coords' +\n                ' from exhibit a, myforum b  ';\n\n            query += ' left join place c on a.place=c.id';\n            let where = ' where  a.id=b.my_id';\n            if (where != '') query += ' ' + where;\n            if ((userId) && (userId != '')) where += ' and b.user=' + userId;\n            query += where;\n            query += ' order by a.name_rus';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    getRusConferenceMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            let query = 'select a.id, a.name_rus as name, a.place_name, a.place, a.format, a.contact, ' +\n                'a.thematic_conference, a.organizer, a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_rus as place_name_place,c.coords, c.name_map ' +\n                'from conference a, myforum b  left join place c on a.place=c.id where a.id=b.my_id';\n\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getEngConferenceMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            let query = 'select a.id, a.name_eng as name, a.place_name, a.place, a.format_eng as format, a.contact_eng as contact, ' +\n                'a.thematic_conference, a.organizer_eng as organizer, a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_eng as place_name, c.name_eng as place_name_place,c.coords, c.name_map ' +\n                'from conference a, myforum b  left join place c on a.place=c.id where a.id=b.my_id';\n\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getRusDemoProgramMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            let query = 'select a.id, a.name_rus as name, a.place_name, a.place,  ' +\n                'a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_rus as place_name_place,c.coords, c.name_map ' +\n                'from demo_program a, myforum b  left join place c on a.place=c.id where a.id=b.my_id';\n\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getEngDemoProgramMyForum(userId: string = '') {\n        //@TODO add option - if userId='' then exit from the function\n        //console.log('getRusParticipantMyForum()');\n        return new Promise(res => {\n            this.arr = [];\n            let query = 'select a.id, a.name_eng as name, a.place_name, a.place, ' +\n                ' a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_eng as place_name, c.name_eng as place_name_place,c.coords, c.name_map ' +\n                'from conference a, myforum b  left join place c on a.place=c.id where a.id=b.my_id';\n\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql\");\n                //console.log(rs);\n                //console.log(rs.rows.item(0).id);\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                }\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    /**\n     * variant before size of the selection was reduced\n     * @param {string} where\n     * @returns {Promise<any>}\n     */\n    getRusParticipantFull(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_rus as name, a.desc_rus as desc, a.country_rus as country, ' +\n                'a.address_rus as address, a.phone, a.email, a.www, a.logo, a.place,' +\n                'b.id as my_forum_id, c.name_rus as place_name, c.name_rus as place_name_place, c.name_map, c.coords ' +\n                'from participant a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' left join place c on a.place=c.id';\n\n            if (where != '') query = query + ' ' + where;\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusParticipant\");\n                //console.log(rs);\n                // //console.log(rs.rows.item(0).id);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    getEngParticipantFull(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_eng as name, a.desc_eng as desc, a.country_eng as country, ' +\n                'a.address_eng as address, a.phone, a.email, a.www, a.logo, a.place,' +\n                'b.id as my_forum_id, c.name_eng as place_name, c.name_eng as place_name_place, c.name_map, c.coords ' +\n                'from participant a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' left join place c on a.place=c.id';\n\n            if (where != '') query = query + ' ' + where;\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusParticipant\");\n                //console.log(rs);\n                // //console.log(rs.rows.item(0).id);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getRusExhibitFull(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n\n            let query = 'select a.id, a.name_rus as name, a.purpose as purpose, a.characteristics as characteristics, a.place,' +\n                'b.id as my_forum_id, c.name_rus as place_name, c.name_rus as place_name_place, c.name_map, c.coords' +\n                ' from exhibit a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query = query + ' ' + where;\n\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusParticipant\");\n                //console.log(rs);\n                // //console.log(rs.rows.item(0).id);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getEngExhibitFull(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n\n            let query = 'select a.id, a.name_eng as name, a.purpose_eng as purpose, a.characteristics_eng as characteristics, a.place,' +\n                'b.id as my_forum_id, c.name_rus as place_name, c.name_rus as place_name_place, c.name_map, c.coords' +\n                ' from exhibit a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query = query + ' ' + where;\n\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusParticipant\");\n                //console.log(rs);\n                // //console.log(rs.rows.item(0).id);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /**\n     * get ALL records from participant and ADD a filed from MyForum\n     * @returns {Promise<T>}\n     */\n    getRusParticipant(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_rus as name, a.place,  ' +\n                'b.id as my_forum_id, c.name_rus as place_name, c.name_rus as place_name_place, c.name_map, c.coords  ' +\n                'from participant a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' left join place c on a.place=c.id';\n            //console.log(query);\n            if (where != '') query = query + ' ' + where;\n\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusParticipant\");\n                //console.log(rs);\n                // //console.log(rs.rows.item(0).id);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getRusExhibit(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_rus as name, a.place,' +\n                'b.id as my_forum_id, c.name_rus as place_name_place, c.name_rus as place_name, c.name_map, c.coords' +\n                ' from exhibit a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query += ' ' + where;\n            query += ' order by a.name_rus';\n\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusParticipant\");\n                //console.log(rs);\n                // //console.log(rs.rows.item(0).id);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /**\n     * get ALL records from participant and ADD a filed from MyForum\n     * @returns {Promise<T>}\n     */\n    getEngParticipant(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_eng as name, a.place,  ' +\n\n                'b.id as my_forum_id, c.name_eng as place_name, c.name_eng as place_name_place, c.name_map, c.coords ' +\n                'from participant a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n\n            query += ' left join place c on a.place=c.id';\n\n            if (where != '') query = query + ' ' + where;\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusParticipant\");\n                //console.log(rs);\n                // //console.log(rs.rows.item(0).id);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /**\n     * return list of 'conference' records when language is English\n     * @param {string} where\n     * @returns {Promise<any>}\n     */\n\n    getEngConference(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        //  let whereStr = where;\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_eng as name, a.place_name, a.place, a.format_eng as format, a.contact_eng as contact, ' +\n                'a.thematic_conference, a.organizer_eng as organizer, a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_eng as place_name_place, c.name_map, c.coords ' +\n                'from conference a left join myforum b on a.id=b.my_id ';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query += ' ' + where;\n\n\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusConference\");\n                //console.log(rs);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /**\n     * return list of 'conference' records when language is Russian\n     * @param {string} where\n     * @returns {Promise<any>}\n     */\n\n    getRusConference(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        //  let whereStr = where;\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_rus as name, a.place_name, a.place, a.format, a.contact, ' +\n                'a.thematic_conference, a.organizer, a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_rus as place_name_place, c.name_map, c.coords ' +\n                'from conference a left join myforum b on a.id=b.my_id ';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query += ' ' + where;\n\n\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusConference\");\n                //console.log(rs);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n\n    getRusDemoProgram(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        //  let whereStr = where;\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_rus as name, a.place_name, a.place,' +\n                ' a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_rus as place_name_place, c.name_map, c.coords ' +\n                'from demo_program a left join myforum b on a.id=b.my_id ';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query += ' ' + where;\n\n\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusConference\");\n                //console.log(rs);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    getEngDemoProgram(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        //  let whereStr = where;\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_eng as name, a.place_name, a.place,' +\n                ' a.date_event,  a.time_beg, a.time_end,' +\n                'b.id as my_forum_id, c.name_eng as place_name_place, c.name_map, c.coords ' +\n                'from demo_program a left join myforum b on a.id=b.my_id ';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query += ' ' + where;\n\n\n            query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusConference\");\n                //console.log(rs);\n                this.arr = [];\n                if (rs.rows.length) {\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /*  getRusExhibit(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        //  let whereStr = where;\n        return new Promise(res => {\n          this.arr = [];\n          let userId = localStorage.getItem('userid');\n          let query = 'select a.id, a.name_rus as name, a.place,'+\n            'b.id as my_forum_id, c.name_rus as place_name_place, c.name_rus as place_name, c.name_map, c.coords'+\n          'from exhibit a left join myforum b on a.id=b.my_id';\n          if (userId != '') query += ' and b.user=' + userId;\n          query += ' left join place c on a.place=c.id';\n          if (where != '') query += where;\n          query += ' order by a.name_rus';\n          /!*   let query = 'select a.id, a.name_rus as name, a.place_name, a.place, a.format, a.contact, ' +\n            'a.thematic_conference, a.organizer, a.date_event,  a.time_beg, a.time_end,' +\n            'b.id as my_forum_id, c.name_rus as place_name_place, c.name_map, c.coords ' +\n            'from conference a left join myforum b on a.id=b.my_id ';\n          if (userId != '') query += ' and b.user=' + userId;\n          query += ' left join place c on a.place=c.id';\n          if (where != '') query += where;\n\n\n          query += ' order by a.date_event, a.time_beg, a.time_end, a.id';*!/\n          //console.log(query);\n          this.db.executeSql(query, [], rs => {\n            //console.log(\"right after executeSql in getRusConference\");\n            //console.log(rs);\n            this.arr = [];\n            if (rs.rows.length) {\n              this.arr=<any[]>rs.rows.item;\n             /!* for (let i = 0; i < rs.rows.length; i++) {\n                this.arr.push(<any>rs.rows.item(i));\n\n              }*!/\n            }\n            //console.log(\"this.arr=\", this.arr);\n            res(this.arr);\n          }, (e) => {\n            //console.log('Sql Query Error', e);\n          });\n        })\n\n      }*/\n\n\n    getEngExhibit(where: string = '') {\n        //console.log('getRusParticipantMyForum()');\n        //console.log(' where=' + where);\n        //  let whereStr = where;\n        return new Promise(res => {\n            this.arr = [];\n            let userId = localStorage.getItem('userid');\n            let query = 'select a.id, a.name_eng as name, a.place,' +\n                'b.id as my_forum_id, c.name_eng as place_name_place, c.name_eng as place_name, c.name_map, c.coords' +\n                ' from exhibit a left join myforum b on a.id=b.my_id';\n            if ((userId) && (userId != '')) query += ' and b.user=' + userId;\n            query += ' left join place c on a.place=c.id';\n            if (where != '') query += ' ' + where;\n            query += ' order by a.name_rus';\n\n            //console.log(query);\n            this.db.executeSql(query, [], rs => {\n                //console.log(\"right after executeSql in getRusConference\");\n                //console.log(rs);\n                this.arr = [];\n                if (rs.rows.length) {\n                    // this.arr=<any[]>rs.rows.item;\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n\n                    }\n                }\n                //console.log(\"this.arr=\", this.arr);\n                res(this.arr);\n            }, (e) => {\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n    }\n\n    /**\n     *\n     * @param where\n     * @returns {any}\n     */\n    /*  getRusConferenceReturn(where: string = '') {\n        //console.log('getRusConference()');\n        //console.log(' where=' + where);\n\n        this.arr = [];\n        let userId = localStorage.getItem('userid');\n        let query = 'select a.id, a.name_rus as name, a.name_rus_upper, a.place_name, a.place, a.format_eng as format, a.contact, ' +\n          'a.thematic_conference, a.organizer, a.date_event,  a.time_beg, a.time_end,' +\n          'b.id as my_forum_id, c.name_rus as place_name_place ' +\n          'from conference a left join myforum b on a.id=b.my_id ';\n        if (userId) query += ' ' + ' and b.user=' + userId;\n\n        query += ' left join place c on a.place=c.id';\n\n        //console.log(query);\n        if (where != '') query += where;\n        query += ' order by a.date_event, a.time_beg, a.time_end, a.id';\n        return this.db.executeSql(query, [], rs => {\n            //console.log(\"right after executeSql in getRusConferenceReturn\");\n            //console.log(rs);\n\n          },\n          /!* //console.log(\"this.arr=\", this.arr);\n           return(this.arr.);*!/\n          (e) => {\n            //console.log('Sql Query Error', e);\n\n          });\n\n\n      }*/\n\n\n    /*  //to Update any Item\n      update(id, txt) {\n        return new Promise(res => {\n          let query = \"UPDATE Todo SET todoItem=?  WHERE id=?\";\n          this\n            .db\n            .executeSql(query, [\n              txt, id\n            ], (s) => {\n              //console.log('Update Success...', s);\n              this.select().then(s => {\n                res(true);\n              });\n            }, (err) => {\n              //console.log('Updating Error', err);\n            });\n        })\n\n      }*/\n\n    /**\n     *\n     * @param id of deleted element\n     * @returns {boolean}\n     */\n    delFromMyForum(id) {\n        //console.log(\"delFromMyForum id=\", id);\n        return new Promise(resolve => {\n            this.myForumApi.delFromMyForum(id).subscribe(res => {\n                    if (res) {\n                        this.delId(id);\n                        resolve(true);\n                    }\n                    else (resolve(false))\n                }\n            );\n        })\n    }\n\n    /**\n     *\n     * @param id of added element\n     * @param iblockId of the infoblock in bitrix site\n     * @param userId\n     * @param elementList - there we will insert my_forum_id value directly to avoid waiting\n     * @returns {Promise<T>}\n     */\n    async addToMyForumSite(id, iblockId, userId, elementList?) {\n        //console.log(\"elementList before inserting in addToMyForumSite =\", elementList);\n        //console.log('add', id);\n        let my_forum_id: any;\n        let checkValues = await            this.checkForFieldValues([{name: \"my_id\", value: id, type: ''},\n            {name: \"user\", value: userId, type: ''}]);\n        //console.log(\"this.checkForFieldValues, res=\", checkValues);\n        if (checkValues == 0) {\n            my_forum_id = await this.myForumApi.addToMyForumSite(iblockId, id).first().toPromise();\n\n\n            //console.log(\"here are the results of adding through api=\", my_forum_id);\n\n\n            //console.log(\"elementList after inserting in addToMyForumSite =\", elementList);\n            //console.log(\"my_forum_id=\", my_forum_id);\n            //@TODO make an api and prepare all parameters for insert\n            //  this.sqlMyForum.addItemAndSelect(data, this.userId, this.iblockId, id).then(res => {\n            this.addItem({id: my_forum_id, user: userId, my_iblock_id: iblockId, my_id: id});\n            return my_forum_id;\n\n\n        }\n        else return 0;\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/my-forum-sql.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseApi} from \"../base-api-service\";\n\n/*\n Generated class for the MyForumApi provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n@Injectable()\nexport class MyForumApi extends BaseApi {\n // private baseUrlApi =  '/baseapi';//http://army2017.ru/api';\n//  private baseUrlAjax = 'http://army2017.ru/ajax';\n  private myForum: any = {};\n\n\n  constructor(public http: Http) {\n    super(http);\n    //console.log('Hello MyForumApi Provider');\n\n\n\n  }\n\n  getMyForum(userID) {\n\n\n    //console.log('**about to make HTTP call for all');\n    return this.http.get(`${this.baseUrlApi}/my_forum/my_forum_list.php?USER=` + userID + `&LOWERCASE=1`)\n      .map(response => {\n        this.myForum = response.json();\n        //console.log(this.myForum);\n        return this.myForum;\n      });\n\n\n  }\n\n  /**\n   * $idBlock = $_REQUEST[\"ID_BLOCK\"];\n   $id = $_REQUEST[\"ID\"];\n   $idUser = $_REQUEST[\"USER_ID\"];\n   * @param userID\n   */\n\n  /**\n   *\n   * @param id_block\n   * @param id\n   * @returns {Observable<R>}\n   */\n  addToMyForumSite(id_block, id) {\n    let user_id=localStorage.getItem('userid');\n    if (!(user_id=>0) )\n    //console.log('**about to add to MyForum');\n      //console.log(`${this.baseUrlAjax}/add_my_forum.php?USER_ID=` + user_id + `&ID_BLOCK=` + id_block + '&ID=' + id);\n\n      return this.http.get(`${this.baseUrlAjax}/add_my_forum.php?USER_ID=` + user_id + `&ID_BLOCK=` + id_block + '&ID=' + id)\n      .map(data => {\n        let res=data.json();\n        //console.log(\"added to MyForum\");\n        //console.log(res);\n        return res;\n      });\n  }\n\n  /**\n   *\n   * @param id\n   * @returns {Observable<R>}\n   */\n  delFromMyForum(id) {\n    //console.log('**about to delete from MyForum');\n    //console.log(id);\n    return this.http.get(`${this.baseUrlAjax}/del_my_forum.php?DEL_ID=` + id)\n      .map(data => {\n        let res=data.json;\n        //console.log(\"deleted from MyForum\");\n        //console.log(res);\n        return res;\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/my-forum/my-forum-api.ts","import {Injectable} from '@angular/core';\nimport {Http /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\nimport {Observable} from 'rxjs/Observable';\nimport {BaseApi} from \"../base-api-service\";\n\n@Injectable()\nexport class ParticipantApi extends BaseApi{\n//  private baseUrl = '/baseapi';//http://army2017.ru/api';\n  currentParticipant: any = {};\n  private participants: any = {};\n  private participantData = {};\n\n\n\n  constructor(public http: Http) {\n    super(http);\n    //console.log('conferenceSingle api is created');\n  }\n\n  public userId:any;\n\n  getParticipant() {\n    //console.log('**about to make HTTP call for all');\n    return this.http.get(this.baseUrlApi+'/participant_list_app.php')\n      .map(response => {\n        this.participants = response.json();\n        //console.log(this.participants);\n        return this.participants;\n      });\n  }\n\n\n\n  getParticipantData(iblockId, forceRefresh: boolean = false): Observable<any> {\n    if (!forceRefresh && this.participantData[iblockId]) {\n      this.currentParticipant = this.participantData[iblockId];\n      //console.log('**no need to make HTTP call, just return the data');\n      return Observable.of(this.currentParticipant);\n    }\n\n    // don't have data yet\n\n    //@TODO make api/conferenceSingle.php to getOneParticipantRus single conferenceSingle\n    //console.log('**about to make HTTP call');\n    return this.http.get(`${this.baseUrlApi}/participant.php?ID={iblockId}`)\n      .map(response => {\n        this.participantData[iblockId] = response.json();\n        this.currentParticipant = this.participantData[iblockId];\n        return this.currentParticipant;\n      });\n  }\n\n  getCurrentParticipant() {\n    return this.currentParticipant;\n  }\n\n  refreshCurrentParticipant() {\n    return this.getParticipantData(this.currentParticipant.tournament.id, true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/participant/participant-api.service.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams, ToastController} from 'ionic-angular';\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {ConferenceSql} from \"../../providers/conference-sql/conference-sql\";\nimport {ConferenceApi} from \"../../providers/conference-sql/conference-api-service\";\nimport {Http} from \"@angular/http\";\nimport {ConferenceDetailPage} from \"../conference-detail/conference-detail\";\n\n\n\nimport {FilterConferenceProvider} from \"../../providers/filter-provider/filter-conference-provider\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\n\n\n@Component({\n  selector: 'page-conference',\n  templateUrl: 'conference.html',\n  providers: [FilterConferenceProvider],\n})\nexport class ConferencePage extends BaseListPageProvider {\n\n\n  constructor(public navCtrl: NavController,\n              public http: Http,\n              public conferencetApi: ConferenceApi,\n              public conferenceSql: ConferenceSql,\n              public sqlMyForum: MyForumSql,\n              public navParams: NavParams,\n              public toastCtrl: ToastController,\n\n              public filterProvider: FilterConferenceProvider,\n              public events: Events,\n              ) {\n\n    super(navCtrl, navParams, events, http);//, placeSql, mapSql);\n    // this.listOut = [];\n      events.subscribe('myforum:add:conference', (id) => {\n              //console.log('was added id =', id);\n              let element = this.listOut.find(x => x.id == id.id);\n              element.my_forum_id = id.my_forum_id;\n              //console.log('was added =', element);\n          }\n      );\n      events.subscribe('myforum:delete:conference', (id) => {\n              //console.log('was deleted id=', id);\n              let element = this.listOut.find(x => x.id == id);\n              element.my_forum_id = null;\n              //console.log('was deleted =', element);\n          }\n      );\n    //console.log(\"navParams in constructor\", navParams);\n    //console.log(\"navParams==null\", this.navParams == null);\n    //console.log(\"navParams.data.length\", navParams.data.length);\n    let param = navParams.get('select');\n    //console.log(\"navParams.get('select')\", param);\n    if (param == 'thematicConference') {\n      let toast = this.toastCtrl.create({\n        message: 'Загрузка из API ',\n        duration: 5000\n      });\n      toast.present();\n      //console.log(\"navParams.data\", navParams.data.data);\n      this.listOut = navParams.data.data;\n    }\n    this.iblockId = 14;//number of the infoblock in bitrix\n  }\n\n\n  ionViewDidLoad() {\n    super.ionViewDidLoad();\n\n    //console.log('ionViewDidLoad ConferencePage');\n    //console.log(\"this.navParams=\", this.navParams);\n    //console.log(\"this.navParams.data=\", this.navParams.data);\n    //console.log(\"navParams==null\", this.navParams == null);\n    let param = this.navParams.get('select');\n    if (param == 'thematicConference') {\n      //console.log(\"this.navParams in ioViewDidLoad =\", this.navParams);\n      this.listOut = this.navParams.data;\n    }\n    else {\n      this.conferenceRefresh();\n    }\n  }\n\n  conferenceRefresh() {\n    //console.log(\"this.selectConferenceAll()\");\n    let toast = this.toastCtrl.create({\n      message: this.loadStr,\n      duration: 5000\n    });\n    toast.present();\n    this.selectConferenceAll();\n\n\n  }\n\n  /**\n   *\n   * @param conferenceSingle\n   */\n  goToConferenceDetail(element) {\n    //console.log(\"goToParticipantDetail()\");\n    //console.log(element);\n    // go to the session detail page\n    // and pass in the session data\n    this.navCtrl.push(ConferenceDetailPage, {\n      element\n    });\n  }\n\n\n\n\n\n\n\n  selectConferenceAll(whereStr = '') {\n    //console.log(\"selectConferenceAll() where=\", whereStr);\n    //console.log(\"selectConferenceAll() lang\", this.lang);\n    if (this.lang == 'ru') {\n      this.sqlMyForum.getRusConference(whereStr).then(res => {\n        //console.log('this.sqlMyForum.getRusConference().then( res=', res);\n        //console.log('(<conferenceRusMyForum[]>res).length=', (<any[]>res).length);\n        if ((<any[]>res).length) {\n          //console.log('selectConferenceAll() after  select res');\n          //console.log(res);\n          this.listOut = <any[]>res;\n          //console.log(\"this.listOut\");\n          //console.log(this.listOut);\n        }\n\n      })\n    }\n    else {\n      this.sqlMyForum.getEngConference(whereStr).then(res => {\n        //console.log('this.sqlMyForum.getEngConference().then( res=', res);\n        //console.log('(<any[]>res).length=', (<any[]>res).length);\n        if ((<any[]>res).length) {\n          //console.log('selectConferenceAll() after  select res');\n          //console.log(res);\n          this.listOut = <any[]>res;\n          //console.log(\"this.listOut\");\n          //console.log(this.listOut);\n        }\n\n      })\n    }\n  }\n\n\n/*  getConferenceApiInsertBase() {\n    this.conferencetApi.getConference().subscribe(data => {\n      //console.log(\"here are the results\");\n      //console.log(data);\n\n      this.listOut = data;\n      this.addItemConference();\n    });\n  }*/\n\n\n\n  setRussianStrings() {\n    super.setRussianStrings('Конференция')\n\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings('Conference');\n\n  }\n\n  setFilterStrConference() {\n    this.filterStr = this.filterProvider.filterStr;\n    //console.log(\"this.filterStr\", this.filterStr);\n    if (this.lang == 'ru') {\n      this.sqlMyForum.getRusConference(this.filterStr).then(res => {\n        //console.log('our select');\n        //console.log(res);\n        this.listOut = res;\n        this.showHideFilter();\n      });\n    } else {\n      this.sqlMyForum.getEngConference(this.filterStr).then(res => {\n        //console.log('our select');\n        //console.log(res);\n        this.listOut = res;\n        this.showHideFilter();\n      });\n    }\n  }\n\n  cancelFilterStrConference() {\n    this.filterProvider.cancelFilter();\n    this.showHideFilter();\n  }\n\n\n\n}\n\n//было 404 строки до рефакторинга 2\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conference/conference.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseSql} from \"../base-sql\";\n\n/*\n  Generated class for the ThematicConferenceSql provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\ndeclare let window: any;\n\nexport interface thematicConference {\n  id: number;\n  name_rus: string;\n  name_eng: string;\n  number: string;\n\n}\n\n@Injectable()\nexport class ThematicConferenceSql extends BaseSql{\n  //public text: string = \"\";\n /* public db = null;\n  public arr = [];\n  [{\"name\":\"id\", \"type\":\"text PRIMARY KEY\"},{\"name\":\"name_rus\", \"type\":\"text\"},{\"name\":\"name_eng\", \"type\":\"text\"}, {\"name\":\"number\", \"type\":\"text\"}]\n\n  tableName='thematic_conference'*/\n\n  constructor(public http: Http) {\n    super(http,'thematic_conference',[\n      {name:\"id\", type:\"text PRIMARY KEY\"    },\n      {name:\"name_rus\", type:\"text\"    },\n      {name:\"name_eng\", type:\"text\"    },\n      {name:\"number\", type:\"text\"    },\n      ]\n    );\n    //console.log('Hello ThematicConferenceSql Provider');\n    //this.openDb();\n  }\n\n\n\n\n\n  getThematicOfConference(conferenceId) {\n    //console.log('getThematic for participant');\n    return new Promise(res => {\n      let query = 'select thematic_conference from conference';\n      query += ' where id=' + conferenceId;\n      //console.log(query);\n      this.db.executeSql(query, [], rs => {\n        //console.log(rs);\n        let list = rs.rows.item(0).thematic_conference;\n        //console.log(list);\n        this.getThematicList(list).then(rs => {\n            //console.log(\"res after getThematicList=\", rs);\n            res(rs);\n          }\n        )\n      });\n\n    });\n  }\n\n  getThematicList(list: string) {\n    return new Promise(res => {\n      //console.log('get thematicConference list=', list);\n      let thematic: string[];\n      thematic = list.split(',');\n      //console.log('an array=', thematic);\n      let whereStr: string = ' where ';\n      for (let i = 0; i < thematic.length; i++) {\n        if (i > 0) whereStr += ' or ';\n        whereStr += 'id=' + thematic[i];\n      }\n      //console.log(\"whereStr=\", whereStr);\n      let query = \"SELECT * FROM \"+this.tableName;\n      query += ' ' + whereStr;\n      //console.log(query);\n      this.arr = [];\n      this.db.executeSql(query, [], rs => {\n        if (rs.rows.length > 0) {\n          this.arr = [];\n          for (let i = 0; i < rs.rows.length; i++) {\n            this.arr.push(<thematicConference>rs.rows.item(i));\n          }\n        }\n        res(this.arr);\n      }, (e) => {\n        //console.log('Sql Query Error', e);\n      });\n    })\n  }\n\n/*  getParticipantForThematic(thematic: string) {\n    //console.log(\"getParticipantForThematic\");\n    //console.log(\"thematic=\", thematic);\n    return new Promise(res => {\n      let query = 'select a.id, a.name_rus, a.name_eng, a.desc_rus as desc, ' +\n        'a.desc_eng as desc, a.logo, a.address_rus, a.address_eng, a.phone, a.email, ' +\n        'a.www, b.id as my_forum_id, c.name_rus as place_name ' +\n        'from participant a left join myforum b on a.id=b.my_id left join place c on a.place=c.id ' +\n        ' where a.thematic like \"' + thematic + ',%\" or a.thematic like \"%,' + thematic + ',%\" or a.thematic like \"%,' + thematic + '\" or a.thematic=\"' + thematic + '\"';\n      //console.log(query);\n      this.db.executeSql(query, [], rs => {\n        this.arr = [];\n        if (rs.rows.length > 0) {\n          for (var i = 0; i < rs.rows.length; i++) {\n            this.arr.push(<any>rs.rows.item(i));\n\n\n          }\n        }\n        res(this.arr);\n      }, (e) => {\n        //console.log('Sql Query Error', e);\n      });\n    })\n  }*/\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/thematic-conference-sql/thematic-conference-sql.ts","import {Injectable} from '@angular/core';\nimport {Http, RequestOptions /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\n\n\n@Injectable()\nexport class BaseApi {\n    public baseUrl = 'http://army2017.ru';\n    public baseUrlApi;\n    public baseUrlAjax;\n    private result: any = {};\n\n\n    constructor(public http: Http) {\n        //console.log('new Base  api is created');\n        this.baseUrlApi = this.baseUrl + '/api';\n        this.baseUrlAjax = this.baseUrl + '/ajax';\n    }\n\n    //public userId:any;\n\n   getApi(apiPhp) {\n        //console.log('**about to make HTTP call for', apiPhp);\n        /*var headers = new Headers();\n        headers.append(\"Access-Control-Allow-Origin\", '*');*/\n       /* headers.append(\"Accept\", 'application/json');\n        headers.append('Content-Type', 'application/json' );*/\n       // let options = new RequestOptions(headers);\n\n        return this.http.get(`${this.baseUrlApi}/` + apiPhp)\n            .map(response => {\n                this.result = response.json();\n                //console.log(\"getApi result=\", this.result);\n                return this.result;\n            });\n    }\n/*\n    getApi(apiPhp) {\n        //console.log('**about to make HTTP call for', apiPhp);\n       var headers = new Headers();\n        headers.append(\"Access-Control-Allow-Origin\", '*');\n\n        let options = new RequestOptions(headers);\n\n        return this.http.get(apiPhp)\n            .map(response => {\n                this.result = response.json();\n                //console.log(\"getApi result=\", this.result);\n                return this.result;\n            });\n    }\n*/\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/base-api-service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseSql} from \"../base-sql\";\n\n/*\n  Generated class for the TableActionSql provider.\n\nthis table contains information about action which were done with tables\n*/\ndeclare let window: any;\n\n\n@Injectable()\nexport class TableActionSql extends BaseSql{\n\n\n  constructor(public http: Http) {\n    super(http,'table_action',[\n      {name:\"id\", type:\"text PRIMARY KEY\"    },\n      {name:\"table_name\", type:\"text\"    },\n      {name:\"action\", type:\"text\"    },\n      {name:\"date_change\", type:\"text\"    },\n      {name:\"time_change\", type:\"text\"    }\n      ]\n    );\n    //console.log('Hello table_action constructor');\n    //this.openDb();\n  }\n\n\n\n\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/table-action-sql/thematic-action-sql.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams, ToastController} from 'ionic-angular';\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\n\nimport {Http} from \"@angular/http\";\nimport {ExhibitDetailPage} from \"../exhibit-detail/exhibit-detail\";\nimport {FilterExhibitProvider} from \"../../providers/filter-provider/filter-exhibit-provider\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\n\n\n@Component({\n    selector: 'page-exhibit',\n    templateUrl: 'exhibit.html',\n    providers: [FilterExhibitProvider],\n})\nexport class ExhibitPage extends BaseListPageProvider {\n\n\n    constructor(public navCtrl: NavController,\n                public http: Http,\n                public sqlMyForum: MyForumSql,\n                public navParams: NavParams,\n                public toastCtrl: ToastController,\n                public filterProvider: FilterExhibitProvider,\n                public events: Events) {\n\n        super(navCtrl, navParams, events, http);//, placeSql, mapSql);\n        // this.listOut = [];\n        //console.log(\"navParams in constructor\", navParams);\n        //console.log(\"navParams==null\", this.navParams == null);\n        //console.log(\"navParams.data.length\", navParams.data.length);\n        let param = navParams.get('select');\n        //console.log(\"navParams.get('select')\", param);\n        if (param == 'thematicexhibit') {\n            let toast = this.toastCtrl.create({\n                message: 'Загрузка из API ',\n                duration: 5000\n            });\n            toast.present();\n            //console.log(\"navParams.data\", navParams.data.data);\n            this.listOut = navParams.data.data;\n        }\n        this.iblockId = 10;//number of the infoblock in bitrix\n        this.events.subscribe('myforum:add:exhibit', (id) => {\n                //console.log('was added id =', id);\n                let element = this.listOut.find(x => x.id == id.id);\n                element.my_forum_id = id.my_forum_id;\n                //console.log('was added =', element);\n            }\n        );\n        this.events.subscribe('myforum:delete:exhibit', (id) => {\n                //console.log('was deleted id=', id);\n                let element = this.listOut.find(x => x.id == id);\n                element.my_forum_id = null;\n                //console.log('was deleted =', element);\n            }\n        );\n    }\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n\n        //console.log('ionViewDidLoad exhibitPage');\n        //console.log(\"this.navParams=\", this.navParams);\n        //console.log(\"this.navParams.data=\", this.navParams.data);\n        //console.log(\"navParams==null\", this.navParams == null);\n        let param = this.navParams.get('select');\n        if (param == 'thematicexhibit') {\n            //console.log(\"this.navParams in ioViewDidLoad =\", this.navParams);\n            this.listOut = this.navParams.data;\n        }\n        else {\n            this.exhibitRefresh();\n        }\n    }\n\n    exhibitRefresh() {\n        //console.log(\"this.selectexhibitAll()\");\n        let toast = this.toastCtrl.create({\n            message: this.loadStr,\n            duration: 5000\n        });\n        toast.present();\n        this.selectExhibitAll();\n\n\n    }\n\n    /**\n     *\n     * @param exhibitSingle\n     */\n    goToExhibitDetail(elementSingle) {\n        //console.log(\"goToParticipantDetail()\");\n        //console.log(elementSingle);\n        // go to the session detail page\n        // and pass in the session data\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusExhibitFull('where a.id=' + elementSingle.id).then(res => {\n                let element = <any>res;\n                //console.log(\"participantDetail=\", element);\n                this.navCtrl.push(ExhibitDetailPage, {\n                    element\n                });\n            });\n        } else\n            this.sqlMyForum.getEngExhibitFull('where a.id=' + elementSingle.id).then(res => {\n                let element = <any>res;\n                this.navCtrl.push(ExhibitDetailPage, {element});\n            });\n    }\n\n\n    selectExhibitAll(whereStr = '') {\n        //console.log(\"selectexhibitAll() where=\", whereStr);\n        //console.log(\"selectexhibitAll() lang\", this.lang);\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusExhibit(whereStr).then(res => {\n                //console.log('this.sqlMyForum.getRusexhibit().then( res=', res);\n                //console.log('(<exhibitRusMyForum[]>res).length=', (<any[]>res).length);\n                if ((<any[]>res).length) {\n                    //console.log('selectexhibitAll() after  select res');\n                    //console.log(res);\n                    this.listOut = <any[]>res;\n                    //console.log(\"this.listOut\");\n                    //console.log(this.listOut);\n                }\n\n            })\n        }\n        else {\n            this.sqlMyForum.getEngExhibit(whereStr).then(res => {\n                //console.log('this.sqlMyForum.getEngexhibit().then( res=', res);\n                //console.log('(<any[]>res).length=', (<any[]>res).length);\n                if ((<any[]>res).length) {\n                    //console.log('selectexhibitAll() after  select res');\n                    //console.log(res);\n                    this.listOut = <any[]>res;\n                    //console.log(\"this.listOut\");\n                    //console.log(this.listOut);\n                }\n\n            })\n        }\n    }\n\n\n    deleteFromMyForum(id) {\n        this.sqlMyForum.delFromMyForum(id).then(res => {\n            this.exhibitRefresh();\n        });\n\n    }\n\n    /**\n     * add a record in to the myforum table and in site infoblock \"myforum\" for current exhibit element\n     * @param id\n     */\n    addToMyForumSite(id) {\n        this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId, this.listOut).then(res => {\n                //console.log(\"and refresh now\");\n                //console.log(\"res=\", res);\n            }\n        );\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Экспонаты МО')\n\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Exhibit of the MoD');\n\n    }\n\n    setFilterStrExhibit() {\n        this.filterStr = this.filterProvider.filterStr;\n        //console.log(\"this.filterStr\", this.filterStr);\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusExhibit(this.filterStr).then(res => {\n                //console.log('our select');\n                //console.log(res);\n                this.listOut = res;\n                this.showHideFilter();\n            });\n        } else {\n            this.sqlMyForum.getEngExhibit(this.filterStr).then(res => {\n                //console.log('our select');\n                //console.log(res);\n                this.listOut = res;\n                this.showHideFilter();\n            });\n        }\n    }\n\n    cancelFilterStrExhibit() {\n        this.filterProvider.cancelFilter();\n        this.showHideFilter();\n    }\n}\n\n//было 404 строки до рефакторинга 2\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/exhibit/exhibit.ts","import {Injectable} from '@angular/core';\nimport {Http /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\nimport {BaseApi} from \"../base-api-service\";\n\n\n@Injectable()\nexport class ExhibitApiService extends BaseApi{\n//  private baseUrl = 'http://army2017.ru/api';\n\n  private conference: any = {};\n\n\n  constructor(public http: Http) {\n    super(http);\n    //console.log('conferenceSingle api is created');\n  }\n\n  public userId:any;\n\n  getExhibit() {\n    //console.log('**about to make HTTP call for all');\n    return this.http.get(this.baseUrlApi+'conference_list.php')\n      .map(response => {\n        this.conference = response.json();\n        //console.log(\"after API\");\n        //console.log(this.conference);\n        return this.conference;\n      });\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/exhibit/exhibit-api-service.ts","import {Component} from '@angular/core';\rimport {Events, NavController, NavParams, ToastController} from 'ionic-angular';\rimport {MyForumSql} from \"../../providers/my-forum-sql\";\r/*import {conferenceRusMyForum, ConferenceSql} from \"../../providers/conference-sql/conference-sql\";*/\rimport {Http} from \"@angular/http\";\r\rimport {MapSql} from \"../../providers/map-sql/map-sql\";\rimport { PlaceSql} from \"../../providers/place-sql/place-sql\";\r\rimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\rimport {DemoProgramDetailPage} from \"../demo-program-detail/demo-program-detail\";\rimport {FilterDemoProgramProvider} from \"../../providers/filter-provider/filter-demo-program-provider\";\r\r\r@Component({\r    selector: 'page-demo-program',\r    templateUrl: 'demo-program.html',\r    providers: [FilterDemoProgramProvider],\r})\rexport class DemoProgramPage extends BaseListPageProvider {\r\r\r\r    /**\r     * @TODO change BaseApi for Base api for ConferenceSql\r     */\r    constructor(public navCtrl: NavController,\r                public http: Http,\r                public sqlMyForum: MyForumSql,\r                public navParams: NavParams,\r                public toastCtrl: ToastController,\r                public mapSql: MapSql,\r                public placeSql: PlaceSql,\r                public filterProvider: FilterDemoProgramProvider,\r                public events: Events) {\r        super(navCtrl, navParams, events, http);\r        //console.log(\"navParams in constructor\", navParams);\r        //console.log(\"navParams==null\", this.navParams == null);\r        //console.log(\"navParams.data.length\", navParams.data.length);\r        let param = navParams.get('select');\r        //console.log(\"navParams.get('select')\", param);\r        if (param == 'thematicConference') {\r            let toast = this.toastCtrl.create({\r                message: 'Загрузка из API ',\r                duration: 5000\r            });\r            toast.present();\r            //console.log(\"navParams.data\", navParams.data.data);\r            this.listOut = navParams.data.data;\r        }\r        this.iblockId = 19;\r        this.events.subscribe('myforum:add:demo', (id) => {\r                //console.log('was added id =', id);\r                let element = this.listOut.find(x => x.id == id.id);\r                element.my_forum_id = id.my_forum_id;\r                //console.log('was added =', element);\r            }\r        );\r        this.events.subscribe('myforum:delete:demo', (id) => {\r                //console.log('was deleted id=', id);\r                let element = this.listOut.find(x => x.id == id);\r                element.my_forum_id = null;\r                //console.log('was deleted =', element);\r            }\r        );\r    }\r\r    ionViewDidLoad() {\r        super.ionViewDidLoad();\r\r\r        //console.log(\"this.navParams=\", this.navParams);\r        //console.log(\"this.navParams.data=\", this.navParams.data);\r        //console.log(\"navParams==null\", this.navParams == null);\r        let param = this.navParams.get('select');\r        if (param == 'thematicConference') {\r            //console.log(\"this.navParams in ioViewDidLoad =\", this.navParams);\r            this.listOut = this.navParams.data;\r        }\r        else {\r            this.DemoProgramRefresh();\r\r        }\r\r    }\r\r    DemoProgramRefresh() {\r        //console.log(\"this.selectConferenceAll()\");\r        let toast = this.toastCtrl.create({\r            message: 'Загрузка из базы ',\r            duration: 5000\r        });\r        toast.present();\r        this.selectDemoProgramAll();\r        //console.log(\"step 1\");\r\r\r    }\r\r\r    /**\r     *\r     * @param conferenceSingle\r     */\r    goToListDetail(element) {\r        //console.log(\"goToParticipantDetail()\");\r        //console.log(element);\r        // go to the session detail page\r        // and pass in the session data\r        this.navCtrl.push(DemoProgramDetailPage, {\r            element\r        });\r    }\r\r\r    selectDemoProgramRus() {\r        this.sqlMyForum.getRusDemoProgram().then(res => {\r            //console.log('our select');\r            //console.log(res);\r            this.listOut = res;\r        })\r\r    }\r\r    changeName() {\r        this.listOut.forEach(element => {\r            //element.name.replace('&quot;','\"');\r            let name = element.name.split('::');\r            if (name[0]) element[\"name_first\"] = name[0].replace(/&quot;/g,'\"');\r            else (element[\"name_first\"] = element.name);\r            if (name[1]) element[\"name_second\"] = name[1].replace(/&quot;/g,'\"');\r\r        });\r    }\r\r\r    selectDemoProgramAll(whereStr = '') {\r        //console.log(\"selectConferenceAll() where=\", whereStr);\r        if (this.lang == 'ru') {\r            this.sqlMyForum.getRusDemoProgram(whereStr).then(res => {\r                //console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);\r                //console.log('(<any[]>res).length=', (<any[]>res).length);\r                if ((<any[]>res).length) {\r                    //console.log('DemoProgram() after  select res');\r                    //console.log(res);\r                    this.listOut = <any[]>res;\r                    this.changeName();\r                    //console.log(\"this listOut\");\r                    //console.log(this.listOut);\r                }\r\r            })\r        }\r        else {\r            this.sqlMyForum.getEngDemoProgram(whereStr).then(res => {\r                //console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);\r                //console.log('(<any[]>res).length=', (<any[]>res).length);\r                if ((<any[]>res).length) {\r                    //console.log('selectCDemoProgram() after  select res');\r                    //console.log(res);\r                    this.listOut = <any[]>res;\r                    this.changeName();\r                    //console.log(\"this.listOut\");\r                    //console.log(this.listOut);\r                }\r\r            })\r        }\r\r    }\r\r\r    deleteFromMyForum(id) {\r        this.sqlMyForum.delFromMyForum(id).then(res => {\r            this.DemoProgramRefresh();\r        });\r\r    }\r\r    /**\r     * add a record in to the myforum table and in site infoblock \"myforum\" for current Conference element\r     * @param id\r     */\r    addToMyForumSite(id) {\r        this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId, this.listOut).then(res => {\r\r                //console.log(\"and refresh now\");\r                //console.log(\"res=\", res);\r                /* if (res) {\r                 for (let conference of this.demoProgramList) {\r                 if (conference.id == id) conference.my_forum_id = res;\r                 //console.log(\"demoProgramList after inserting=\", this.demoProgramList);\r\r                 }\r                 }*/\r                // this.conferenceRefresh();\r            }\r        );\r\r        // //console.log(\"and refresh now2\");\r        // this.conferenceRefresh();\r    }\r\r\r\r    setRussianStrings() {\r        super.setRussianStrings('Демо-программа');\r        //console.log('this.setRussianStrings()');\r    }\r\r    setEnglishStrings() {\r        super.setEnglishStrings('Demo program');\r        //console.log('this.setEnglishStrings()');\r    }\r\r    setFilterStrDemoProgram() {\r        this.filterStr = this.filterProvider.filterStr;\r        //console.log(\"this.filterStr\", this.filterStr);\r        this.listOut=[];\r        if (this.lang == 'ru') {\r            this.sqlMyForum.getRusDemoProgram(this.filterStr).then(res => {\r                //console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);\r                //console.log('(<any[]>res).length=', (<any[]>res).length);\r                if ((<any[]>res).length) {\r                    //console.log('DemoProgram() after  select res');\r                    //console.log(res);\r                    this.listOut = <any[]>res;\r                    this.changeName();\r                    //console.log(\"this listOut\");\r                    //console.log(this.listOut);\r                }\r\r            })\r        }\r        else {\r            this.sqlMyForum.getEngDemoProgram(this.filterStr).then(res => {\r                //console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);\r                //console.log('(<any[]>res).length=', (<any[]>res).length);\r                if ((<any[]>res).length) {\r                    //console.log('selectCDemoProgram() after  select res');\r                    //console.log(res);\r                    this.listOut = <any[]>res;\r                    this.changeName();\r                    //console.log(\"this.listOut\");\r                    //console.log(this.listOut);\r                }\r\r            })\r        }\r        this.showHideFilter();\r    }\r\r    cancelFilterStrDemoProgram() {\r        this.filterProvider.cancelFilter();\r        this.showHideFilter();\r    }\r}\r\n\n\n// WEBPACK FOOTER //\n// ./src/pages/demo-program/demo-program.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\nimport {HowToGetPatriotPage} from \"./how-to-get-patriot/how-to-get-patriot\";\nimport {HowToGetRoutesPage} from \"./how-to-get-routes/how-to-get-routes\";\n\n/**\n * Generated class for the HowToGetPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n    selector: 'page-how-to-get',\n    templateUrl: 'how-to-get.html',\n})\nexport class HowToGetPage extends BaseLangPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl, events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad HowToGetPage');\n    }\n\n    setRussianStrings(){\n        super.setRussianStrings('Как добраться');\n\n    }\n    setEnglishStrings(){\n        super.setEnglishStrings('How to get to');\n    }\n\n    getPatriotAndAlabino(){\n        this.navCtrl.push(HowToGetPatriotPage);\n    }\n\n    getRoutesPage(){\n        this.navCtrl.push(HowToGetRoutesPage);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/how-to-get/how-to-get.ts","import { Component } from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\nimport {HowToGetPatriotByCarPage} from \"./how-to-get-patriot-by-car/how-to-get-patriot-by-car\";\nimport {HowToGetPatriotByTransportPage} from \"./how-to-get-patriot-by-transport/how-to-get-patriot-by-transport\";\nimport {HowToGetPatriotByTransportKievPage} from \"./how-to-get-patriot-by-transport-kiev/how-to-get-patriot-by-transport-kiev\";\n\n/**\n * Generated class for the HowToGetPatriotPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n    selector: 'page-how-to-get-patriot',\n    templateUrl: 'how-to-get-patriot.html',\n})\nexport class HowToGetPatriotPage extends BaseLangPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl, events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad HowToGetPage');\n    }\n\n    setRussianStrings(){\n        super.setRussianStrings('КАК ДОБРАТЬСЯ ДО КВЦ ПАТРИОТ И ПОЛИГОНА АЛАБИНО');\n\n    }\n    setEnglishStrings(){\n        super.setEnglishStrings('How to get to');\n    }\n\n\n    byCar(){\n        this.navCtrl.push(HowToGetPatriotByCarPage);\n    }\n    byTransport(){\n        this.navCtrl.push(HowToGetPatriotByTransportPage);\n    }\n\n    byTransportKiev(){\n        this.navCtrl.push(HowToGetPatriotByTransportKievPage);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot.ts","import { Component } from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\nimport {BaseListPageProvider} from \"../../../../providers/base-list-page/base-list-page\";\n\n/**\n * Generated class for the HowToGetPatriotByCarPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-how-to-get-patriot-by-car',\n  templateUrl: 'how-to-get-patriot-by-car.html',\n})\nexport class HowToGetPatriotByCarPage extends BaseListPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl,navParams, events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad HowToGetPage');\n    }\n\n    setRussianStrings(){\n        super.setRussianStrings('Как добраться на машине');\n\n    }\n    setEnglishStrings(){\n        super.setEnglishStrings('How to get by car');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-car/how-to-get-patriot-by-car.ts","import { Component } from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseListPageProvider} from \"../../../../providers/base-list-page/base-list-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the HowToGetPatriotByTransportPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-how-to-get-patriot-by-transport',\n  templateUrl: 'how-to-get-patriot-by-transport.html',\n})\nexport class HowToGetPatriotByTransportPage extends BaseListPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl,navParams, events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad HowToGetPage');\n    }\n\n    setRussianStrings(){\n        super.setRussianStrings('На транспорте');\n\n    }\n    setEnglishStrings(){\n        super.setEnglishStrings('By train and by bus');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-transport/how-to-get-patriot-by-transport.ts","import { Component } from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseListPageProvider} from \"../../../../providers/base-list-page/base-list-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the HowToGetPatriotByTransportKievPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-how-to-get-patriot-by-transport-kiev',\n  templateUrl: 'how-to-get-patriot-by-transport-kiev.html',\n})\nexport class HowToGetPatriotByTransportKievPage extends BaseListPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl,navParams, events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad HowToGetPage');\n    }\n\n    setRussianStrings(){\n        super.setRussianStrings('На транспорте');\n\n    }\n    setEnglishStrings(){\n        super.setEnglishStrings('By train and by bus');\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-transport-kiev/how-to-get-patriot-by-transport-kiev.ts","import { Component } from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {Http} from \"@angular/http\";\nimport {BaseListPageProvider} from \"../../../providers/base-list-page/base-list-page\";\n\n/**\n * Generated class for the HowToGetRoutesPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-how-to-get-routes',\n  templateUrl: 'how-to-get-routes.html',\n})\nexport class HowToGetRoutesPage extends BaseListPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl, navParams, events, http)\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad HowToGetPage');\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Маршруты');\n\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Routes');\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/how-to-get/how-to-get-routes/how-to-get-routes.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams, ToastController} from 'ionic-angular';\n\n\nimport {Http} from \"@angular/http\";\nimport {PatriotDetailPage} from \"../patriot-detail/patriot-detail\";\n\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\nimport {PatriotSql} from \"../../providers/patriot/patriot-sql\";\n\n\n@Component({\n    selector: 'page-Patriot',\n    templateUrl: 'patriot.html',\n   // providers: [FilterPatriotProvider],\n})\nexport class PatriotPage extends BaseListPageProvider {\n\n\n    constructor(public navCtrl: NavController,\n                public http: Http,\n                public patriotSql: PatriotSql,\n                public navParams: NavParams,\n                public toastCtrl: ToastController,\n                //  public filterProvider: FilterPatriotProvider,\n                public events: Events) {\n\n        super(navCtrl, navParams, events, http);//, placeSql, mapSql);\n        // this.listOut = [];\n        //console.log(\"navParams in constructor\", navParams);\n        //console.log(\"navParams==null\", this.navParams == null);\n        //console.log(\"navParams.data.length\", navParams.data.length);\n        let param = navParams.get('select');\n        //console.log(\"navParams.get('select')\", param);\n        if (param == 'thematicPatriot') {\n            let toast = this.toastCtrl.create({\n                message: 'Загрузка из API ',\n                duration: 5000\n            });\n            toast.present();\n            //console.log(\"navParams.data\", navParams.data.data);\n            this.listOut = navParams.data.data;\n        }\n        this.iblockId = 10;//number of the infoblock in bitrix\n        this.events.subscribe('myforum:add:patriot', (id) => {\n                //console.log('was added id =', id);\n                let element = this.listOut.find(x => x.id == id.id);\n                element.my_forum_id = id.my_forum_id;\n                //console.log('was added =', element);\n            }\n        );\n        this.events.subscribe('myforum:delete:patriot', (id) => {\n                //console.log('was deleted id=', id);\n                let element = this.listOut.find(x => x.id == id);\n                element.my_forum_id = null;\n                //console.log('was deleted =', element);\n            }\n        );\n    }\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n\n        //console.log('ionViewDidLoad PatriotPage');\n        //console.log(\"this.navParams=\", this.navParams);\n        //console.log(\"this.navParams.data=\", this.navParams.data);\n        //console.log(\"navParams==null\", this.navParams == null);\n        let param = this.navParams.get('select');\n        if (param == 'thematicPatriot') {\n            //console.log(\"this.navParams in ioViewDidLoad =\", this.navParams);\n            this.listOut = this.navParams.data;\n        }\n        else {\n            this.PatriotRefresh();\n        }\n    }\n\n    PatriotRefresh() {\n        //console.log(\"this.selectPatriotAll()\");\n        let toast = this.toastCtrl.create({\n            message: this.loadStr,\n            duration: 5000\n        });\n        toast.present();\n        this.selectPatriotAll();\n\n\n    }\n\n    /**\n     *\n     * @param PatriotSingle\n     */\n    goToPatriotDetail(elementSingle) {\n        //console.log(\"goToParticipantDetail()\");\n        //console.log(elementSingle);\n        // go to the session detail page\n        // and pass in the session data\n        if (this.lang == 'ru') {\n            this.patriotSql.selectPatriotRusFull(' where id=' + elementSingle.id).then(res => {\n                let element = <any>res;\n                //console.log(\"participantDetail=\", element);\n                this.navCtrl.push(PatriotDetailPage, {\n                    element\n                });\n            });\n        } else\n            this.patriotSql.selectPatriotEngFull(' where id=' + elementSingle.id).then(res => {\n                let element = <any>res;\n                this.navCtrl.push(PatriotDetailPage, {element});\n            });\n    }\n\n\n    selectPatriotAll(whereStr = '') {\n        //console.log(\"selectPatriotAll() where=\", whereStr);\n        //console.log(\"selectPatriotAll() lang\", this.lang);\n        if (this.lang == 'ru') {\n            this.patriotSql.selectPatriotRus(whereStr).then(res => {\n                //console.log('this.patriotSql.getRusPatriot().then( res=', res);\n                //console.log('(<PatriotRusMyForum[]>res).length=', (<any[]>res).length);\n                if ((<any[]>res).length) {\n                    //console.log('selectPatriotAll() after  select res');\n                    //console.log(res);\n                    this.listOut = <any[]>res;\n                    //console.log(\"this.listOut\");\n                    //console.log(this.listOut);\n                }\n\n            })\n        }\n        else {\n            this.patriotSql.selectPatriotEng(whereStr).then(res => {\n                //console.log('this.patriotSql.getEngPatriot().then( res=', res);\n                //console.log('(<any[]>res).length=', (<any[]>res).length);\n                if ((<any[]>res).length) {\n                    //console.log('selectPatriotAll() after  select res');\n                    //console.log(res);\n                    this.listOut = <any[]>res;\n                    //console.log(\"this.listOut\");\n                    //console.log(this.listOut);\n                }\n\n            })\n        }\n    }\n\n\n    setRussianStrings() {\n        super.setRussianStrings('Парка Патриот')\n\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Park Patriot');\n\n    }\n\n\n}\n//было 404 строки до рефакторинга 2\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/patriot/patriot.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {Http} from \"@angular/http\";\n\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\n\n\n\n@Component({\n    selector: 'page-patriot-detail',\n    templateUrl: 'patriot-detail.html'\n})\nexport class PatriotDetailPage extends BaseListPageProvider {\n    element: any;\n    thematic: any;\n    myForum: any;\n\n\n    //interface strings\n    title: string;\n    onMapStr: string;\n    myForumStr: string;\n    thematicStr: string;\n    charactersStr: string;\n    characters = [];\n\n    // characteristicsHtml: string;\n\n    constructor(public NavCtrl: NavController,\n                public navParams: NavParams,\n               // public patriotDetailSql: PatriotSql,\n                public sqlMyForum: MyForumSql,\n                public events: Events,\n                public http: Http,\n               ) {\n        super(NavCtrl, navParams, events, http);\n        //console.log(\"now in patriot detail\");\n        //console.log(navParams);\n        this.thematic = [];\n        if (navParams.data.element)\n            if (navParams.data.element.length)\n                this.element = navParams.data.element[0];\n            else this.element = navParams.data.element;\n        else if (navParams.data.res) this.element = navParams.data.res;\n        this.iblockId = 10;\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Объект парка');\n        this.charactersStr = 'ТТХ';\n        this.onMapStr = 'На карте';\n        this.myForumStr = 'Мой форум';\n        this.thematicStr = 'Тематика:'\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Patriot');\n        this.charactersStr = 'Technical characteristics';\n        this.onMapStr = 'Map';\n        this.myForumStr = 'My Forum';\n        this.thematicStr = 'Thematic Section:'\n    }\n\n    /*\n    Время развертывания, мин::\n    первой очереди (без палаток):\n    10; полное:30-45 мин;;\n    Вместимость предперевязочной и эвакуационной палаток, чел:: на носилках: 18; сидя (дополнительно) - 10;;\n     */\n   /* prepareCharacteristics() {\n\n        this.characters = [];\n        // let tmpHtml = '';\n        if (!this.element.characteristics) return;\n        let doubleSemiColon = this.element.characteristics.split(';;');\n        //  if (doubleSemiColon.length > 1) {\n        //    let i = 0;\n        for (let i = 0; i < doubleSemiColon.length; i++) {\n\n\n            let doubleColon = doubleSemiColon[i].split('::');\n\n            for (let j = 0; j < doubleColon.length; j++) {\n\n                let singleComma = doubleColon[j].split(';');\n                singleComma.forEach(singleCommaStr => {\n                    let tmpStr: string;\n                    let size: number = 0;\n\n                    tmpStr = singleCommaStr;\n                    if (i == 0 && j == 0) {\n                        tmpStr += ':';\n                        size = 2\n                    }\n\n                    this.characters.push({size: size, text: tmpStr});\n                    /!*let singleColon=singleCommaStr.split(':');\n                    singleColon.forEach(singleColonStr=>{\n                      this.characters.push(singleColonStr);\n                    })*!/\n                });\n            }\n        }\n    }\n*/\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        // this.userId = localStorage.getItem('userid');\n\n       /* this.prepareCharacteristics();\n        this.patriotDetailSql.getFieldFromTable(this.element.id, 'id', 'myforum').then(\n            //getMyForumForId(this.conferenceSingle.id).then(\n            rs => {\n                if (rs) {\n                //    //console.log(\"res in conferenceSingle myForumPatriot\", rs);\n                    this.myForum = <any>rs;\n                }\n\n            }\n        );*/\n\n\n    }\n\n\n\n\n    /*async changeMyForum(element) {\n        if (this.userId) {\n         //   let participant = this.participantList.find(x => x.id == id);\n            //element.my_forum_id = id.my_forum_id;\n            // //console.log('was added =', element);\n            if (element.my_forum_id > 0) {\n\n                element.my_forum_id = await this.deleteFromMyForum(element.id);\n                this.events.publish('myforum:delete:patriot', (element.id)\n                );\n            }\n            else {\n                element.my_forum_id = await this.addToMyForumSite(element.id);\n                // ''this.participantApi\n                this.events.publish('myforum:add:patriot', ({id: element.id, my_forum_id: element.my_forum_id})\n                );\n\n\n\n            }\n        }\n    }\n\n    deleteFromMyForum(id) {\n        if (this.userId) {\n            this.sqlMyForum.delFromMyForum(id).then(res => {\n                if (res) return null;\n                else return -1;\n            });\n        }\n    }\n\n    async addToMyForumSite(id) {\n        if (this.userId) {\n            return await this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId);\n        }\n    }\n\n*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/patriot-detail/patriot-detail.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseSql} from \"../base-sql\";\nimport {ExhibitApiService} from \"../../providers/exhibit/exhibit-api-service\";\nimport {PatriotApiService} from \"./patriot-api-service\";\n\n/*\n Generated class for the exhibitSql provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n\n\nexport interface exhibitRus {\n    id: string;\n    name_rus: string;\n    name_rus_upper: string;\n    place_name: string;\n\n    place: string;\n    format: string;\n\n    contact: string;\n\n    thematic_exhibit: string;\n    organizer: string;\n\n    date_event: string;\n    time_beg: string;\n    time_end: string;\n\n\n}\n\nexport interface exhibit extends exhibitRus {\n\n    name_eng: string;\n\n    place_name_eng: string;\n\n\n    format_eng: string;\n\n    contact_eng: string;\n\n\n    organizer_eng: string;\n}\n\n\ndeclare let window: any;\n\n@Injectable()\nexport class PatriotSql extends BaseSql {\n    public text: string = \"\";\n\n\n    public api: PatriotApiService;\n\n    constructor(public http: Http) {\n        super(http, 'patriot',\n            [{name: \"id\", type: \"text PRIMARY KEY\"},\n                {name: \"name_rus\", type: \"text\"},\n                {name: \"name_rus_upper\", type: \"text\"},\n                {name: \"name_eng\", type: \"text\"},\n                {name: \"image\", type: \"text\"},\n                {name: \"image_file\", type: \"text\"},\n                {name: \"place\", type: \"text\"},\n                {name: \"marker\", type: \"text\"},\n                {name: \"popup\", type: \"text\"},\n                {name: \"tooltip\", type: \"text\"},\n                {name: \"desc_rus\", type: \"text\"},\n                {name: \"desc_eng\", type: \"text\"}]);\n\n\n    }\n\n\n    addFromApi() {\n        this.api = new PatriotApiService(this.http);\n        this.api.getExhibit().subscribe(res => {\n            let listApi = <exhibit[]>res;\n            for (let i = 0; i < listApi.length; i++) {\n                //   this.addItemexhibit(listApi[i]);\n            }\n        });\n    }\n\n    selectPatriotRus(whereStr ?, fieldSort ?: string) {\n\n        return new Promise(res => {\n\n            this.arr = [];\n            let query = \"SELECT id, name_rus as name, image_file  FROM \" + this.tableName;\n            if (whereStr != '') {\n                if (!whereStr.includes('where')) query += ' where ';\n                query += ' ' + whereStr;\n            }\n            if (fieldSort) {\n                if (fieldSort != '') query += ' order by ' + fieldSort;\n            }\n            //console.log(\"query=\", query);\n            this.db.executeSql(query, [], rs => {\n\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                    res(this.arr);\n                }\n                else res(false);\n            }, (e) => {\n                res(false);\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n\n    }\n\n    selectPatriotEng(whereStr ?, fieldSort ?: string) {\n\n        return new Promise(res => {\n\n            this.arr = [];\n            let query = \"SELECT id, name_eng as name ,image_file  FROM \" + this.tableName;\n            if (whereStr != '') {\n                if (!whereStr.includes('where')) query += ' where ';\n                query += ' ' + whereStr;\n            }\n            if (fieldSort) {\n                if (fieldSort != '') query += ' order by ' + fieldSort;\n            }\n            //console.log(\"query=\", query);\n            this.db.executeSql(query, [], rs => {\n\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                    res(this.arr);\n                }\n                else res(false);\n            }, (e) => {\n                res(false);\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n\n    }\n\n\n    selectPatriotRusFull(whereStr ?, fieldSort ?: string) {\n\n        return new Promise(res => {\n\n            this.arr = [];\n            let query = \"SELECT id, name_rus as name, desc_rus as desc, image_file, place  FROM \" + this.tableName;\n            if (whereStr != '') {\n                if (!whereStr.includes('where')) query += ' where ';\n                query += ' ' + whereStr;\n            }\n            if (fieldSort) {\n                if (fieldSort != '') query += ' order by ' + fieldSort;\n            }\n            //console.log(\"query=\", query);\n            this.db.executeSql(query, [], rs => {\n\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                    res(this.arr);\n                }\n                else res(false);\n            }, (e) => {\n                res(false);\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n\n    }\n\n    selectPatriotEngFull(whereStr ?, fieldSort ?: string) {\n\n        return new Promise(res => {\n\n            this.arr = [];\n            let query = \"SELECT id, name_eng as name, desc_rus as desc, image_file, place  FROM \" + this.tableName;\n            if (whereStr != '') {\n                if (!whereStr.includes('where')) query += ' where ';\n                query += ' ' + whereStr;\n            }\n            if (fieldSort) {\n                if (fieldSort != '') query += ' order by ' + fieldSort;\n            }\n            //console.log(\"query=\", query);\n            this.db.executeSql(query, [], rs => {\n\n                if (rs.rows.length > 0) {\n                    this.arr = [];\n\n                    for (let i = 0; i < rs.rows.length; i++) {\n                        this.arr.push(<any>rs.rows.item(i));\n                    }\n                    res(this.arr);\n                }\n                else res(false);\n            }, (e) => {\n                res(false);\n                //console.log('Sql Query Error', e);\n            });\n        })\n\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/patriot/patriot-sql.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n/*\n  Generated class for the Settings page.\n\n  See http://ionicframework.com/docs/v2/components/#navigation for more info on\n  Ionic pages and navigation.\n*/\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import {Component} from '@angular/core';\n\nimport {AlertController, Events, NavController} from 'ionic-angular';\n\nimport {UserData} from '../../providers/user-data';\nimport {TabsPage} from \"../tabs/tabs\";\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\n\n\n@Component({\n    selector: 'page-account',\n    templateUrl: 'account.html'\n})\nexport class AccountPage extends BaseLangPageProvider {\n    login: string;\n    lastname: string;\n    name: string;\n    email: string;\n\n    loginStr: string;\n    lastnameStr: string;\n    nameStr: string;\n    emailStr: string;\n\n    //interface strings\n\n    profileStr: string;\n    changeUserNameStr: string;\n    updatePictureStr: string;\n    changePasswordStr: string;\n    supportStr: string;\n    logOutStr: string;\n    exitStr: string;\n\n    // lang: string;\n\n    constructor(public alertCtrl: AlertController,\n                public navCtrl: NavController,\n                public userData: UserData,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl, events, http);\n\n    }\n\n\n    setRussianStrings() {\n        super.setRussianStrings('Профиль');\n        this.updatePictureStr = 'Изменить фото';\n        this.changeUserNameStr = 'Сменить пользователя';\n        this.changePasswordStr = 'Изменить пароль';\n        this.supportStr = 'Поддержка';\n        this.logOutStr = 'Выйти';\n        this.exitStr = 'Закрыть';\n        this.profileStr = 'Профиль';\n\n        this.loginStr = 'Логин';\n        this.lastnameStr = 'Фамилия';\n        this.nameStr = \"Имя\";\n        this.emailStr = 'Email';\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Profile');\n        this.changeUserNameStr = 'Change Username';\n        this.updatePictureStr = 'Update Picture';\n        this.changePasswordStr = 'Change Password';\n        this.supportStr = 'Support';\n        this.logOutStr = 'Logout';\n        this.exitStr = 'Close';\n        this.profileStr = 'Profile';\n        this.loginStr = 'Login';\n        this.lastnameStr = 'Last name';\n        this.nameStr = \"Name\";\n        this.emailStr = 'Email';\n\n    }\n\n  /*  ngAfterViewInit() {\n        this.getUsername();\n        this.getLastName();\n    }*/\n\n /*   updatePicture() {\n        //console.log('Clicked to update picture');\n    }\n*/\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        this.getUsername();\n\n    }\n\n    // Present an alert with the current login populated\n    // clicking OK will update the login and display it\n    // clicking Cancel will close the alert and do nothing\n    changeUsername() {\n        let alert = this.alertCtrl.create({\n            title: 'Change Username',\n            buttons: [\n                'Cancel'\n            ]\n        });\n\n        alert.addInput({\n            name: 'login',\n            value: this.login,\n            placeholder: 'login'\n        });\n        alert.addButton({\n            text: 'Ok',\n            handler: (data: any) => {\n                localStorage.setItem('login',data.login);\n\n                this.getUsername();\n            }\n        });\n\n        alert.present();\n    }\n\n    getUsername() {\n        this.login = localStorage.getItem('login');\n        this.name = localStorage.getItem('name');\n        this.lastname = localStorage.getItem('lastname');\n        this.email = localStorage.getItem('email');\n    }\n\n\n\n    changePassword() {\n        //console.log('Clicked to change password');\n    }\n\n    logout() {\n        this.userData.logout();\n        this.navCtrl.setRoot('LoginPage');\n    }\n\n    support() {\n        this.navCtrl.push('SupportPage');\n    }\n\n    exitProfile() {\n        this.navCtrl.push(TabsPage);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/account.ts","import {Injectable} from '@angular/core';\nimport {Http /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\nimport {BaseApi} from \"../base-api-service\";\n\n\n@Injectable()\nexport class UserApi extends BaseApi {\n//  private baseUrl = 'http://army2017.ru/api';\n\n\n    constructor(public http: Http) {\n        super(http);\n        //console.log('conferenceSingle api is created');\n    }\n\n    public userId: any;\n\n    createUser(login, password, name, lastname, email, confirm_password) {\n        try {\n            //console.log(\"I'm inside try\");\n            //console.log(login);\n            //console.log(password);\n            //console.log(`${this.baseUrlApi}/user/create_user.php?LOGIN=` + login + `&PASSWORD=` + password);\n            //console.log(`${this.baseUrl}/api/user/create_user.php?LOGIN=` + login + `&PASSWORD=` + password + `&NAME=` + name + `&SURNAME=` + lastname + `&EMAIL=` + email + `&CONFIRM_PASSWORD=` + confirm_password);\n            return this.http.get(`${this.baseUrl}/api/user/create_user.php?LOGIN=` + login\n                + `&PASSWORD=` + password + `&NAME=` + name\n                + `&SURNAME=` + lastname + `&EMAIL=` + email + `&CONFIRM_PASSWORD=` + confirm_password).map(response => {\n                //console.log(\"response\");\n                let res = response.json();\n                //console.log(res);\n                if (res.result)\n                    this.userId = res.result;\n                else this.userId = res;\n                //console.log(this.userId);\n                if ((this.userId) && (this.userId > 0)) {\n                    localStorage.setItem('userid', this.userId);\n                    return this.userId;\n                }\n                else {\n                    localStorage.removeItem('userid');\n                    return 0;\n                }\n            })\n\n        }\n        catch (err) {\n            //console.log(\"error\");\n            //console.log(err);\n            return err;\n        }\n\n    }\n\n    checkUser(login, password) {\n        try {\n            //console.log(\"I'm inside try\");\n            //console.log(login);\n            //console.log(password);\n            //console.log(`${this.baseUrlApi}/user/check_user.php?LOGIN=` + login + `&PASSWORD=` + password);\n            return this.http.get(`${this.baseUrl}/api/user/check_user.php?LOGIN=` + login + `&PASSWORD=` + password).map(response => {\n                //console.log(\"response\");\n                let res = response.json();\n                //console.log(res);\n\n                this.userId = res.result.ID;\n                //console.log(this.userId);\n                localStorage.setItem('userid', this.userId);\n                return res;\n            })\n\n        }\n        catch (err) {\n            //console.log(\"error\");\n            //console.log(err);\n            return err;\n        }\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user-api.service.ts","import {Component} from '@angular/core';\nimport {NgForm} from '@angular/forms';\n\nimport {Events, NavController} from 'ionic-angular';\n\nimport {UserData} from '../../providers/user-data';\n\nimport {TabsPage} from '../tabs/tabs';\nimport {SignupPage} from '../signup/signup';\n\n\n@Component({\n    selector: 'page-user',\n    templateUrl: 'login.html'\n})\nexport class LoginPage {\n    user: { login?: string, password?: string } = {};\n    submitted = false;\n    lang: string;\n\n    //interface strings\n\n    loginStr: string;\n    userNameStr: string;\n    needUserNameStr: string;\n    passwordStr: string;\n    needPasswordStr: string;\n    signUpStr: string;\n\n    constructor(public navCtrl: NavController, public userData: UserData, public events: Events) {\n        this.events.subscribe('language:change', () => {\n\n\n            this.lang = localStorage.getItem('lang');\n            if (this.lang == 'ru') {\n                //console.log('this.events.subscribe(language:change)', this.lang);\n                this.setRussianStrings();\n            }\n            else {\n                this.setEnglishStrings();\n            }\n        });\n    }\n\n    ionViewDidLoad() {\n        this.lang = localStorage.getItem('lang');\n        if (this.lang == 'ru') this.setRussianStrings();\n        else this.setEnglishStrings();\n    }\n\n    setRussianStrings() {\n        this.loginStr = 'Войти';\n        this.userNameStr = 'Логин';\n        this.needUserNameStr = 'Требуется имя пользователя';\n        this.passwordStr = 'Пароль';\n        this.needPasswordStr = 'Требуется пароль';\n        this.signUpStr = 'Регистрация';\n    }\n\n    setEnglishStrings() {\n        this.loginStr = 'Login';\n        this.userNameStr = 'Username';\n        this.needUserNameStr = 'Need a login';\n        this.passwordStr = 'Password';\n        this.needPasswordStr = 'Need a password';\n        this.signUpStr = 'Sign Up';\n    }\n\n    onLogin(form: NgForm) {\n        this.submitted = true;\n\n        if (form.valid) {\n            this.userData.login(this.user.login, this.user.password);\n            this.navCtrl.push(TabsPage);\n        }\n    }\n\n    onSignup() {\n        this.navCtrl.push(SignupPage);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { AlertController, NavController, ToastController } from 'ionic-angular';\n\n\n@Component({\n  selector: 'page-user',\n  templateUrl: 'support.html'\n})\nexport class SupportPage {\n\n  submitted: boolean = false;\n  supportMessage: string;\n\n  constructor(\n    public navCtrl: NavController,\n    public alertCtrl: AlertController,\n    public toastCtrl: ToastController\n  ) {\n\n  }\n\n  ionViewDidEnter() {\n    let toast = this.toastCtrl.create({\n      message: 'This does not actually send a support request.',\n      duration: 3000\n    });\n    toast.present();\n  }\n\n  submit(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n      this.supportMessage = '';\n      this.submitted = false;\n\n      let toast = this.toastCtrl.create({\n        message: 'Your support request has been sent.',\n        duration: 3000\n      });\n      toast.present();\n    }\n  }\n\n  // If the user enters text in the support question and then navigates\n  // without submitting first, ask if they meant to leave the page\n  ionViewCanLeave(): boolean | Promise<boolean> {\n    // If the support message is empty we should just navigate\n    if (!this.supportMessage || this.supportMessage.trim().length === 0) {\n      return true;\n    }\n\n    return new Promise((resolve: any, reject: any) => {\n      let alert = this.alertCtrl.create({\n        title: 'Leave this page?',\n        message: 'Are you sure you want to leave this page? Your support message will not be submitted.'\n      });\n      alert.addButton({ text: 'Stay', handler: reject });\n      alert.addButton({ text: 'Leave', role: 'cancel', handler: resolve });\n\n      alert.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/support/support.ts","import { Component } from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\nimport {Http} from \"@angular/http\";\n\n\n@Component({\n    selector: 'page-about',\n    templateUrl: 'about.html'\n})\n\n/*export class AboutPage extends BaseListPageProvider{\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl,navParams, events, http);\n    }\n\n\n\n    setRussianStrings(){\n        super.setRussianStrings('О Форуме');\n\n    }\n    setEnglishStrings(){\n        super.setEnglishStrings('About Forum');\n    }\n\n\n\n\n\n}*/\nexport class AboutPage extends BaseListPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public events: Events,\n                public http: Http) {\n        super(navCtrl,navParams, events, http);\n    }\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('О Форуме');\n\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('About Forum');\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component, ViewChild } from '@angular/core';\n\nimport { MenuController, NavController, Slides } from 'ionic-angular';\n\n\nimport { TabsPage } from '../tabs/tabs';\n\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'page-tutorial',\n  templateUrl: 'tutorial.html'\n})\n\nexport class TutorialPage {\n  showSkip = true;\n\n\t@ViewChild('slides') slides: Slides;\n\n  constructor(\n    public navCtrl: NavController,\n    public menu: MenuController,\n    public storage: Storage\n  ) { }\n\n  startApp() {\n    this.navCtrl.push(TabsPage).then(() => {\n      localStorage.set('hasSeenTutorial', 'true');\n    })\n  }\n\n  onSlideChangeStart(slider: Slides) {\n    this.showSkip = !slider.isEnd();\n  }\n\n\tionViewWillEnter() {\n\t\tthis.slides.update();\n\t}\n\n  ionViewDidEnter() {\n    // the root left menu should be disabled on the tutorial page\n    this.menu.enable(false);\n  }\n\n  ionViewDidLeave() {\n    // enable the root left menu when leaving the tutorial page\n    this.menu.enable(true);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tutorial/tutorial.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport {WarTacticPage} from \"../war-tactic-page/war-tactic-page\";\nimport {SectorVksPage} from \"../sektor-vks-page/sector-vks-page\";\nimport {DemoOpkPage} from \"../demo-opk-page/demo-opk-page\";\n\n\n/**\n * Generated class for the ParkPatriotPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-park-patriot',\n  templateUrl: 'park-patriot.html',\n})\nexport class ParkPatriotPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n\n\n  warTacticPage(){\n  this.navCtrl.push(WarTacticPage);\n}\n  sectorVksPage(){\n    this.navCtrl.push(SectorVksPage);\n  }\n\n  demoOpkPage(){\n    this.navCtrl.push(DemoOpkPage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/park-patriot-all/park-patriot/park-patriot.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the SectorVksPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-sektor-vks',\n  templateUrl: 'sector-vks-page.html',\n})\nexport class SectorVksPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad SectorVksPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/park-patriot-all/sektor-vks-page/sector-vks-page.ts","import { Component } from '@angular/core';\nimport {  NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the DemoOpkPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-demo-opk-page',\n  templateUrl: 'demo-opk-page.html',\n})\nexport class DemoOpkPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad DemoOpkPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/park-patriot-all/demo-opk-page/demo-opk-page.ts","import {Injectable} from '@angular/core';\nimport {Http /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\nimport {BaseApi} from \"../../providers/base-api-service\";\n\n\n@Injectable()\nexport class ThematicApi extends BaseApi {\n // private baseUrl = 'http://army2017.ru/api';\n\n  private thematic: any = {};\n\n\n  constructor(public http: Http) {\n    super(http);\n    //console.log('conferenceSingle api is created');\n  }\n\n  public userId:any;\n\n  getThematic() {\n    //console.log('**about to make HTTP call for all');\n    return this.http.get(`${this.baseUrlApi}/thematic_list.php`)\n      .map(response => {\n        this.thematic = response.json();\n        //console.log(this.thematic);\n        return this.thematic;\n      });\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/thematic/thematic-api-service.ts","import {Injectable} from '@angular/core';\nimport {Http /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\nimport {BaseApi} from \"../base-api-service\";\n\n\n@Injectable()\nexport class PlaceApi extends BaseApi{\n  //private baseUrl = 'http://army2017.ru/api';\n\n  private place: any = {};\n\n\n  constructor(public http: Http) {\n    super(http);\n    //console.log('conferenceSingle api is created');\n  }\n  public userId:any;\n\n  getPlace(name_map) {\n    //console.log('**about to make HTTP call for all');\n    return this.http.get(this.baseUrlApi+'/place_list.php?NAME_MAP='+name_map)\n      .map(response => {\n        this.place = response.json();\n        //console.log(this.place);\n        return this.place;\n      });\n  }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/place/place-api-service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {NgModule, ErrorHandler} from '@angular/core';\nimport {IonicApp, IonicModule, IonicErrorHandler} from 'ionic-angular';\nimport {MyApp} from './app.component';\nimport {AboutPage} from '../pages/about/about';\n\nimport {HomePage} from '../pages/home/home';\nimport {TabsPage} from '../pages/tabs/tabs';\nimport {SettingsPage} from '../pages/settings/settings';\nimport {AccountPage} from '../pages/account/account';\n\nimport {ParticipantSql} from '../providers/participant-sql';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {HttpModule} from \"@angular/http\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {StatusBar} from \"@ionic-native/status-bar\";\nimport {ParticipantPage} from \"../pages/participant/participant\";\n\nimport {ParticipantApi} from \"../providers/participant/participant-api.service\";\n\nimport {SQLite} from '@ionic-native/sqlite'\nimport {MyForumPage} from \"../pages/my-forum/my-forum\";\nimport {MyForumApi} from \"../providers/my-forum/my-forum-api\";\nimport {MyForumSql} from \"../providers/my-forum-sql\";\nimport {ParticipantDetailPage} from \"../pages/participant-detail/participant-detail\";\nimport {UserData} from \"../providers/user-data\";\nimport {LoginPage} from \"../pages/login/login\";\nimport {IonicStorageModule} from '@ionic/storage';\n\nimport {SupportPage} from \"../pages/support/support\";\nimport {SignupPage} from \"../pages/signup/signup\";\n\n\nimport {TutorialPage} from \"../pages/tutorial/tutorial\";\nimport {UserApi} from \"../providers/user/user-api.service\";\n\nimport {ParkPatriotPage} from \"../pages/park-patriot-all/park-patriot/park-patriot\";\nimport {WarTacticPage} from \"../pages/park-patriot-all/war-tactic-page/war-tactic-page\";\n\nimport {SectorVksPage} from \"../pages/park-patriot-all/sektor-vks-page/sector-vks-page\";\nimport {DemoOpkPage} from \"../pages/park-patriot-all/demo-opk-page/demo-opk-page\";\n\n\nimport {PlaceSql} from '../providers/place-sql/place-sql';\nimport {ThematicSql} from '../providers/thematic-sql';\nimport {ThematicPage} from \"../pages/thematic/thematic\";\nimport {ThematicApi} from \"../providers/thematic/thematic-api-service\";\n\nimport {PlaceApi} from \"../providers/place/place-api-service\";\n\nimport {DrawFunctionProvider} from '../providers/draw-function/draw-function';\nimport {ConferenceSql} from '../providers/conference-sql/conference-sql';\nimport {ThematicConferenceSql} from '../providers/thematic-conference-sql/thematic-conference-sql';\nimport {ConferencePage} from \"../pages/conference/conference\";\nimport {ConferenceApi} from \"../providers/conference-sql/conference-api-service\";\n\nimport {MapSql} from \"../providers/map-sql/map-sql\";\n\nimport {ConferenceDetailPage} from \"../pages/conference-detail/conference-detail\";\nimport {BaseApi} from \"../providers/base-api-service\";\n\nimport {MapBaseProvider} from '../providers/map-base/map-base';\nimport {LeafletMapPage} from \"../pages/leaflet-map/leaflet-map\";\nimport {FilterPage} from \"../pages/filter/filter\";\nimport {FilterParticipantPage} from \"../pages/filter/filter-participant/filter-participant\";\nimport {FilterParticipantProvider} from '../providers/filter-provider/filter-participant-provider';\nimport {LanguageProvider} from '../providers/language/language';\nimport {FilterConferenceProvider} from \"../providers/filter-provider/filter-conference-provider\";\nimport {FilterConferencePage} from \"../pages/filter/filter-conference/filter-conference\";\nimport {DemoProgramPage} from \"../pages/demo-program/demo-program\";\n\nimport {TableActionSql} from \"../providers/table-action-sql/thematic-action-sql\";\nimport {BaseLangPageProvider} from '../providers/base-lang-page/base-lang-page';\nimport {ParticipantHelpPage} from \"../pages/help/participant-help/participant-help\";\nimport {ConferenceHelpPage} from \"../pages/help/conference-help/conference-help\";\nimport {BaseListPageProvider} from '../providers/base-list-page/base-list-page';\nimport {CustomIconsModule} from 'ionic2-custom-icons';\nimport {MapHelpPage} from \"../pages/help/map-help/map-help\";\nimport {QrScannerPage} from \"../pages/qr-scanner/qr-scanner\";\nimport {BarScannerPage} from \"../pages/bar-scanner/bar-scanner\";\nimport {BarcodeScanner} from \"@ionic-native/barcode-scanner\";\nimport {ExhibitPage} from \"../pages/exhibit/exhibit\";\nimport {FilterExhibitPage} from \"../pages/filter/filter-exhibit/filter-exhibit\";\nimport {ExhibitHelpPage} from \"../pages/help/exhibit-help/exhibit-help\";\nimport {ExhibitApiService} from \"../providers/exhibit/exhibit-api-service\";\nimport {ExhibitSql} from \"../providers/exhibit/exhibit-sql\";\nimport {FilterExhibitProvider} from \"../providers/filter-provider/filter-exhibit-provider\";\nimport {ExhibitDetailPage} from \"../pages/exhibit-detail/exhibit-detail\";\nimport {DemoProgramDetailPage} from \"../pages/demo-program-detail/demo-program-detail\";\nimport {FilterDemoProgramProvider} from \"../providers/filter-provider/filter-demo-program-provider\";\nimport {FilterDemoProgramPage} from \"../pages/filter/filter-demo-program/filter-demo-program\";\nimport {DemoProgramHelpPage} from \"../pages/help/demo-program-help/demo-program-help\";\nimport {HowToGetPage} from \"../pages/how-to-get/how-to-get\";\nimport {HowToGetPatriotPage} from \"../pages/how-to-get/how-to-get-patriot/how-to-get-patriot\";\nimport {HowToGetPatriotByCarPage} from \"../pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-car/how-to-get-patriot-by-car\";\nimport {HowToGetPatriotByTransportPage} from \"../pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-transport/how-to-get-patriot-by-transport\";\nimport {HowToGetPatriotByTransportKievPage} from \"../pages/how-to-get/how-to-get-patriot/how-to-get-patriot-by-transport-kiev/how-to-get-patriot-by-transport-kiev\";\nimport {HowToGetRoutesPage} from \"../pages/how-to-get/how-to-get-routes/how-to-get-routes\";\nimport {AboutForumPage} from \"../pages/about-forum/about-forum\";\nimport {PatriotPage} from \"../pages/patriot/patriot\";\nimport {PatriotDetailPage} from \"../pages/patriot-detail/patriot-detail\";\nimport {PatriotSql} from \"../providers/patriot/patriot-sql\";\n\n\n\n\n@NgModule({\n    declarations: [\n        MyApp,\n        AboutPage,\n        AboutForumPage,\n        HomePage,\n        TabsPage,\n        SettingsPage,\n        AccountPage,\n        ParticipantPage,\n        MyForumPage,\n        ParticipantDetailPage,\n        LoginPage,\n        SupportPage,\n        SignupPage,\n        TutorialPage,\n        ParkPatriotPage,\n        WarTacticPage,\n\n        SectorVksPage,\n        DemoOpkPage,\n        ThematicPage,\n        ConferencePage,\n        ConferenceDetailPage,\n        LeafletMapPage,\n        FilterPage,\n        FilterParticipantPage,\n        FilterConferencePage,\n        FilterExhibitPage,\n        DemoProgramPage,\n        ParticipantHelpPage,\n        ConferenceHelpPage,\n        ExhibitHelpPage,\n        MapHelpPage,\n        QrScannerPage,\n        BarScannerPage,\n        ExhibitPage,\n        ExhibitDetailPage,\n        DemoProgramDetailPage,\n        FilterDemoProgramPage,\n        DemoProgramHelpPage,\n        HowToGetPage,\n        HowToGetPatriotPage,\n        HowToGetPatriotByCarPage,\n        HowToGetPatriotByTransportPage,\n        HowToGetPatriotByTransportKievPage,\n        HowToGetRoutesPage,\n        PatriotDetailPage,\n        PatriotPage\n\n\n    ],\n    imports: [\n        BrowserModule,\n        IonicStorageModule.forRoot(),\n        HttpModule,\n        IonicModule.forRoot(MyApp, {\n            backButtonText: ''\n        }, {\n            links: [\n                {component: TabsPage, name: 'TabsPage', segment: 'tabs-page'},\n                {component: AboutPage, name: 'About', segment: 'about'},\n                {component: TutorialPage, name: 'Tutorial', segment: 'tutorial'},\n                {component: SupportPage, name: 'SupportPage', segment: 'support'},\n                {component: LoginPage, name: 'LoginPage', segment: 'login'},\n                {component: AccountPage, name: 'AccountPage', segment: 'account'},\n                {component: SignupPage, name: 'SignupPage', segment: 'signup'}\n            ]\n        }),\n        CustomIconsModule\n\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp,\n        AboutPage,\n        AboutForumPage,\n        HomePage,\n        TabsPage,\n        SettingsPage,\n        AccountPage,\n        ParticipantPage,\n        ConferencePage,\n        MyForumPage,\n        ParticipantDetailPage,\n        LoginPage,\n        SupportPage,\n        SignupPage,\n        TutorialPage,\n        ParkPatriotPage,\n        WarTacticPage,\n        PatriotDetailPage,\n        PatriotPage,\n        SectorVksPage,\n        DemoOpkPage,\n        LeafletMapPage,\n        FilterPage,\n        DemoProgramPage,\n        ParticipantHelpPage,\n        ConferenceHelpPage,\n        ExhibitHelpPage,\n        MapHelpPage,\n        QrScannerPage,\n        BarScannerPage,\n        ExhibitPage,\n        ExhibitDetailPage,\n        ConferenceDetailPage,\n        DemoProgramDetailPage,\n        FilterDemoProgramPage,\n        DemoProgramHelpPage,\n        HowToGetPage,\n        HowToGetPatriotPage,\n        HowToGetPatriotByCarPage,\n        HowToGetPatriotByTransportPage,\n        HowToGetPatriotByTransportKievPage,\n        HowToGetRoutesPage\n\n\n    ],\n    providers: [{provide: ErrorHandler, useClass: IonicErrorHandler},\n        SplashScreen,\n        StatusBar,\n        SQLite,\n        ParticipantApi,\n        MyForumApi,\n        UserApi,\n        UserData,\n        ParticipantSql,\n        PlaceApi,\n        MyForumSql,\n        PlaceSql,\n        ThematicSql,\n        ThematicApi,\n        DrawFunctionProvider,\n        ThematicConferenceSql,\n        ConferenceSql,\n        ThematicConferenceSql,\n        ConferenceApi,\n        ConferenceApi,\n        MapSql,\n        BaseApi,\n        MapBaseProvider,\n        FilterParticipantPage,\n        FilterConferencePage,\n        FilterExhibitPage,\n        LanguageProvider,\n        FilterParticipantProvider,\n        FilterConferenceProvider,\n        TableActionSql,\n        BaseLangPageProvider,\n        BaseListPageProvider,\n        //QRScanner,\n        BarcodeScanner,\n        ExhibitApiService,\n        ExhibitSql,\n        FilterExhibitProvider,\n        FilterDemoProgramProvider,\n        PatriotSql\n\n\n\n    ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Component, ViewChild} from '@angular/core';\nimport {AlertController, Events, MenuController, Nav, Platform} from 'ionic-angular';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {TabsPage} from '../pages/tabs/tabs';\n\nimport {SettingsPage} from '../pages/settings/settings';\nimport {AccountPage} from '../pages/account/account';\n\nimport {MyForumPage} from '../pages/my-forum/my-forum';\nimport {ParticipantPage} from \"../pages/participant/participant\";\nimport {LoginPage} from \"../pages/login/login\";\nimport {SupportPage} from \"../pages/support/support\";\nimport {SignupPage} from \"../pages/signup/signup\";\n\n\nimport {AboutPage} from \"../pages/about/about\";\n\n\nimport {UserData} from \"../providers/user-data\";\nimport {TutorialPage} from \"../pages/tutorial/tutorial\";\n\n\nimport {Storage} from '@ionic/storage';\nimport {HomePage} from \"../pages/home/home\";\n\nimport {ParkPatriotPage} from \"../pages/park-patriot-all/park-patriot/park-patriot\";\nimport {WarTacticPage} from \"../pages/park-patriot-all/war-tactic-page/war-tactic-page\";\nimport {Http} from \"@angular/http\";\n\n\nexport interface PageInterface {\n    title: string;\n    name: string;\n    component: any;\n    icon: string;\n    logsOut?: boolean;\n    index?: number;\n    tabName?: string;\n    tabComponent?: any;\n}\n\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp {\n\n\n    @ViewChild(Nav) nav: Nav;\n    rootPage: any;\n\n    lang: string;\n    language: string;\n    langVal: boolean;\n    userId:string;\n\n    //interface stings\n    menuStr: string;\n    signUpStr: string;\n    infoStr: string;\n    aboutForumStr: string;\n    pages: PageInterface[] = [\n\n        {title: 'Homepage', name: 'HomePage', component: HomePage, icon: 'home'},\n        {title: 'Settings', name: 'SettingsPage', component: SettingsPage, icon: 'settings'},\n        {title: 'Account', name: 'AccountPage', component: AccountPage, icon: 'person'},\n\n        {title: 'Участники', name: 'ParticipantPage', component: ParticipantPage, icon: 'list'},\n        {title: 'Мой форум', name: 'MyForumPage', component: MyForumPage, icon: 'bookmark'},\n\n\n        {title: 'О Форуме', name: 'AboutPage', component: AboutPage, icon: 'information-circle'},\n        {title: 'Парк Патриот', name: 'ParkPatrionPage', component: ParkPatriotPage, icon: 'information-circle'},\n        {\n            title: 'Центр военно-тактических игр',\n            name: 'WarTacticPage',\n            component: WarTacticPage,\n            icon: 'information-circle'\n        }\n\n    ];\n\n    loggedInPages: PageInterface[] = [\n        {title: 'Профиль', name: 'AccountPage', component: AccountPage, icon: 'person'},\n        {title: 'Обратная связь', name: 'SupportPage', component: SupportPage, icon: 'help'},\n        {title: 'Выйти', name: 'TabsPage', component: TabsPage, icon: 'log-out', logsOut: true}\n\n    ];\n    loggedOutPages: PageInterface[] = [\n        {title: 'Войти', name: 'LoginPage', component: LoginPage, icon: 'log-in'},\n        {title: 'Обратная связь', name: 'SupportPage', component: SupportPage, icon: 'help'},\n        {title: 'Зарегистрироваться', name: 'SignupPage', component: SignupPage, icon: 'person-add'}];\n\n\n    appPages: PageInterface[] = [\n\n\n        {\n            title: 'О форуме',\n            name: 'TabsPage',\n            component: TabsPage,\n            tabComponent: AboutPage,\n            index: 3,\n            icon: 'information-circle'\n        }];\n\n\n    constructor(public platform: Platform,\n                public splashScreen: SplashScreen,\n                public statusBar: StatusBar,\n                public menu: MenuController,\n                public events: Events,\n                public userData: UserData,\n                public storage: Storage,\n                public http: Http,\n                public alertCtrl: AlertController) {\n\n\n        this.platform.ready().then(() => {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            this.statusBar.backgroundColorByName(\"red\");\n            this.splashScreen.hide();\n\n        });\n        // used for an example of ngFor and navigation\n\n\n        localStorage.setItem('viewcount', '0');\n\n        //console.log(\"hi!\");\n        this.lang = localStorage.getItem('lang');\n        if (!this.lang) {\n            let confirm = this.alertCtrl.create({\n                title: 'Язык/Language?',\n                message: '',\n                buttons: [\n                    {\n                        text: 'English',\n                        handler: () => {\n                            //console.log('English clicked');\n                            localStorage.setItem('lang', 'en');\n                            this.lang = 'en';\n                            this.langVal = true;\n                            this.events.publish('language:change');\n                            this.setEnglishStrings();\n                        }\n                    },\n                    {\n                        text: 'Русский',\n                        handler: () => {\n                            //console.log('Русский clicked');\n                            this.lang = 'ru';\n                            localStorage.setItem('lang', 'ru');\n                            this.langVal = false;\n                            this.events.publish('language:change');\n                            this.setRussianStrings();\n\n                        }\n                    }\n                ]\n            });\n            confirm.present();\n        }\n        else {\n            this.langVal = (this.lang == 'en');\n            if (this.lang == 'ru') this.setRussianStrings();\n            else this.setEnglishStrings();\n        }\n\n\n        this.events.subscribe('language:change', () => {\n\n\n            this.lang = localStorage.getItem('lang');\n            if (this.lang == 'ru') {\n                //console.log('this.events.subscribe(language:change) ru= ', this.lang);\n                this.setRussianStrings();\n            }\n            else {\n                //console.log('this.events.subscribe(language:change) en= ', this.lang);\n                this.setEnglishStrings();\n            }\n        });\n        // localStorage.setItem('lang', 'ru');\n        //localStorage.get('hasSeenTutorial').then((hasSeenTutorial) => {\n        let hasSeenTutorial = true;\n        if (hasSeenTutorial) {\n            this.rootPage = TabsPage;\n        } else {\n            this.rootPage = TabsPage;//TutorialPage;\n        }\n        this.platformReady();\n        //  });\n\n        this.listenToLoginEvents();\n        // decide which menu items should be hidden by current login status stored in local storage\n        //this.userData.hasLoggedIn().then((hasLoggedIn) => {\n        this.userId=localStorage.getItem('userId');\n        if (this.userId) events.publish('user:login');\n        //console.log(this.userData.hasLoggedIn());\n       // this.enableMenu(!this.userData.hasLoggedIn());\n\n        //this.enableMenu(true);\n\n\n\n    }\n\n    openPage(page: PageInterface) {\n        let params = {};\n\n        // the nav component was found using @ViewChild(Nav)\n        // setRoot on the nav to remove previous pages and only have this page\n        // we wouldn't want the back button to show in this scenario\n        if (page.index) {\n            params = {tabIndex: page.index};\n        }\n\n        // If we are already on tabs just change the selected tab\n        // don't setRoot again, this maintains the history stack of the\n        // tabs even if changing them from the menu\n        if (this.nav.getActiveChildNavs().length && page.index != undefined) {\n            this.nav.getActiveChildNavs()[0].select(page.index);\n            // Set the root of the nav with params if it's a tab index\n        } else {\n            this.nav.setRoot(page.name, params).catch((err: any) => {\n                //console.log(`Didn't set nav root: ${err}`);\n            });\n        }\n\n        if (page.logsOut === true) {\n            // Give the menu time to close before changing to logged out\n            this.userData.logout();\n        }\n    }\n\n    openTutorial() {\n        this.nav.setRoot(TutorialPage);\n    }\n\n    listenToLoginEvents() {\n        this.events.subscribe('user:login', () => {\n            this.enableMenu(true);\n        });\n\n        this.events.subscribe('user:signup', () => {\n            this.enableMenu(true);\n        });\n\n        this.events.subscribe('user:logout', () => {\n            this.enableMenu(false);\n        });\n    }\n\n    enableMenu(loggedIn: boolean) {\n        this.menu.enable(!loggedIn, 'loggedOutMenu');\n        this.menu.enable(loggedIn, 'loggedInMenu');\n\n    }\n\n    platformReady() {\n        // Call any initial plugins when ready\n        this.platform.ready().then(() => {\n            this.splashScreen.hide();\n        });\n    }\n\n    isActive(page: PageInterface) {\n        let childNav = this.nav.getActiveChildNavs()[0];\n\n        // Tabs are a special case because they have their own navigation\n        if (childNav) {\n            if (childNav.getSelected() && childNav.getSelected().root === page.tabComponent) {\n                return 'primary';\n            }\n            return;\n        }\n\n        if (this.nav.getActive() && this.nav.getActive().name === page.name) {\n            return 'primary';\n        }\n        return;\n    }\n\n\n    setRussianStrings() {\n        this.menuStr = 'Меню';\n        this.signUpStr = 'Регистрация';\n        this.infoStr = 'Справочная информация';\n        this.aboutForumStr = 'Информация о форуме';\n        this.loggedInPages = [\n            {title: 'Профиль', name: 'AccountPage', component: AccountPage, icon: 'person'},\n            {title: 'Обратная связь', name: 'SupportPage', component: SupportPage, icon: 'help'},\n            {title: 'Выйти', name: 'TabsPage', component: TabsPage, icon: 'log-out', logsOut: true}\n\n        ];\n        this.loggedOutPages = [\n            {title: 'Войти', name: 'LoginPage', component: LoginPage, icon: 'log-in'},\n            {title: 'Обратная связь', name: 'SupportPage', component: SupportPage, icon: 'help'},\n            {title: 'Зарегистрироваться', name: 'SignupPage', component: SignupPage, icon: 'person-add'}];\n\n\n        this.appPages = [\n\n\n            {\n                title: 'О форуме',\n                name: 'TabsPage',\n                component: TabsPage,\n                tabComponent: AboutPage,\n                index: 3,\n                icon: 'information-circle'\n            }];\n\n    }\n\n    setEnglishStrings() {\n        this.menuStr = 'Menu';\n        this.signUpStr = 'Sign Up';\n        this.infoStr = 'Info';\n        this.aboutForumStr = 'About Forum';\n\n        this.loggedInPages = [\n            {title: 'Profile', name: 'AccountPage', component: AccountPage, icon: 'person'},\n            {title: 'Help', name: 'SupportPage', component: SupportPage, icon: 'help'},\n            {title: 'Log out', name: 'TabsPage', component: TabsPage, icon: 'log-out', logsOut: true}\n\n        ];\n        this.loggedOutPages = [\n            {title: 'Log in', name: 'LoginPage', component: LoginPage, icon: 'log-in'},\n            {title: 'Help', name: 'SupportPage', component: SupportPage, icon: 'help'},\n            {title: 'Sign up', name: 'SignupPage', component: SignupPage, icon: 'person-add'}];\n\n\n        this.appPages = [\n\n\n            {\n                title: 'About',\n                name: 'TabsPage',\n                component: TabsPage,\n                tabComponent: AboutPage,\n                index: 3,\n                icon: 'information-circle'\n            }];\n\n    }\n\n\n    setLangRuEn() {\n        //console.log('setLangRuEn ru before=', this.lang);\n        if (this.lang == 'ru') {\n            this.lang = 'en';\n\n            this.language = 'English';\n            localStorage.setItem('lang', 'en');\n            //console.log('set language=', 'en');\n            this.events.publish('language:change');\n\n        }\n        else {\n            this.lang = 'ru';\n            this.language = 'Русский';\n            localStorage.setItem('lang', 'ru');\n            //console.log('set language=', 'ru');\n            this.events.publish('language:change');\n        }\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseSql} from \"../base-sql\";\n\n/*\n Generated class for the PlaceSql provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n\nexport interface place {\n  id: number;\n  coords: number[];\n  name_rus: string;\n  name_eng: string;\n  number_on_map: string;\n  name_map: string;\n  goto: string;\n  shape: string;\n}\n\ndeclare let window: any;\n\n@Injectable()\n\n\nexport class PlaceSql extends BaseSql {\n  public text: string = \"\";\n/*  public db = null;\n  public arr = [];*/\n\n  constructor(public http: Http) {\n    super(http, 'place', [\n        {name: \"id\", type: \"text PRIMARY KEY\"},\n        {name: \"name_rus\", type: \"text\"},\n        {name: \"name_eng\", type: \"text\"},\n        {name: \"coords\", type: \"text\"},\n        {name: \"number_on_map\", type: \"text\"},\n        {name: \"name_map\", type: \"text\"},\n        {name: \"goto\", type: \"text\"},\n        {name: \"shape\", type: \"text\"},\n      ]\n    );\n    //console.log('Hello ThematicConferenceSql Provider');\n    //console.log('Hello PlaceSql Provider');\n    /*    this.openDb();*/\n  }\n\n/*   /!**\n   *\n   * Open The Datebase\n   *!/\n  openDb() {\n    this.db = window.sqlitePlugin.openDatabase({name: 'todo.db', location: 'default'});\n    this.db.transaction((tx) => {\n      tx.executeSql('CREATE TABLE IF NOT EXISTS place (' +\n        'id text PRIMARY KEY,' +\n        'name_rus text,' +\n        'name_eng text,' +\n        'coords text,' +\n        'number_on_map text,' +\n        'name_map text,' +\n        'goto text,' +\n        'shape text)');\n    }, (e) => {\n      //console.log('Transaction place create Error', e);\n    }, () => {\n      //console.log('Created Place OK..');\n    })\n  }*/\n\n/*  delPlace(id) {\n    return new Promise(resolve => {\n      var query = \"DELETE FROM place WHERE id=?\";\n      this.db.executeSql(query, [id], (s) => {\n        //console.log('Delete from place Success...', s);\n\n        resolve(true);\n\n      }, (err) => {\n        //console.log('Deleting Error', err);\n      });\n    })\n\n  }*/\n\n/*  checkPlaceForId(id) {\n    return new Promise(res => {\n      let query = 'SELECT * FROM place WHERE id=' + id;\n      this.db.executeSql(query, [], rs => {\n        //console.log(\"checkPlaceForId(id)!!! id=\", id, query);\n        //console.log(rs);\n        //console.log(rs.rows.length);\n        if (rs.rows.length > 0) return res(true)\n        else return res(false);\n\n      });\n    });\n  }*/\n\n  addItemPlace(placeIns: place) {\n    return new Promise(resolve => {\n      let InsertQuery = 'insert or replace into place(' +\n        'id, ' +\n        'name_rus, ' +\n        'name_eng, ' +\n        'coords, ' +\n        'number_on_map,' +\n        'name_map, ' +\n        'goto,' +\n        'shape' +\n        ') values (?, ?, ?, ?, ?, ?,?,?)';\n      this.db.executeSql(InsertQuery, [\n        placeIns.id,\n        placeIns.name_rus,\n        placeIns.name_eng,\n        placeIns.coords,\n        placeIns.number_on_map,\n        placeIns.name_map,\n        placeIns.goto,\n        placeIns.shape\n      ], (r) => {\n        //console.log('Inserted... Sucess..', placeIns.id);\n\n      }, e => {\n        //console.log('Inserted Error', e);\n        resolve(false);\n      })\n    })\n  }\n\n\n  addAllItemPlace(places) {\n\n    for (let place of places) {\n      this.addItemPlace(place);\n    }\n  }\n\n  /**\n   * select all places or certain place accordind id (idPalce\n   * @param idPlace - id of the record in 'place' table\n   * @returns {Promise<T>}\n   */\n/*  selectPlace(idPlace = '') {\n    return new Promise(res => {\n      this.arr = [];\n      let query = \"SELECT * FROM place\";\n      if (idPlace != '') query += ' where id=' + idPlace;\n      this.db.executeSql(query, [], rs => {\n        if (rs.rows.length > 0) {\n          this.arr = [];\n          for (var i = 0; i < rs.rows.length; i++) {\n            //console.log(\"<place>rs.rows.item(i)=\", <place>rs.rows.item(i));\n            this.arr.push((<place>rs.rows.item(i))\n            );\n          }\n        }\n        res(this.arr);\n      }, (e) => {\n        //console.log('Sql Query Error', e);\n      });\n    })\n  }*/\n\n  /**\n   * select all places for a certain map (nameMap)\n   * @param nameMap\n   * @returns {Promise<T>}\n   */\n/*  selectPlaceMap(nameMap: string) {\n    //console.log('selectPlaceMap');\n    return new Promise(res => {\n      this.arr = [];\n      let query = \"SELECT * FROM place\";\n      if (nameMap != '') query += ' where name_map=\"' + nameMap + '\"';\n\n      //console.log(query);\n      this.db.executeSql(query, [], rs => {\n        if (rs.rows.length > 0) {\n\n          for (var i = 0; i < rs.rows.length; i++) {\n            //console.log(\"<place>rs.rows.item(i)=\", <place>rs.rows.item(i));\n            this.arr.push(<place>rs.rows.item(i));\n          }\n        }\n        //console.log(this.arr);\n        res(this.arr);\n      }, (e) => {\n        //console.log('Sql Query Error', e);\n      });\n    })\n\n  }*/\n\n/*\n  delAllPlace(name_map: string = '') {\n    //console.log('try to delete all places');\n    return new Promise(resolve => {\n      var query = \"DELETE FROM place\";\n      if (name_map != '') query = query + ' where name_map=\"' + name_map + '\"';\n      //console.log('query for delete');\n      //console.log(query);\n      this.db.executeSql(query, [], (s) => {\n        //console.log('Delete All Success...', s);\n\n      }, (err) => {\n        //console.log('Deleting Error', err);\n      });\n    })\n\n  }*/\n\n  /**\n   * get Participant for certain place on the map\n   * @param id of place\n   * @returns {Promise<T>}\n   */\n  getPlaceParticipant(id) {\n    //console.log('try to find participant=', id);\n    return new Promise(res => {\n\n      this.arr = [];\n      let query = 'SELECT * FROM participant WHERE place=' + id;\n      //console.log('query from getPlaceParticipant=', query);\n      this.db.executeSql(query, [], rs => {\n          //console.log(\"select participant place=\", id, query);\n          //console.log(\"rs=\", rs);\n          //console.log(\"rs.rows.length=\", rs.rows.length);\n          if (rs.rows.length > 0) return res(<any>rs.rows.item(0));\n            /*{\n            id: rs.rows.item(0).id,\n            name_rus: rs.rows.item(0).name_rus,\n            desc_rus: rs.rows.item(0).desc_rus,\n            country_rus: rs.rows.item(0).country_rus,\n            address_rus: rs.rows.item(0).address_rus,\n            name_eng: rs.rows.item(0).name_eng,\n            desc_eng: rs.rows.item(0).desc_eng,\n            country_eng: rs.rows.item(0).country_rus,\n            address_eng: rs.rows.item(0).address_eng,\n            phone: rs.rows.item(0).phone,\n            email: rs.rows.item(0).email,\n            www: rs.rows.item(0).www,\n            logo: rs.rows.item(0).logo,\n            place: rs.rows.item(0).place,\n            thematic: rs.rows.item(0).thematic\n          })*/\n\n\n          else return res(false);\n\n        }, (err) => {\n          //console.log('Select Error in getPlaceParticipant=', err);\n        }\n      );\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/place-sql/place-sql.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {BaseSql} from \"../base-sql\";\nimport {BaseApi} from \"../../providers/base-api-service\";\n\n/*\n Generated class for the MapConferenceSql provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\ndeclare let window: any;\n\nexport interface map {\n\n  id: number,\n  map: string,\n  place_previous: string,\n\n  name_map: string,\n  name_rus: string,\n  name_eng: string,\n}\n\n@Injectable()\nexport class MapSql extends BaseSql {\n\n  public mapApi: BaseApi;\n\n  constructor(public http: Http,) {\n    super(http, 'map', [\n      {name: 'id', type: 'text PRIMARY KEY'},\n      {name: 'map', type: 'text'},\n      {name: 'place_previous', type: 'text'},\n      {name: \"name_map\", type: 'text'},\n      {name: \"name_rus\", type: 'text'},\n      {name: \"name_eng\", type: 'text'},\n      {name: \"width\", type: 'text'},\n      {name: \"height\", type: 'text'},\n      {name: \"map_left\", type: 'text'},\n      {name: \"map_right\", type: 'text'},\n      {name: \"map_up\", type: 'text'},\n      {name: \"map_down\", type: 'text'},\n    ]);\n    //console.log('Hello MapConferenceSql Provider');\n    /*  this.mapApi= new BaseApi(http);\n      this.mapApi.getApi(`map_list.php`).subscribe(res => {\n        //console.log('res in MapSql constructor=', res);\n        this.addItemList(<any>res);\n      });*/\n\n\n  }\n\n\n  getMapOfConference(conferenceId) {\n    //console.log('getMap for participant');\n    return new Promise(res => {\n      let query = 'select map from conference';\n      query += ' where id=' + conferenceId;\n      //console.log(query);\n      this.db.executeSql(query, [], rs => {\n        //console.log(rs);\n        let list = rs.rows.item(0).map;\n        //console.log(list);\n        this.getMapList(list).then(rs => {\n            //console.log(\"res after getMapList=\", rs);\n            res(rs);\n          }\n        )\n      });\n\n    });\n  }\n\n  getMapList(list: string) {\n    return new Promise(res => {\n      //console.log('get map list=', list);\n      let thematic: string[];\n      thematic = list.split(',');\n      //console.log('an array=', thematic);\n      let whereStr: string = ' where ';\n      for (let i = 0; i < thematic.length; i++) {\n        if (i > 0) whereStr += ' or ';\n        whereStr += 'number=' + thematic[i];\n      }\n      //console.log(\"whereStr=\", whereStr);\n      let query = \"SELECT * FROM map\";\n      query += ' ' + whereStr;\n      //console.log(query);\n      this.arr = [];\n      this.db.executeSql(query, [], rs => {\n        if (rs.rows.length > 0) {\n          this.arr = [];\n          for (let i = 0; i < rs.rows.length; i++) {\n            this.arr.push(<map>rs.rows.item(i));\n          }\n        }\n        res(this.arr);\n      }, (e) => {\n        //console.log('Sql Query Error', e);\n      });\n    })\n  }\n\n  /*  getParticipantForMap(thematic: string) {\n      //console.log(\"getParticipantForMap\");\n      //console.log(\"thematic=\", thematic);\n      return new Promise(res => {\n        let query = 'select a.id, a.name_rus, a.name_eng, a.desc_rus as desc, ' +\n          'a.desc_eng, a.logo, a.address_rus, a.address_eng, a.phone, a.email, ' +\n          'a.www, b.id as my_forum_id, c.name_rus as place_name ' +\n          'from participant a left join myforum b on a.id=b.my_id left join place c on a.place=c.id ' +\n          ' where a.thematic like \"' + thematic + ',%\" or a.thematic like \"%,' + thematic + ',%\" or a.thematic like \"%,' + thematic + '\" or a.thematic=\"' + thematic + '\"';\n        //console.log(query);\n        this.db.executeSql(query, [], rs => {\n          this.arr = [];\n          if (rs.rows.length > 0) {\n            for (var i = 0; i < rs.rows.length; i++) {\n              this.arr.push(<any>rs.rows.item(i));\n\n            }\n          }\n          res(this.arr);\n        }, (e) => {\n          //console.log('Sql Query Error', e);\n        });\n      })\n    }*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/map-sql/map-sql.ts","import {Component} from '@angular/core';\n\nimport {HomePage} from '../home/home';\n\nimport {MyForumPage} from \"../my-forum/my-forum\";\n\nimport {Events, NavController} from \"ionic-angular\";\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\nimport {BarScannerPage} from \"../bar-scanner/bar-scanner\";\nimport {AboutForumPage} from \"../about-forum/about-forum\";\n\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage extends BaseLangPageProvider {\n  // this tells the tabs component which Pages\n  // should be each tab's root Page\n    tab1Root: any = HomePage;\n    tab2Root: any = AboutForumPage;\n    tab3Root: any = MyForumPage;\n    tab4Root: any = BarScannerPage;\n\n//interface strings\n  homeStr: string = 'Home';\n  aboutStr: string = 'About';\n  myForumStr: string = 'Мой форум';\n  mapStr: string = 'Карты';\n  thematicStr: string = 'Тематика';\n  qrScannerStr: string = 'QR сканер';\n  /*lang: string;*/\n\n // login:boolean=false;\n\n  constructor(public navCtrl: NavController,\n              public events: Events,\n              public http: Http) {\n    super(navCtrl, events, http);\n\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n    this.homeStr = 'Главная';\n    this.aboutStr = 'О Форуме';\n    this.myForumStr = 'Мой форум';\n    this.mapStr = 'Карты';\n    this.thematicStr = 'Тематика';\n    this.qrScannerStr= 'QR сканер';\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings();\n    this.homeStr = 'Home';\n    this.aboutStr = 'About';\n    this.myForumStr = 'My Forum';\n    this.mapStr = 'Map';\n    this.thematicStr = 'Thematic';\n    this.qrScannerStr= 'QR scanner';\n\n  }\n\n  ionViewDidLoad() {\n    super.ionViewDidLoad();\n\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import {Component, ViewChild} from '@angular/core';\nimport {Content, Events, NavController, NavParams, Platform, Scroll, ToastController} from 'ionic-angular';\nimport {PlaceSql} from \"../../providers/place-sql/place-sql\";\n\nimport {DrawFunctionProvider} from \"../../providers/draw-function/draw-function\";\nimport * as L from 'leaflet';\nimport {MapSql} from \"../../providers/map-sql/map-sql\";\nimport {Http} from \"@angular/http\";\nimport {ParticipantDetailPage} from \"../participant-detail/participant-detail\";\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\n\n\n@Component({\n    selector: 'leaflet-map',\n    templateUrl: 'leaflet-map.html',\n})\nexport class LeafletMapPage extends BaseListPageProvider {\n\n    @ViewChild(Content) content: Content;\n    @ViewChild(Scroll) scroll: Scroll;\n    @ViewChild('drawingCanvas') drawingCanvas;\n\n\n    iconPath = 'assets/img/icons/';\n    mapPath = 'assets/img/maps/'\n\n    map: any;\n    bounds: any;\n    popupElement: any;\n    place: any;\n    typeOfMap: string;\n\n    mapList: any;\n\n    fullMapList: any;//all maps from Table map\n\n    currentMapNumber: number;\n\n\n    mapTitle: string;\n    showArrow: boolean;\n    /**\n     * list of popupList for the current map\n     */\n    popupList: any;\n\n    iconList: any;\n    /**\n     * define show or not arrow buttons, depending on the description of the map\n     */\n    showLeftArrow: boolean;\n    showRightArrow: boolean;\n    showUpArrow: boolean;\n    showDownArrow: boolean;\n    showPreviousArrow: boolean;\n\n    /**\n     * define show or not popupList on the map\n     */\n    showPopups: boolean = true;\n\n    /**\n     * @placeList for conference - several event can use the same place in differenct time\n     */\n    //placeList: any;\n    /**\n     *  @list of places for the currentMap\n     */\n    placeListForMap: any;\n\n\n    currentMap: any;\n    leftArrow: any;\n    rightArrow: any;\n    upArrow: any;\n    downArrow: any;\n    previousArrow: any;\n\n    leftArrowIcon: L.Icon;\n    rightArrowIcon: L.Icon;\n    upArrowIcon: L.Icon;\n    downArrowIcon: L.Icon;\n    previousArrowIcon: L.Icon;\n\n\n    iconArrowSize: number = 20;\n\n    //icons to put on the map\n    iconStr: string;\n\n    // popupLayer:any;\n\n    constructor(public http: Http,\n                public navCtrl: NavController,\n                public navParams: NavParams,\n                public platform: Platform,\n                /*public placeApi: PlaceApi,*/\n                public toastCtrl: ToastController,\n                public drawFunction: DrawFunctionProvider,\n                public mapSql: MapSql,\n                public events: Events,\n                public placeSql: PlaceSql) {\n        super(navCtrl, navParams, events, http);//, placeSql, mapSql);\n        this.popupElement = navParams.get('popupElement');\n        this.place = navParams.get('place');\n        this.currentMap = navParams.get('map');\n        //console.log(\"popupElement=\", this.popupElement);\n        //console.log(\"place=\", this.place);\n        //console.log(\"currentMap=\", this.currentMap);\n\n        this.initIcons();\n\n//set a bunch of arrows\n\n    }\n\n    initIcons() {\n        this.leftArrowIcon = L.icon({\n            iconUrl: this.iconPath + 'arrow-left.svg',\n            iconSize: [this.iconArrowSize, this.iconArrowSize], // size of the icon\n\n        });\n        this.rightArrowIcon = L.icon({\n            iconUrl: this.iconPath + 'arrow-right.svg',\n            iconSize: [this.iconArrowSize, this.iconArrowSize], // size of the icon\n        });\n\n        this.upArrowIcon = L.icon({\n            iconUrl: this.iconPath + 'arrow-up.svg',\n            iconSize: [this.iconArrowSize, this.iconArrowSize], // size of the icon\n        });\n        this.downArrowIcon = L.icon({\n            iconUrl: this.iconPath + 'arrow-down.svg',\n            iconSize: [this.iconArrowSize, this.iconArrowSize], // size of the icon\n        });\n        this.previousArrowIcon = L.icon({\n            iconUrl: this.iconPath + 'level-up.svg',\n            iconSize: [this.iconArrowSize, this.iconArrowSize], // size of the icon\n        });\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Карта форума');\n    }\n\n    setEnglishStrings() {\n        super.setRussianStrings('Forum map');\n    }\n\n    showHideHelp() {\n        super.showHideHelp();\n        //console.log(this.lang);\n    }\n\n    /**\n     * create map list for all USING maps\n     */\n    private createMapList() {\n\n        this.mapList = [];\n\n        //console.log(\"createMapList(popupElement=\", this.popupElement);\n        if (this.popupElement && this.popupElement.length) {\n\n            let flags = [], l = (this.popupElement.length);\n            for (let i = 0; i < l; i++) {\n                if (this.popupElement[i].name_map) {\n                    if (flags[this.popupElement[i].name_map]) continue;\n                    flags[this.popupElement[i].name_map] = true;\n                    this.mapList.push(this.popupElement[i].name_map);\n                }\n\n\n            }\n            //console.log(\"mapList=\", this.mapList);\n            //  this.showArrow = (this.mapList.length > 1);\n\n        }\n\n    }\n\n\n    /**\n     * create map\n     */\n    async initMap() {\n        this.popupList = [];\n        this.placeListForMap = [];\n        //  this.p\n        if (!this.map) {\n            this.map = L.map('map', {\n                crs: L.CRS.Simple,\n                attributionControl: false,\n                maxBounds: [[0, 0], [(this.content.contentHeight > Number(this.currentMap.height) ? this.content.contentHeight : Number(this.currentMap.height) + this.iconArrowSize)\n                    , (this.content.contentWidth > Number(this.currentMap.width) ? this.content.contentWidth : Number(this.currentMap.width) + this.iconArrowSize)]],\n            });\n            this.map.tap = true;\n            this.map.on('click', (e) => {\n                this.mapClick(e)\n            });\n\n            this.map.on('zoom', (e) => {\n                this.mapOnZoom(e)\n            });\n\n        }\n        else (this.deleteLayers());\n        //console.log(\"this.placeListForMap=\", this.placeListForMap);\n        //console.log(\"currentMap=\", this.currentMap);\n        this.map.options.minZoom = (this.currentMap.min_zoom ? this.currentMap.min_zoom : 0);\n        this.map.options.maxZoom = (this.currentMap.max_zoom ? this.currentMap.max_zoom : 5);\n\n        this.bounds = [[0, 0], [Number(this.currentMap.height), Number(this.currentMap.width)]];//new L.LatLngBounds(this.southWest, this.northEast);\n\n        //console.log(\"this.bounds=\", this.bounds);\n        L.imageOverlay(this.mapPath + this.currentMap.name_map, this.bounds).addTo(this.map);\n        this.map.fitBounds(this.bounds);\n        this.map.options.zoom = (this.currentMap.begin_zoom ? this.currentMap.begin_zoom : 1);\n        this.titleStr = this.currentMap['name_' + (this.lang == 'ru' ? 'rus' : 'eng')];\n        //  this.map.dragging.disable();\n\n        //  this.createPlaceListForMap();\n        if ((this.typeOfMap == 'conference') || (this.typeOfMap == 'participant')\n            || (this.typeOfMap == 'exhibit') || (this.typeOfMap == 'simple')\n            || (this.typeOfMap == 'demo-program')) {\n            this.placeListForMap = await this.placeSql.selectWhere('name_map=\"' + this.currentMap.name_map + '\"');\n            // this.placeListForMap = <any>res;\n            this.setSignsForMap();\n            this.showArrowIcons();\n            this.setIconsForMap();\n            if ((this.typeOfMap == 'participant') || (this.typeOfMap == 'conference')\n                || (this.typeOfMap == 'exhibit') || (this.typeOfMap == 'demo-program')) {\n                this.setSigns();\n            }\n\n\n        }\n\n\n    }\n\n    showArrowIcons() {\n        if (this.currentMap.map_left) {\n            this.leftArrow = L.marker([this.currentMap.height / 2, 0], {icon: this.leftArrowIcon});\n\n            this.leftArrow.addTo(this.map);\n            this.leftArrow.on('click', (e) => {\n                //console.log(e);\n                this.mapDirection('left')\n            });\n        }\n        if (this.currentMap.map_right) {\n            this.rightArrow = L.marker([this.currentMap.height / 2, this.currentMap.width], {icon: this.rightArrowIcon});\n            this.rightArrow.addTo(this.map);\n            this.rightArrow.on('click', () => {\n                this.mapDirection('right')\n            });\n        }\n        if (this.currentMap.map_up) {\n            this.upArrow = L.marker([this.currentMap.height - this.iconArrowSize, this.currentMap.width / 2], {icon: this.upArrowIcon});\n            this.upArrow.addTo(this.map);\n            this.upArrow.on('click', (e) => {\n                this.mapDirection('up')\n            });\n        }\n        if (this.currentMap.map_down) {\n            this.downArrow = L.marker([this.iconArrowSize, this.currentMap.width / 2], {icon: this.downArrowIcon});\n            this.downArrow.addTo(this.map);\n            this.downArrow.on('click', () => {\n                this.mapDirection('down')\n            });\n        }\n        if (this.currentMap.place_previous) {\n            this.previousArrow = L.marker([this.currentMap.height - this.iconArrowSize, this.iconArrowSize], {icon: this.previousArrowIcon});\n            //  this.previousArrow = L.marker([100, 100], {icon: this.previousArrowIcon});\n            this.previousArrow.addTo(this.map);\n            this.previousArrow.on('click', () => {\n                this.mapPrevious()\n            });\n        }\n    }\n\n\n    static pnpoly(nvert, vertx, verty, testx, testy) {\n        let i, j, c = false;\n        for (i = 0, j = nvert - 1; i < nvert; j = i++) {\n            if (( ( verty[i] > testy ) !== ( verty[j] > testy ) ) &&\n                ( testx < ( vertx[j] - vertx[i] ) * ( testy - verty[i] ) / ( verty[j] - verty[i] ) + vertx[i] )) {\n                c = !c;\n            }\n        }\n        return c;\n    }\n\n    isInsideRect(x, y, coords, place_name) {\n        if (this.typeOfMap != 'OpenStreetMap') {\n            //console.log(\"isInsideRect coords=\", coords);\n            //console.log(\"isInsideRect x=\", x);\n            //console.log(\"isInsideRect y=\", y);\n            let coordsList = coords.split(',');\n            //console.log(\"isInsideRect coordsList=\", coordsList);\n            let bounds = [[this.currentMap.height - coordsList[1], coordsList[0]], [this.currentMap.height - coordsList[3], coordsList[2]]];\n            //console.log(\"bounds before \", place_name, bounds);\n            //console.log(\"coordsList[1] before \", coordsList[1]);\n            //console.log(\"height -coordsList[1] before \", this.currentMap.height - coordsList[1]);\n            //console.log(\"coordsList[3] before \", coordsList[3]);\n            if ((this.currentMap.height - Number(coordsList[1])) > (this.currentMap.height - Number(coordsList[3]))) {\n                let tmp = coordsList[1];\n                coordsList[1] = coordsList[3];\n                coordsList[3] = tmp;\n            }\n            if (Number(coordsList[0]) > Number(coordsList[2])) {\n                let tmp = coordsList[0];\n                coordsList[0] = coordsList[2];\n                coordsList[2] = tmp;\n            }\n            //console.log(\"coordsList[1] after \", coordsList[1]);\n            bounds = [[this.currentMap.height - coordsList[1], coordsList[0]], [this.currentMap.height - coordsList[3], coordsList[2]]];\n            //console.log(\"bounds after\", place_name, bounds);\n            //L.rectangle(this.bounds, {color: \"red\", weight: 1}).addTo(this.map);\n\n            return (((y >= (this.currentMap.height - coordsList[1]))\n                && (y <= (this.currentMap.height - coordsList[3]))) && ((x >= (coordsList[0])) && (x <= (coordsList[2]))));\n\n        }\n        else {\n            //console.log(\"isInsideRect coords=\", coords);\n            //console.log(\"isInsideRect x=\", x);\n            //console.log(\"isInsideRect y=\", y);\n            let coordsList = coords.split(',');\n            //console.log(\"isInsideRect coordsList=\", coordsList);\n            let bounds = [[coordsList[1], coordsList[0]], [coordsList[3], coordsList[2]]];\n            //console.log(\"bounds before \", place_name, bounds);\n            //console.log(\"coordsList[1] before \", coordsList[1]);\n            //console.log(\"height -coordsList[1] before \", this.currentMap.height - coordsList[1]);\n            //console.log(\"coordsList[3] before \", coordsList[3]);\n            if ((Number(coordsList[1])) > ( Number(coordsList[3]))) {\n                let tmp = coordsList[1];\n                coordsList[1] = coordsList[3];\n                coordsList[3] = tmp;\n            }\n            if (Number(coordsList[0]) > Number(coordsList[2])) {\n                let tmp = coordsList[0];\n                coordsList[0] = coordsList[2];\n                coordsList[2] = tmp;\n            }\n            //console.log(\"coordsList[1] after \", coordsList[1]);\n            bounds = [[coordsList[1], coordsList[0]], [coordsList[3], coordsList[2]]];\n            //console.log(\"bounds after\", place_name, bounds);\n            //L.rectangle(this.bounds, {color: \"red\", weight: 1}).addTo(this.map);\n            //console.log((((x >= (coordsList[1])) && (x <= (coordsList[3]))) && ((y >= (coordsList[0])) && (y <= (coordsList[2])))))\n            return (((x >= (coordsList[1]))\n                && (x <= (coordsList[3]))) && ((y >= (coordsList[0])) && (y <= (coordsList[2]))));\n        }\n    }\n\n    isInsidePoly(x, y, coords) {\n\n        //prepare for check;\n        let tmpBounds = [];\n        //console.log(\"isInsidePoly coords=\", coords);\n        let coordsList = coords.split(',');\n        //console.log(\"isInsidePoly coordsList=\", coordsList);\n        let vertx = [];\n        let verty = [];\n        let nvert = 0;\n\n\n        for (let i = 0; i < coordsList.length; i = i + 2) {\n            nvert++;\n            verty.push(this.currentMap.height - coordsList[i + 1]);\n            vertx.push(coordsList[i] * 1);\n            tmpBounds.push([this.currentMap.height - coordsList[i + 1], coordsList[i]]);\n\n        }\n        //console.log(\"isInsidePoly nvert=\", nvert);\n        //console.log(\"isInsidePoly vertx=\", vertx);\n        //console.log(\"isInsidePoly verty=\", verty);\n\n        //console.log(\"isInsidePoly tmpBounds=\", tmpBounds);\n        // L.polygon(tmpBounds, {color: 'blue', weight: 2}).addTo(this.map);\n        return LeafletMapPage.pnpoly(nvert, vertx, verty, x, y);\n    }\n\n\n    private setCoords(coords: string) {\n\n        let mCoordsTmp = coords.split(',');\n        let mCoords: number[] = [];\n        //console.log('mCoordsTmp= ', mCoordsTmp);\n        for (let mCoordsSingle of mCoordsTmp) {\n            if (mCoordsSingle) {\n                //console.log(\"mCoordsSingle=\", mCoordsSingle);\n                mCoords.push(Number(mCoordsSingle));\n            }\n\n\n        }\n        return mCoords;\n    }\n\n    /**\n     * Show and place popupList on the currentmap\n     * @param content - what will be shown on the popup\n     * @param coords - where to place pop up (actualy, firtst two numbers from the coords)\n     */\n\n    private showPopup(content, coords) {\n\n        //check if already on the map\n        //console.log(\"content=\", content);\n        let popup = L.popup({\n            closeOnClick: false,\n            autoClose: false,\n\n        });\n        /*let mCoords = this.setCoords(coords);\n        popup.setLatLng([this.currentMap.height - mCoords[1], mCoords[0]]);*/\n        let xy = this.getCenter(coords);\n        popup.setLatLng([this.currentMap.height - xy.x, xy.y]);\n        popup.setContent(content);\n        popup.openOn(this.map);\n\n        this.popupList.push({name_map: this.currentMap.name_map, popup: popup, coords: coords});\n    }\n\n\n    private showTooltip(content, coords) {\n        let xy = this.getCenter(coords);\n        let tooltip = L.tooltip([this.currentMap.height - xy.x, xy.y]);\n        tooltip.bindPopup(content);\n        tooltip.addTo(this.map);\n    }\n\n    private getCenter(coords) {\n        let mCoords = this.setCoords(coords);\n        //try to center marker\n        let maxX = 0;\n        let minX = mCoords[1];\n        let maxY = 0;\n        let minY = mCoords[0];\n        for (let i = 0; i < mCoords.length; i = i + 2) {\n            maxX = (mCoords[i + 1] > maxX ? mCoords[i + 1] : maxX);\n            minX = (mCoords[i + 1] < minX ? mCoords[i + 1] : minX);\n\n            maxY = (mCoords[i] > maxY ? mCoords[i] : maxY);\n            minY = (mCoords[i] < minY ? mCoords[i] : minY);\n        }\n        let x = minX + (maxX - minX) / 2;\n        let y = minY + (maxY - minY) / 2;\n        return {x: x, y: y}\n\n    }\n\n    private showMarker(content, coords) {\n        let xy = this.getCenter(coords);\n        let marker = L.marker([this.currentMap.height - xy.x, xy.y]);\n        marker.bindPopup(content);\n        marker.addTo(this.map);\n        this.popupList.push({name_map: this.currentMap.name_map, marker: marker, coords: coords});\n\n    }\n\n    private showIcon(content, coords, icon) {\n        let xy = this.getCenter(coords);\n        let marker = L.marker([this.currentMap.height - xy.x, xy.y], {icon: icon});\n        // let mCoords = this.setCoords(coords);\n        /*let marker = L.marker([this.currentMap.height - mCoords[1], mCoords[0]], {icon: icon});*/\n        marker.bindPopup(content);\n        marker.addTo(this.map);\n        this.iconList.push({name_map: this.currentMap.name_map, icon: marker, coords: coords});\n\n    }\n\n\n    mapClick(e) {\n        //console.log(e);\n\n        //console.log(e.latlng.lng, e.latlng.lat, '');\n        //console.log(\"this.placeListForMap\", this.placeListForMap);\n        if (this.placeListForMap.length) {\n            let goDetail: boolean = false;\n            let numFind: number;\n            for (let i = 0; i < this.placeListForMap.length; i++) {\n                //console.log(\"mapClick(e) this.placeListForMap[i]=\", this.placeListForMap[i]);\n\n                if (this.placeListForMap[i].shape == 'rect' || !this.placeListForMap[i].shape) {\n                    if (this.isInsideRect(e.latlng.lng, e.latlng.lat, this.placeListForMap[i].coords, this.placeListForMap[i].place_name)) {\n\n                        numFind = i;\n                        goDetail = true;\n                        break;\n                    }\n                }\n                else {\n                    //console.log('check for poly');\n                    if (this.placeListForMap[i].shape == 'poly') {\n                        if (this.isInsidePoly(e.latlng.lng, e.latlng.lat, this.placeListForMap[i].coords)) {\n                            numFind = i;\n                            goDetail = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (goDetail) {\n                //console.log(\"this.placeListForMap[i]=\", this.placeListForMap[numFind]);\n                if (this.placeListForMap[numFind].goto) {\n                    //goto to the new map\n                    for (let i = 0; i < this.fullMapList.length; i++) {\n                        if (this.fullMapList[i].name_map == this.placeListForMap[numFind].goto) {\n                            this.currentMap = this.fullMapList[i];\n\n                            //console.log(\"currentMap=\", this.currentMap.name_map);\n                            this.currentMapNumber = i;\n                            break;\n                        }\n                    }\n                    this.initMap();\n                    //  this.setButtonsEnable();\n                }\n                else {\n                    let tmpSql = new MyForumSql(this.http);\n                    tmpSql.getRusParticipantFull('where a.place=' + this.placeListForMap[numFind].id).then(res => {\n                        if ((<any>res).length) {\n                            let participant = <any>res;\n                            //console.log(\"participant=\", participant);\n                            this.navCtrl.push(ParticipantDetailPage, {participant: participant, map: false})\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n\n    private deleteLayers() {\n        this.map.eachLayer(rs => {\n            this.map.removeLayer(rs);\n        });\n    }\n\n\n    /**\n     * set popup for the map on the previous level\n     * @param mapAsPlace\n     */\n    setMapAsPlace(mapAsPlace) {\n        //first, find the place which was our map\n        //console.log(\"mapAsPlace=\", mapAsPlace);\n        let placeSql = new PlaceSql(this.http);\n        placeSql.selectWhere(' goto=\"' + mapAsPlace + '\"').then(res => {\n            let place = <any>res[0];\n            let content = place[\"name_\" + ((this.lang == 'ru') ? 'rus' : 'eng')];// + '<br>' + this.popupElement.name;\n            this.showPopup(content, place.coords);\n\n        });\n\n\n    }\n\n    /*\n        setSigns() {\n            if (!this.popupElement) return;\n            this.popupList = [];\n            for (let m = 0; m < this.placeListForMap.length; m++) {\n                let content: string = '';\n                for (let i = 0; i < this.popupElement.length; i++) {\n                    if ((this.popupElement[i].coords)\n                        && (this.popupElement[i].name_map == this.currentMap.name_map) &&\n                        ((this.popupElement[i].place_name_place == this.placeListForMap[m].name_rus)\n                            || (this.popupElement[i].place_name_place == this.placeListForMap[m].name_eng))) {\n                        content += '<b>' + (this.lang == 'ru' ? this.placeListForMap[m].name_rus : this.placeListForMap[m].name_eng) + '</b>' + '<br>';\n                        //console.log(\"this.popupElement[i].name_map \", this.popupElement[i].name_map);\n                        //console.log(\"this.currentMap.name_map=\", this.currentMap.name_map);\n                        //console.log(\"this.popupElement[i].place_name_place=\", this.popupElement[i].place_name_place);\n                        // //console.log(\"this.placeList[m]=\", this.placeList[m]);\n\n                        if (this.typeOfMap == 'conference' || this.typeOfMap == 'demo-program') {\n                            content += this.popupElement[i].date_event + '. '\n                                + this.popupElement[i].time_beg + ':' +\n                                this.popupElement[i].time_end + '<br>';\n                        }\n                        content += this.popupElement[i].name.trim() + '<br>';\n                        //console.log(\"content=\", content);\n\n                        this.showPopup(content, this.popupElement[i].coords);\n                    }\n                }\n            }\n        */\n    /**\n     * show popups/tooltips/pins for currentMap;\n     */\n    setSigns() {\n        if (!this.popupElement) return;\n        this.popupList = [];\n        for (let m = 0; m < this.placeListForMap.length; m++) {\n            // let content: string = '';\n            let contentPlace: string = '';\n            let contentName: string = '';\n            for (let i = 0; i < this.popupElement.length; i++) {\n\n                if ((this.popupElement[i].coords)\n                    && (this.popupElement[i].name_map == this.currentMap.name_map) &&\n                    ((this.popupElement[i].place_name_place == this.placeListForMap[m].name_rus)\n                        || (this.popupElement[i].place_name_place == this.placeListForMap[m].name_eng))) {\n                    if (contentPlace == '') contentPlace = '<b>' + (this.lang == 'ru' ? this.placeListForMap[m].name_rus : this.placeListForMap[m].name_eng) + '</b>' + '<br>';\n                    //console.log(\"this.popupElement[i].name_map \", this.popupElement[i].name_map);\n                    //console.log(\"this.currentMap.name_map=\", this.currentMap.name_map);\n                    //console.log(\"this.popupElement[i].place_name_place=\", this.popupElement[i].place_name_place);\n                    // //console.log(\"this.placeList[m]=\", this.placeList[m]);\n\n                    if (this.typeOfMap == 'conference' || this.typeOfMap == 'demo-program') {\n                        contentName += this.popupElement[i].date_event + '. '\n                            + this.popupElement[i].time_beg + ':' +\n                            this.popupElement[i].time_end + '<br>';\n                    }\n                    contentName += this.popupElement[i].name.trim() + '<br>';\n                    //console.log(\"contentPlace=\", contentPlace);\n                    //console.log(\"contentName=\", contentName);\n\n\n                }\n            }\n            if ((contentPlace != '') && (contentName != '')) {\n                this.showPopup(contentPlace + contentName, this.placeListForMap[m].coords);\n            }\n        }\n    }\n\n    async setPictogramsForMap(pictStr) {\n        let pictList = pictStr.split(',');\n        this.placeListForMap = [];\n        this.iconList = [];\n        let iconWhere = '';\n        for (let i = 0; i < pictList.length; i++) {\n            iconWhere += (iconWhere.length > 0 ? ' or ' : '') + ' icon_name=\"' + pictList[i] + '\"';\n        }\n        // iconWhere=\n        this.map.autoPan = true;\n        this.placeListForMap = await this.placeSql.selectWhere('name_map=\"' + this.currentMap.name_map + '\"' + (iconWhere.length > 0 ? ' and (' + iconWhere + ') ' : ''));\n        this.placeListForMap.forEach(placeIcon => {\n\n            if (placeIcon.icon_name) {\n\n\n                let icon = L.icon({\n                    iconUrl: this.iconPath + placeIcon.icon_name,\n                    iconSize: [this.iconArrowSize, this.iconArrowSize] // size of the icon\n                });\n                let content = placeIcon[\"name_\" + (this.lang == 'ru' ? 'rus' : 'eng')];\n                this.showIcon(content, placeIcon.coords, icon)\n\n\n            }\n        })\n\n\n    }\n\n    setIconsForMap() {\n        if (this.placeListForMap) {\n            this.iconList = [];\n            this.placeListForMap.forEach(placeIcon => {\n                if ((placeIcon.icon_name) && (this.iconStr.includes(placeIcon.icon_name))) {\n                    let icon = L.icon({\n                        iconUrl: this.iconPath + placeIcon.icon_name,\n                        iconSize: [this.iconArrowSize, this.iconArrowSize] // size of the icon\n                    });\n                    let content = placeIcon[\"name_\" + (this.lang == 'ru' ? 'rus' : 'eng')];\n                    this.showIcon(content, placeIcon.coords, icon)\n                }\n            })\n        }\n\n    }\n\n    /**\n     * show signs for current map which MUST be shown\n     */\n    setSignsForMap() {\n\n        if (this.placeListForMap) {\n            if (this.popupList) {\n                if ((this.typeOfMap == 'conference') || (this.typeOfMap == 'participant') || this.typeOfMap == 'exhibit') {\n                    this.popupList.forEach(popup => {\n                            if ((popup.popup) && (popup.name_map == this.currentMap.name_map)) {\n                                this.map.closePopup(popup.popup);\n\n                            }\n                            if ((popup.marker) && (popup.name_map == this.currentMap.name_map)) {\n                                this.map.closePopup(popup.marker);\n\n                            }\n                        }\n                    )\n                }\n            }\n\n\n            this.placeListForMap.forEach(placeSign => {\n                //console.log(\"placeSign=\", placeSign);\n                let zoom: number = this.map.getZoom();\n                let marker = (placeSign.marker ? placeSign.marker : this.map.getMaxZoom() + 1);\n                if (marker == 'min') marker = this.map.getMinZoom();\n                let tooltip = (placeSign.tooltip ? placeSign.tooltip : this.map.getMaxZoom() + 1);\n                if (tooltip == 'min') tooltip = this.map.getMinZoom();\n                let popup = (placeSign.popup ? placeSign.popup : this.map.getMaxZoom() + 1);\n                if (popup == 'min') popup = this.map.getMinZoom();\n\n                if ((zoom >= marker) && ( zoom < tooltip) && (zoom < popup)) {\n                    let content = placeSign[\"name_\" + (this.lang == 'ru' ? 'rus' : 'eng')];\n                    this.showMarker(content, placeSign.coords);\n                }\n                if ((zoom >= tooltip) && (popup > zoom)) {\n                    let content = placeSign[\"name_\" + (this.lang == 'ru' ? 'rus' : 'eng')];\n                    this.showTooltip(content, placeSign.coords);\n                }\n                if (zoom >= popup) {\n                    let content = placeSign[\"name_\" + (this.lang == 'ru' ? 'rus' : 'eng')];\n                    this.showPopup(content, placeSign.coords);\n                }\n\n            });\n        }\n    }\n\n    async ionViewDidLoad() {\n        super.ionViewDidLoad();\n        this.fullMapList = await  this.mapSql.select();\n\n        this.typeOfMap = this.navParams.get('typeOfMap');\n        this.popupElement = this.navParams.get('popupElement');\n        this.place = this.navParams.get('place');\n        this.currentMap = this.navParams.get('map');\n        this.iconStr = this.navParams.get('icons');\n\n        //console.log(\"popupElement=\", this.popupElement);\n        //console.log(\"place=\", this.place);\n        //console.log(\"currentMap=\", this.currentMap);\n\n\n        if (this.typeOfMap == 'participantDetail' || this.typeOfMap == 'conferenceDetail' || this.typeOfMap == 'exhibitDetail' ||\n            this.typeOfMap == 'demoProgramDetail') {\n            await this.initMap();\n            this.showArrow = false;\n            let content: string;\n            content = this.place[0][\"name_\" + ((this.lang == 'ru') ? 'rus' : 'eng')] + '<br>' + this.popupElement.name;\n            if (this.typeOfMap == 'conferenceDetail') {\n                content += this.popupElement.date_event + '. '\n                    + this.popupElement.time_beg + ':' +\n                    this.popupElement.time_end + '<br>';\n            }\n            this.showPopup(content, this.place[0].coords);\n        }\n\n        if (this.typeOfMap == 'showmarker') {\n            await this.initMap();\n            let content = '';\n            if (this.popupElement) {\n                if (this.popupElement.name) content = this.popupElement.name\n                content = ((this.lang == 'ru') ? this.popupElement.name_rus : this.popupElement.name_eng);\n            }\n            if (this.place.length) {\n                this.place.forEach(placeSingle => {\n                    content = '';\n                    content = ((this.lang == 'ru') ? this.place.name_rus : this.place.name_eng);\n                    this.showMarker(content, placeSingle.coords);\n\n                })\n            }\n            else {\n                if (content == '') content = ((this.lang == 'ru') ? this.place.name_rus : this.place.name_eng);\n                this.showMarker(content, this.place.coords);\n            }\n            let xy = this.getCenter(this.place.coords);\n            //let marker = L.marker();\n            this.map.setView([this.currentMap.height - xy.x, xy.y]);\n\n        }\n\n        if ((this.typeOfMap == 'conference') || (this.typeOfMap == 'participant')\n            || (this.typeOfMap == 'exhibit') || (this.typeOfMap == 'demo-program')) {\n            this.createMapList();\n            this.currentMapNumber = 0;\n            this.initMap();\n            // this.setSigns();\n        }\n\n        if (this.typeOfMap == 'simple') {\n            this.initMap();\n\n        }\n        if (this.typeOfMap == 'icon') {\n            this.initMap();\n            this.setPictogramsForMap(this.iconStr);\n            if (this.navParams.get('titleStr')) this.titleStr = this.navParams.get('titleStr');\n        }\n    }\n\n\n    /**\n     * moving through the maps according to direction (up/down, left/right)\n     * @param direction\n     */\n    mapDirection(direction) {\n        direction = 'map_' + direction;\n        //console.log(\"currentMapNumber=\", this.currentMapNumber);\n        //console.log(\"direction=\", direction);\n        //console.log(\"fullMapList[currentMapNumber]=\", this.fullMapList[this.currentMapNumber]);\n        //console.log(\"fullMapList[currentMapNumber]=\", this.fullMapList[this.currentMapNumber][direction]);\n        if (this.fullMapList[this.currentMapNumber][direction]) {\n            for (let i = 0; i < this.fullMapList.length; i++) {\n                if (this.fullMapList[i].name_map == this.fullMapList[this.currentMapNumber][direction]) {\n                    this.currentMap = this.fullMapList[i];\n                    // setMap();\n                    //console.log(\"currentMap=\", this.currentMap.name_map);\n                    this.currentMapNumber = i;\n                    break;\n                }\n            }\n        }\n        //this.getMapFromFullList();\n        this.initMap();\n        // this.setButtonsEnable();\n        if (this.showPopups) this.setSigns();\n\n    }\n\n    /**\n     * get previos (i.e. map from the previous level) map for the current map\n     */\n    mapPrevious() {\n        let direction = \"place_previous\";\n        let old_map_name = this.currentMap.name_map;\n        //console.log(\"currentMapNumber=\", this.currentMapNumber);\n        //console.log(\"direction=\", direction);\n        //console.log(\"fullMapList[currentMapNumber]=\", this.fullMapList[this.currentMapNumber]);\n        //console.log(\"fullMapList[currentMapNumber]=\", this.fullMapList[this.currentMapNumber][direction]);\n        if (this.currentMap[direction]) {\n            for (let i = 0; i < this.fullMapList.length; i++) {\n                if (this.fullMapList[i].name_map == this.currentMap[direction]) {\n                    this.currentMap = this.fullMapList[i];\n                    // setMap();\n                    //console.log(\"currentMap=\", this.currentMap.name_map);\n                    this.currentMapNumber = i;\n                    break;\n                }\n            }\n        }\n        //  this.getMapFromFullList();\n        //this.setMap();\n        this.initMap();\n        // this.setButtonsEnable();\n        //console.log(\"old_map_name=\", old_map_name);\n        if (this.showPopups) this.setMapAsPlace(old_map_name);\n    }\n\n    updatePopups() {\n        //console.log('updatePopups=', this.showPopups);\n        if (this.showPopups) {\n            for (let popup of this.popupList) {\n                if (popup.name_map == this.currentMap.name_map)\n                    popup.popup.openOn(this.map);\n            }\n        } //this.setPopups();\n        else {\n            for (let popup of this.popupList) {\n                if (popup.name_map == this.currentMap.name_map)\n                    this.map.closePopup(popup.popup);\n            }\n        }\n    }\n\n    mapOnZoom(e) {\n        //console.log(e);\n        //console.log(\"this.map.getCenter()=\", this.map.getCenter());\n        //Returns the geographical center of the map view\n        //console.log(\"this.map.getZoom()=\", this.map.getZoom());\n        this.setSignsForMap();\n        this.setSigns();\n\n\n    }\n\n    doNothing() {\n        //console.log('do nothing, as it was promised');\n    }\n\n\n    /*  onSwipe(event) {\n        /!* //console.log(event);\n         if (event.offsetDirection) {\n           //console.log(\"event.offseDirection=\", event.offsetDirection);\n           switch (event.offsetDirection) {\n             case 4:\n               if (this.showLeftArrow) {\n                 this.mapDirection('left');\n\n               }\n               break;\n             case 2:\n               if (this.showRightArrow) {\n                 this.mapDirection('right');\n\n               }\n               break;\n           }\n\n         }*!/\n      }*/\n\n}\n\n// 790 strings before refactoring\n\n/*\ndirection of swipe\nleft =1\nright=\nup\ndown\n\n\n\n\noffset direction\nleft 4\nright 2\n */\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/leaflet-map/leaflet-map.ts","import {Injectable} from '@angular/core';\nimport {Http /*, Response*/} from '@angular/http';\n\nimport 'rxjs';\nimport {BaseApi} from \"../base-api-service\";\n\n\n@Injectable()\nexport class PatriotApiService extends BaseApi{\n//  private baseUrl = 'http://army2017.ru/api';\n\n  private conference: any = {};\n\n\n  constructor(public http: Http) {\n    super(http);\n    //console.log('conferenceSingle api is created');\n  }\n\n  public userId:any;\n\n  getExhibit() {\n    //console.log('**about to make HTTP call for all');\n    return this.http.get(this.baseUrlApi+'patriot_list.php')\n      .map(response => {\n        this.conference = response.json();\n        //console.log(\"after API\");\n        //console.log(this.conference);\n        return this.conference;\n      });\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/patriot/patriot-api-service.ts","import {Injectable} from '@angular/core';\nimport {BaseSql} from \"./base-sql\";\nimport {Http} from \"@angular/http\";\n/*\n Generated class for the Sqlite provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\nexport interface participant {\n  id: string;\n  name_rus: string;\n  name_eng: string;\n  desc_rus: string;\n  desc_eng: string;\n  logo: string;\n  country_rus: string;\n  country_eng: string;\n  address_rus: string;\n  address_eng: string;\n  phone: string;\n  email: string;\n  www: string;\n  place: string;\n  thematic: string\n}\n\ndeclare let window: any;\n@Injectable()\n\nexport class ParticipantSql extends BaseSql{\n  public text: string = \"\";\n/*  public db = null;\n  public arr = [];*/\n\n  constructor(public http: Http) {\n    super(http,'participant',[\n      {name:\"id\", type:\"text PRIMARY KEY\"},\n      {name:\"name_rus\", type:\"text\"},\n      {name:\"name_eng\", type:\"text\"},\n      {name:\"desc_rus\", type:\"text\"},\n      {name:\"desc_eng\", type:\"text\"},\n      {name:\"logo text,' \", type:\"text\"},\n      {name:\"country_rus\", type:\"text\"},\n      {name:\"country_eng\", type:\"text\"},\n      {name:\"address_rus\", type:\"text\"},\n      {name:\"address_eng\", type:\"text\"},\n      {name:\"phone text\", type:\"text\"},\n      {name:\"email text\", type:\"text\"},\n      {name:\"www text\", type:\"text\"},\n      {name:\"place text\", type:\"text\"},\n      {name:\"'thematic text\",type:\"text\"},\n      {name:\"name_rus_upper\", type:\"text\"},\n      ]\n    );\n    //console.log('Hello ThematicConferenceSql Provider');\n   /* this.openDb();*/\n  }\n\n\n  /**\n   *\n   * @param {participant} participantSingle\n   * @returns {Promise<any>}\n   */\n  addItemParticipant(participantSingle: participant) {\n    return new Promise(resolve => {\n      let InsertQuery = 'insert or replace into participant(' +\n        'id, ' +\n        'name_rus, ' +\n        'desc_rus, ' +\n        'country_rus, ' +\n        'address_rus,' +\n        'name_eng, ' +\n        'desc_eng, ' +\n        'country_eng, ' +\n        'address_eng, ' +\n        'phone, ' +\n        'email, ' +\n        'www,' +\n        'logo, ' +\n        'place, ' +\n        'thematic,' +\n        'name_rus_upper) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,? )';\n      this.db.executeSql(InsertQuery, [participantSingle.id,\n        participantSingle.name_rus,\n        participantSingle.desc_rus,\n        participantSingle.country_rus,\n        participantSingle.address_rus,\n        participantSingle.name_eng,\n        participantSingle.desc_eng,\n        participantSingle.country_eng,\n        participantSingle.address_eng,\n        participantSingle.phone,\n        participantSingle.email,\n        participantSingle.www,\n        participantSingle.logo,\n        participantSingle.place,\n        participantSingle.thematic,\n        participantSingle.name_rus.toUpperCase()], (r) => {\n        //console.log('Inserted... Sucess..', parseInt(participantSingle.id));\n        this.select().then(s => {\n          resolve(true)\n        });\n      }, e => {\n        //console.log('Inserted Error', e);\n        resolve(false);\n      })\n    })\n  }\n\n\n\n\n\n\n  //to Update any Item\n  update(id, txt) {\n    return new Promise(res => {\n      let query = \"UPDATE Todo SET todoItem=?  WHERE id=?\";\n      this.db.executeSql(query, [txt, id], (s) => {\n        //console.log('Update Success...', s);\n        this.select().then(s => {\n          res(true);\n        });\n      }, (err) => {\n        //console.log('Updating Error', err);\n      });\n    })\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/participant-sql.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {ThematicApi} from \"../../providers/thematic/thematic-api-service\";\nimport {ThematicSql} from \"../../providers/thematic-sql\";\nimport {ParticipantPage} from \"../participant/participant\";\nimport {BaseApi} from \"../../providers/base-api-service\";\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\n\n/**\n * Generated class for the ThematicPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-thematic',\n  templateUrl: 'thematic.html',\n})\nexport class ThematicPage extends BaseLangPageProvider {\n  thematic: any;\n\n  apiUrl: string = 'thematic_list.php';\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public thematicApi: ThematicApi,\n              public BaseApi: BaseApi,\n              public thematicSql: ThematicSql,\n              public http: Http,\n              public events: Events,\n              public myForumSql: MyForumSql) {\n    super(navCtrl,  events, http);\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n    this.titleStr = 'Тематика участника';\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings();\n    this.titleStr = 'Thematic';\n  }\n\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad ThematicPage');\n    this.thematicSql.select().then(res => {\n      //console.log(\"res=\", res);\n      if (res) {\n        this.thematic = <any>res;\n        //console.log(\"this.thematic=\", this.thematic);\n      }\n      else {\n        this.BaseApi.getApi(this.apiUrl).subscribe(res => {\n          this.thematic = <any>res;\n          this.addItemThematic();\n        });\n\n      }\n    })\n\n\n  }\n\n\n  /*  getThematicApi() {\n      //console.log('run thematic promise. run!');\n  //this.baseApi.\n      this.thematicApi.getThematic().subscribe(data => {\n        //console.log(\"here are the results\");\n        //console.log(data);\n        this.thematic = data\n      });\n\n    }*/\n\n\n  /**\n   * add Items from this.thematic property to the table \"thematic\"\n   */\n  addItemThematic() {\n    for (let thema of this.thematic) {\n      //console.log('try to insert thematic');\n      //console.log(\"thema=\", thema);\n      this.thematicSql.addItem(thema).then(res => {\n          //console.log('success insert into thematic');\n          //console.log(res);\n        }\n      ).catch(err => {\n        console.error('Unable to insert storage tables thametic', err.tx, err.err);\n      })\n\n    }\n  }\n\n  deleteAllThematic() {\n    this.thematicSql.delAll();\n  }\n\n  goToParticipantThematicList(thematic: string) {\n    let whereStr =\n      ' where a.thematic like \"' + thematic + ',%\" or a.thematic like \"%,'\n      + thematic + ',%\" or a.thematic like \"%,' + thematic + '\" or a.thematic=\"' + thematic + '\"';\n    if (this.lang == 'ru') {\n      this.myForumSql.getRusParticipant(whereStr).then(res => {\n        //console.log(res);\n        this.navCtrl.push(ParticipantPage, {data: res, select: 'thematic'}\n        );\n      });\n    }\n    else {\n      this.myForumSql.getEngParticipant(whereStr).then(res => {\n          //console.log(res);\n          this.navCtrl.push(ParticipantPage, {data: res, select: 'thematic'}\n          );\n        }\n      )\n\n\n    }\n\n    /* this.thematicSql.getParticipantForThematic(thematic).then(res => {\n       //console.log(res);\n       this.navCtrl.push(ParticipantPage, {data: res, select: 'thematic'});\n     })*/\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/thematic/thematic.ts","import {Injectable, ViewChild} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {place, PlaceSql} from \"../place-sql/place-sql\";\nimport {AlertController, NavController, NavParams, ToastController} from \"ionic-angular\";\nimport {PlaceApi} from \"../place/place-api-service\";\nimport {DrawFunctionProvider} from \"../draw-function/draw-function\";\nimport {ParticipantDetailPage} from \"../../pages/participant-detail/participant-detail\";\n\n/*\n Generated class for the MapBaseProvider provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular 2 DI.\n */\n@Injectable()\nexport class MapBaseProvider {\n\n  @ViewChild('drawingCanvas') drawingCanvas;\n\n\n  places: place[] = [];\n\n  width_map: number;\n  height_map: number;\n  name_map: string;\n  widthMinus: number;\n  hdc: any;\n  imageMap = new Image;\n  participant_name: string = '';\n\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public placeApi: PlaceApi,\n              public toastCtrl: ToastController,\n              public placeSql: PlaceSql,\n              public drawFunction: DrawFunctionProvider,\n              public alertCtrl: AlertController,\n              width:number,\n              height:number,\n              name_map:string) {\n    //console.log('Hello MapBaseProvider Provider');\n    this.width_map = width;\n    this.height_map = height;\n    this.name_map = name_map;\n    this.widthMinus = -this.width_map;\n  }\n\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad HallAMapPage');\n    //check if there are data in the base\n    //console.log(\"this.places.length=\", this.places.length);\n    if (!this.places.length) {\n      let toast = this.toastCtrl.create({\n        message: 'Чтение из базы',\n        duration: 2000\n      });\n      this.hdc = this.drawingCanvas.nativeElement.getContext('2d');\n      this.hdc.fillStyle = 'red';\n      this.hdc.strokeStyle = 'red';\n      this.hdc.lineWidth = 2;\n      this.imageMap.src = \"assets/img/maps/\" + this.name_map;\n      this.imageMap.onload = () => {\n        this.hdc.drawImage(this.imageMap, 0, 0);\n\n      };\n      toast.present();\n      this.placeSql.selectWhere('map='+'\"'+this.name_map+'\"').then(\n        res => {\n          //console.log(\"res=\", res);\n          let length = (<place[]>res).length;\n          //console.log(\"length=\", length);\n          if ((<place[]>res).length) {\n            //if there are records in database\n            //console.log(\"res=\", res);\n            this.places = <place[]>res;\n            //console.log(\"this.places=\", this.places);\n          }\n          else {\n            //if not - go to api\n            let toast = this.toastCtrl.create({\n              message: 'В базе нет записей. Запрос API',\n              duration: 2000\n            });\n            //console.log('В базе нет записей. Запрос API и запись базы');\n            toast.present();\n            this.getPlaceApiInsertBase();\n\n          }\n        });\n    }\n  }\n\n\n  addItemPlace() {\n    for (let placeSingle of this.places) {\n      //console.log('try to insert place');\n      //console.log(<place>placeSingle);\n      this.placeSql.addItemPlace(placeSingle\n      ).then(res => {\n          //console.log('success insert into thematic');\n          //console.log(res);\n        }\n      ).catch(err => {\n        console.error('Unable to insert storage tables thametic', err.tx, err.err);\n      })\n\n    }\n  }\n\n  deletePlaceAll() {\n    this.placeSql.delAll('name_map=\"'+this.name_map+'\"');\n  }\n\n\n  areaClick(placeSingle: place) {\n\n\n\n\n    //alert(placeSingle.id + \"  \" + placeSingle.name_rus);\n    //console.log(\"placeSingle in areaClick=\", placeSingle);\n    if (placeSingle.id) {\n      this.placeSql.getPlaceParticipant(placeSingle.id).then(res => {\n        //console.log(res);\n        if (res) {\n\n          this.navCtrl.push(ParticipantDetailPage, {\n            res\n          });\n        }\n\n      })\n    }\n\n\n  }\n\n\n  getPlaceApi() {\n    this.placeApi.getPlace(this.name_map).subscribe(res => {\n\n      //console.log(res);\n      for (let item of res) {\n        //console.log(\"item of res=\", item);\n        let tmpCoord: place;\n        let tmpShape: string = '';\n        //console.log(item.coords);\n        if (item.coords) {\n          /* if (item.coords.length > 4) tmpShape = \"poly\"\n           else tmpShape = \"rect\";*/\n          tmpShape = \"rect\";\n          tmpCoord = {\n            coords: item.coords,\n            name_map: item.name_map,\n            name_rus: item.name_rus,\n            name_eng: item.name_eng,\n            number_on_map: item.number_on_map,\n            goto: item.goto,\n            id: item.id,\n            shape: tmpShape\n\n          };\n          //console.log(\"tmpCoord=\", tmpCoord);\n          this.places.push(tmpCoord);\n        }\n\n      }\n      //console.log(\"this.places=\", this.places);\n    });\n\n  }\n\n  drawFigure(placeSingle: place, event) {\n    //console.log(\"placeSingle=\", placeSingle);\n    //  alert(placeSingle.name_rus);\n    this.drawFunction.drawFigure(placeSingle, this.drawingCanvas, this.imageMap, event);\n    this.participant_name = '';\n    //console.log(\"placeSingle.id=\", placeSingle.id);\n    if (placeSingle.id) {\n      this.placeSql.getPlaceParticipant(placeSingle.id).then(res => {\n        //console.log(res);\n        if (res) {\n          this.participant_name = (<any>res).name_rus;\n          //console.log(\"res in draw figure=\", res);\n          //console.log(\"(<any>res).name_rus=\", (<any>res).name_rus);\n          //console.log(\"participant_name=\", this.participant_name);\n          let alert = this.alertCtrl.create({\n            title: placeSingle.name_rus,\n            message: this.participant_name,\n            buttons: ['OK']\n\n          });\n          alert.present();\n        }\n        else {\n          let alert = this.alertCtrl.create({\n            title: placeSingle.name_rus,\n            buttons: ['OK']\n          });\n\n          alert.present();\n        }\n\n      })\n    }\n    //console.log(\"participant_name near alert1=\", this.participant_name);\n    // alert(this.participant_name);\n\n    //console.log(\"participant_name near alert=\", this.participant_name);\n    //  alert1.setMessage(participant_name1);\n\n\n  }\n\n  getPlaceApiInsertBase() {\n    let toast = this.toastCtrl.create({\n      message: 'Загрузка из API ',\n      duration: 5000\n    });\n    toast.present();\n    return this.placeApi.getPlace(this.name_map).subscribe(res => {\n      this.places = [];\n      //console.log(\"getPlaceApi res=\", res);\n      for (let item of res) {\n        //console.log(\"item of res=\", item);\n        this.places.push(<place>item);\n        this.placeSql.addItemPlace(<place>item);\n      }\n    });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/map-base/map-base.ts","import {Component, Injectable} from '@angular/core';\nimport {ModalController, NavController, NavParams, Events} from 'ionic-angular';\nimport {FilterPage} from \"../filter\";\nimport {BaseSql} from \"../../../providers/base-sql\";\nimport {Http} from \"@angular/http\";\nimport {FilterParticipantProvider} from \"../../../providers/filter-provider/filter-participant-provider\";\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\n\n@Injectable()\n@Component({\n    selector: 'page-filter-participant',\n    templateUrl: 'filter-participant.html',\n})\nexport class FilterParticipantPage extends BaseLangPageProvider {\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                public modalCtrl: ModalController,\n                public http: Http,\n                public filterProvider: FilterParticipantProvider,\n                public events: Events) {\n        super(navCtrl, events, http);\n\n\n    }\n\n    ionViewDidLoad(){\n        super.ionViewDidLoad();\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings();\n        //console.log('this.setRussianStrings()');\n\n\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings();\n        //console.log('this.setEnglishStrings()');\n\n    }\n\n    filterCreate() {\n        if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n            this.filterCreateWhereStrMap().then(res => {\n                //console.log(' filterMap()1 res=', <any>res);\n                this.filterProvider.setFilterValue(<string>res);\n            });\n        else\n            this.filterCreateWhereStr().then(res => {\n                //console.log(' filterMap() res=', <any>res);\n                this.filterProvider.setFilterValue(<string>res);\n            });\n        //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n    }\n\n    filterThematic() {\n        let parameters = {\n            table: 'thematic', field: 'name_rus',\n            value: 'number', title: 'Тематика'\n        };\n        if (this.lang == 'en') {\n            parameters = {\n                table: 'thematic', field: 'name_eng',\n                value: 'number', title: 'Thema'\n            }\n        }\n        let filterModal = this.modalCtrl.create(FilterPage, parameters);\n        filterModal.onDidDismiss(\n            data => {\n                //console.log(data);\n                this.filterProvider.thematicField = data[\"field\"];\n                this.filterProvider.thematicValue = data[\"value\"];\n                /* this.filterProvider.filterStr=this.filterCreateWhereStr();*/\n                this.filterCreate();\n\n            });\n        filterModal.present();\n    }\n\n    filterMap() {\n        let parameters = {\n            table: 'map', field: 'name_rus',\n            value: 'name_map', title: 'Павильон'\n        };\n        if (this.lang == 'en') {\n            parameters = {\n                table: 'map', field: 'name_eng',\n                value: 'name_map', title: 'Hall'\n            };\n        }\n        let filterModal = this.modalCtrl.create(FilterPage, parameters);\n        filterModal.onDidDismiss(\n            data => {\n                //console.log(data);\n                this.filterProvider.mapField = data[\"field\"];\n                this.filterProvider.mapValue = data[\"value\"];\n                // this.filterStr=this.filterCreateWhereStr();\n                this.filterCreate();\n            });\n        filterModal.present();\n    }\n\n    filterPlace() {\n        let parameters = {\n            table: 'place', field: 'name_rus',\n            value: 'id', where: ' name_map=\"' + this.filterProvider.mapValue + '\"', title: 'Стенд'\n        };\n        if (this.lang == 'en') {\n            parameters =\n                {\n                    table: 'place', field: 'name_eng',\n                    value: 'id', where: ' name_map=\"' + this.filterProvider.mapValue + '\"', title: 'Stand'\n                }\n        }\n        if (this.filterProvider.mapField != '') {\n            let filterModal = this.modalCtrl.create(FilterPage, parameters);\n            filterModal.onDidDismiss(\n                data => {\n                    //console.log(data);\n                    this.filterProvider.placeField = data[\"field\"];\n                    this.filterProvider.placeValue = data[\"value\"];\n                    //this.filterProvider.filterStr=\n                    this.filterCreate();\n                });\n            filterModal.present();\n        }\n    }\n\n    filterCountry() {\n        let parameters = {\n            table: 'participant', field: 'country_rus',\n            value: 'country_rus', distinct: 'country_rus', title: 'Страна'\n        };\n        if (this.lang == 'en') {\n            parameters =\n                {\n                    table: 'participant', field: 'country_eng',\n                    value: 'country_eng', distinct: 'country_eng', title: 'Country'\n                }\n        }\n        let filterModal = this.modalCtrl.create(FilterPage, parameters);\n        filterModal.onDidDismiss(\n            data => {\n                //console.log(data);\n                this.filterProvider.countryField = data[\"field\"];\n                this.filterProvider.countryValue = data[\"value\"];\n                //this.filterStr=this.filterCreateWhereStr();\n                this.filterCreate();\n            }\n        );\n\n        filterModal.present();\n    }\n\n    filterCreateWhereStr() {\n        //console.log(\"this.thematicValue\", this.filterProvider.thematicValue);\n        //console.log(\"this.countryValue\", this.filterProvider.countryValue);\n        //console.log(\"this.mapValue=\", this.filterProvider.mapValue);\n        //console.log(\"(this.placeValue=\", this.filterProvider.placeValue);\n        return new Promise(res => {\n            let whereStr = '';\n\n            if ((this.filterProvider.partOfName) && (this.filterProvider.partOfName != '')) {\n                if (this.lang == 'ru') {\n                    whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"';\n                }\n                else {\n                    whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"'\n                }\n\n            }\n\n            if ((this.filterProvider.countryValue) && (this.filterProvider.countryValue != '')) {\n                if (this.lang == 'ru') {\n                    whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_rus=\"' + this.filterProvider.countryValue + '\"';\n                }\n                else {\n                    whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_eng=\"' + this.filterProvider.countryValue + '\"';\n                }\n            }\n            if ((this.filterProvider.mapValue) && ((this.filterProvider.placeValue == '') && (this.filterProvider.mapValue != ''))) {\n\n                let places = new BaseSql(this.http, 'place');\n                places.selectDistinct(\"id\", \"name_map='\" + this.filterProvider.mapValue + \"'\").then(rs => {\n                    let placeList = <any>rs;\n                    //console.log(\"place\", placeList);\n                    if (placeList.length > 0) whereStr += ((whereStr != '') ? ' and (' : ' (');\n                    for (let i = 0; i < placeList.length; i++) {\n                        whereStr += ' place=' + placeList[i].id;\n                        if (i < placeList.length - 1) whereStr += ' or ';\n                    }\n                    whereStr += ')';\n                    //console.log(\"((this.placeValue=='') && (this.mapValue!=''))\", whereStr);\n                })\n\n            }\n\n            if (this.filterProvider.thematicValue) {\n\n                whereStr += ((whereStr != '') ? ' and ' : '') + '(a.thematic=\"' + this.filterProvider.thematicValue + '\" or a.thematic like \"' + this.filterProvider.thematicValue +\n                    ',%\"' + ' or a.thematic like \"%,' + this.filterProvider.thematicValue + '\" or  a.thematic like \"%,' + this.filterProvider.thematicValue + ',%\")';\n            }\n            //console.log(\"(whereStr after thematic=\", whereStr);\n\n            /*if (this.partOfName != '') whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus like ' + '\"%' + this.partOfName + '%\"';\n             */\n            if (this.filterProvider.placeValue && (this.filterProvider.placeValue != ''))\n                whereStr += ((whereStr != '') ? ' and ' : '') + '  a.place=\"' + this.filterProvider.placeValue + '\"';\n            if (whereStr != '') whereStr = ' where ' + whereStr;\n\n            //console.log('so whereStr is =', whereStr);\n            this.filterProvider.setFilterValue(whereStr);\n            //console.log('so whereStr is =', whereStr);\n\n            return res(whereStr)\n        });\n    }\n\n    filterCreateWhereStrMap() {\n        //console.log(\"this.thematicValue\", this.filterProvider.thematicValue);\n        //console.log(\"this.countryValue\", this.filterProvider.countryValue);\n        //console.log(\"this.mapValue=\", this.filterProvider.mapValue);\n        //console.log(\"(this.placeValue=\", this.filterProvider.placeValue);\n        return new Promise(res => {\n            let whereStr = '';\n\n\n            if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == ''))) {\n\n                let places = new BaseSql(this.http, 'place');\n                places.selectDistinct(\"id\", \"name_map='\" + this.filterProvider.mapValue + \"'\").then(rs => {\n                    let placeList = <any>rs;\n                    //console.log(\"place\", placeList);\n                    if (placeList.length > 0) whereStr += ((whereStr != '') ? ' and (' : ' (');\n                    for (let i = 0; i < placeList.length; i++) {\n                        whereStr += ' place=' + placeList[i].id;\n                        if (i < placeList.length - 1) whereStr += ' or ';\n                    }\n                    whereStr += ')';\n\n                    if ((this.filterProvider.countryValue) && (this.filterProvider.countryValue != '')) {\n                        if (this.lang == 'ru') {\n                            whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_rus=\"' + this.filterProvider.countryValue + '\"';\n                        }\n                        else {\n                            whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_eng=\"' + this.filterProvider.countryValue + '\"';\n                        }\n                    }\n                    //console.log(\"((this.placeValue=='') && (this.mapValue!=''))\", whereStr);\n                    if (this.filterProvider.thematicValue) {\n\n                        whereStr += ((whereStr != '') ? ' and ' : '') + '(a.thematic=\"' + this.filterProvider.thematicValue + '\" or a.thematic like \"' + this.filterProvider.thematicValue +\n                            ',%\"' + ' or a.thematic like \"%,' + this.filterProvider.thematicValue + '\" or  a.thematic like \"%,' + this.filterProvider.thematicValue + ',%\")';\n                    }\n                    //console.log(\"(whereStr after thematic=\", whereStr);\n                    if ((this.filterProvider.partOfName) && (this.filterProvider.partOfName != '')) {\n                        if (this.lang == 'ru') {\n                            whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"';\n                        }\n                        else {\n                            whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"'\n                        }\n\n                    }\n\n                    if (whereStr != '') whereStr = ' where ' + whereStr;\n                    //console.log('so whereStr is =', whereStr);\n                    this.filterProvider.setFilterValue(whereStr);\n                    //console.log('so whereStr is =', whereStr);\n                });\n\n\n            }\n\n            res(whereStr);\n        });\n\n\n    }\n\n    setFilter() {\n        //console.log(this.filterCreateWhereStr());\n        //this.filterStr = this.filterCreateWhereStr();\n\n        this.filterProvider.setFilterValue(this.filterCreateWhereStr());\n    }\n\n    selectParticipantSearch() {\n        //  this.filterStr=this.filterCreateWhereStr();\n        // this.filterProvider.setFilterValue(this.filterCreateWhereStr());\n        this.filterCreate();\n    }\n\n\n    cancelFilterCountry() {\n        this.filterProvider.countryField = '';\n        this.filterProvider.countryValue = '';\n        this.filterCreate();\n\n    }\n\n    cancelFilterMap() {\n        this.filterProvider.mapField = '';\n        this.filterProvider.mapValue = '';\n        this.filterCreate();\n\n    }\n\n    cancelFilterPlace() {\n        this.filterProvider.placeField = '';\n        this.filterProvider.placeValue = '';\n        this.filterCreate();\n\n    }\n\n    cancelFilterThematic() {\n        this.filterProvider.thematicField = '';\n        this.filterProvider.thematicValue = '';\n        this.filterCreate();\n\n    }\n\n    cancelFilterName() {\n        this.filterProvider.partOfName = '';\n        this.filterCreate();\n\n\n    }\n\n    cancelWholeFilter() {\n        this.cancelFilterCountry();\n        this.cancelFilterMap();\n        this.cancelFilterThematic();\n        this.cancelFilterName();\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/filter/filter-participant/filter-participant.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the LanguageProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class LanguageProvider {\n\n  constructor(public http: Http) {\n    //console.log('Hello LanguageProvider Provider');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/language/language.ts","import {Component, Injectable} from '@angular/core';\nimport {ModalController, NavController, NavParams, Events} from 'ionic-angular';\nimport {FilterPage} from \"../filter\";\nimport {BaseSql} from \"../../../providers/base-sql\";\nimport {Http} from \"@angular/http\";\n\nimport {FilterConferenceProvider} from \"../../../providers/filter-provider/filter-conference-provider\";\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\n\n@Injectable()\n@Component({\n  selector: 'page-filter-conference',\n  templateUrl: 'filter-conference.html',\n})\nexport class FilterConferencePage extends BaseLangPageProvider {\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public modalCtrl: ModalController,\n              public http: Http,\n              public filterProvider: FilterConferenceProvider,\n              public events: Events) {\n    super(navCtrl, events, http);\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n    //console.log('this.setRussianStrings()');\n\n\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings();\n    //console.log('this.setEnglishStrings()');\n\n  }\n\n\n  filterCreate() {\n    /* this.filterProvider.filterStr=this.filterCreateWhereStr();*/\n    if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n  }\n\n  filterThematic() {\n    let parameters = {\n      table: 'thematic_conference', field: 'name_rus',\n      value: 'id', title: 'Тематика'\n    };\n    if (this.lang == 'en') {\n      parameters = {\n        table: 'thematic_conference', field: 'name_eng',\n        value: 'id', title: 'Thema'\n      }\n    }\n    let filterModal = this.modalCtrl.create(FilterPage, parameters);\n    filterModal.onDidDismiss(\n      data => {\n        //console.log(data);\n        this.filterProvider.thematicConferenceField = data[\"field\"];\n        this.filterProvider.thematicConferenceValue = data[\"value\"];\n          this.filterCreate();\n\n      });\n    filterModal.present();\n  }\n\n  filterMap() {\n    let parameters = {\n      table: 'map', field: 'name_rus',\n      value: 'name_map', title: 'Павильон'\n    };\n    if (this.lang == 'en') {\n      parameters = {\n        table: 'map', field: 'name_eng',\n        value: 'name_map', title: 'Hall'\n      };\n    }\n    let filterModal = this.modalCtrl.create(FilterPage, parameters);\n    filterModal.onDidDismiss(\n      data => {\n        //console.log(data);\n        this.filterProvider.mapField = data[\"field\"];\n        this.filterProvider.mapValue = data[\"value\"];\n        // this.filterStr=this.filterCreateWhereStr();\n        this.filterCreate();\n      });\n    filterModal.present();\n  }\n\n  filterPlace() {\n    let parameters = {\n      table: 'place', field: 'name_rus',\n      value: 'id', where: ' name_map=\"' + this.filterProvider.mapValue + '\"', title: 'Стенд'\n    };\n    if (this.lang == 'en') {\n      parameters =\n        {\n          table: 'place', field: 'name_eng',\n          value: 'id', where: ' name_map=\"' + this.filterProvider.mapValue + '\"', title: 'Stand'\n        }\n    }\n    if (this.filterProvider.mapField != '') {\n      let filterModal = this.modalCtrl.create(FilterPage, parameters);\n      filterModal.onDidDismiss(\n        data => {\n          //console.log(data);\n          this.filterProvider.placeField = data[\"field\"];\n          this.filterProvider.placeValue = data[\"value\"];\n          //this.filterProvider.filterStr=\n          this.filterCreate();\n        });\n      filterModal.present();\n    }\n  }\n\n  filterDate() {\n    let parameters = {\n      table: 'conference', field: 'date_event',\n      value: 'date_event', distinct: 'date_event',\n      title: 'Дата', order: 'date_event'\n    };\n    if (this.lang == 'en') {\n      parameters =\n        {\n          table: 'conference', field: 'date_event',\n          value: 'date_event', distinct: 'date_event',\n          title: 'Date', order: 'date_event'\n        }\n    }\n    let filterModal = this.modalCtrl.create(FilterPage, parameters);\n    filterModal.onDidDismiss(\n      data => {\n        //console.log(data);\n        this.filterProvider.dateField = data[\"field\"];\n        this.filterProvider.dateValue = data[\"value\"];\n        this.filterCreate();\n      }\n    );\n\n    filterModal.present();\n  }\n\n  filterCreateWhereStr() {\n    //console.log(\"this.thematicValue\", this.filterProvider.thematicConferenceValue);\n    //console.log(\"this.dateValue\", this.filterProvider.dateValue);\n    //console.log(\"this.mapValue=\", this.filterProvider.mapValue);\n    //console.log(\"this.placeValue=\", this.filterProvider.placeValue);\n    return new Promise(res => {\n      let whereStr = '';\n\n      if ((this.filterProvider.partOfName) && (this.filterProvider.partOfName != '')) {\n        if (this.lang == 'ru') {\n          whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"';\n        }\n        else {\n          whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"'\n        }\n\n      }\n\n      if ((this.filterProvider.dateValue) && (this.filterProvider.dateValue != '')) {\n\n        whereStr += ((whereStr != '') ? ' and ' : '') + 'a.date_event=\"' + this.filterProvider.dateValue + '\"';\n\n      }\n\n\n      if (this.filterProvider.thematicConferenceValue) {\n\n\n        whereStr += ((whereStr != '') ? ' and ' : '') + '(a.thematic_conference=\"' + this.filterProvider.thematicConferenceValue + '\")';\n      }\n      //console.log(\"(whereStr after thematic=\", whereStr);\n\n\n      if (this.filterProvider.placeValue && (this.filterProvider.placeValue != ''))\n        whereStr += ((whereStr != '') ? ' and ' : '') + '  a.place=\"' + this.filterProvider.placeValue + '\"';\n\n      if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == ''))) {\n        let places = new BaseSql(this.http, 'place');\n        places.selectDistinct('id', 'name_map=\"' + this.filterProvider.mapValue + '\"').then(rs => {\n          let placeList = <any>rs;\n          //console.log(\"place\", placeList);\n          if (placeList.length > 0) whereStr += ((whereStr != '') ? ' and (' : ' (');\n          for (let i = 0; i < placeList.length; i++) {\n            whereStr += ' place=' + placeList[i].id;\n            if (i < placeList.length - 1) whereStr += ' or ';\n          }\n          whereStr += ')';\n          //console.log(\"((this.placeValue=='') && (this.mapValue!=''))\", whereStr);\n          if (whereStr != '') whereStr = ' where ' + whereStr;\n          //console.log('so whereStr is =', whereStr);\n          /*return res(whereStr);*/\n        })\n\n      }\n\n      if (whereStr != '') whereStr = ' where ' + whereStr;\n      this.filterProvider.setFilterValue(whereStr);\n      //console.log('so whereStr is =', whereStr);\n      return res(whereStr);\n    });\n  }\n\n\n  filterCreateWhereStrMap() {\n    //console.log(\"filterCreateWhereStrMap this.thematicValue\", this.filterProvider.thematicConferenceValue);\n    //console.log(\"filterCreateWhereStrMap this.dateValue\", this.filterProvider.dateValue);\n    //console.log(\"filterCreateWhereStrMap this.mapValue=\", this.filterProvider.mapValue);\n    //console.log(\"filterCreateWhereStrMap this.placeValue=\", this.filterProvider.placeValue);\n    return new Promise(res => {\n      let whereStr = '';\n\n\n      /*    if (this.filterProvider.placeValue && (this.filterProvider.placeValue != ''))\n            whereStr += ((whereStr != '') ? ' and ' : '') + '  a.place=\"' + this.filterProvider.placeValue + '\"';*/\n\n      if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == ''))) {\n        let places = new BaseSql(this.http, 'place');\n        places.selectDistinct('id', 'name_map=\"' + this.filterProvider.mapValue + '\"').then(rs => {\n          let placeList = <any>rs;\n          //console.log(\"place\", placeList);\n          if (placeList.length > 0) whereStr += ((whereStr != '') ? ' and (' : ' (');\n          for (let i = 0; i < placeList.length; i++) {\n            whereStr += ' place=' + placeList[i].id;\n            if (i < placeList.length - 1) whereStr += ' or ';\n          }\n          whereStr += ')';\n          //console.log(\"((this.placeValue=='') && (this.mapValue!=''))\", whereStr);\n          if ((this.filterProvider.partOfName) && (this.filterProvider.partOfName != '')) {\n            if (this.lang == 'ru') {\n              whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"';\n            }\n            else {\n              whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"'\n            }\n\n          }\n\n          if ((this.filterProvider.dateValue) && (this.filterProvider.dateValue != '')) {\n\n            whereStr += ((whereStr != '') ? ' and ' : '') + 'a.date_event=\"' + this.filterProvider.dateValue + '\"';\n\n          }\n\n\n          if (this.filterProvider.thematicConferenceValue) {\n\n\n            whereStr += ((whereStr != '') ? ' and ' : '') + '(a.thematic_conference=\"' + this.filterProvider.thematicConferenceValue + '\")';\n          }\n          //console.log(\"(whereStr after thematic=\", whereStr);\n\n\n          if (whereStr != '') whereStr = ' where ' + whereStr;\n          //console.log('so whereStr is =', whereStr);\n          this.filterProvider.setFilterValue(whereStr);\n          //console.log('so whereStr is =', whereStr);\n\n        })\n\n      }\n      return res(whereStr);\n    })\n    /* if (whereStr != '') whereStr = ' where ' + whereStr;\n     //console.log('so whereStr is =', whereStr);\n     return whereStr;*/\n  }\n\n  setFilter() {\n    //console.log(this.filterCreateWhereStr());\n    //this.filterStr = this.filterCreateWhereStr();\n\n    if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n  }\n\n  selectConferenceSearch() {\n    //  this.filterStr=this.filterCreateWhereStr();\n    // this.filterProvider.setFilterValue(this.filterCreateWhereStr());\n      this.filterCreate();\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n  }\n\n  cancelFilterDate() {\n    this.filterProvider.dateField = '';\n    this.filterProvider.dateValue = '';\n      this.filterCreate();\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }\n\n  cancelFilterMap() {\n    this.filterProvider.mapField = '';\n    this.filterProvider.mapValue = '';\n    this.filterCreate();\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }\n\n  cancelFilterPlace() {\n    this.filterProvider.placeField = '';\n    this.filterProvider.placeValue = '';\n      this.filterCreate();\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }\n\n  cancelFilterThematic() {\n    this.filterProvider.thematicConferenceField = '';\n    this.filterProvider.thematicConferenceValue = '';\n      this.filterCreate();\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }\n\n  cancelFilterName() {\n    this.filterProvider.partOfName = '';\n    this.filterCreate();\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/filter/filter-conference/filter-conference.ts","import {Component} from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the ParticipantHelpPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-participant-help',\n  templateUrl: 'participant-help.html',\n})\nexport class ParticipantHelpPage extends BaseLangPageProvider {\n  setOneFilterStr='Set filter of the parameter';\n  cancelOneFilterStr='Cancel filter of the parameter';\n//lang:string;\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public events: Events,\n              public http: Http) {\n    super(navCtrl, events, http);\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n\n    this.titleStr = 'Работа со списком участников';\n    this.setOneFilterStr='Установить фильтр для параметра';\n    this.cancelOneFilterStr='Сбросить фильтр для параметра';\n    this.setFilterStr='Установить фильтр для параметра';\n    this.cancelFilterStr='Сбросить фильтр для параметра';\n  }\n\n  setEnglishStrings(){\n    super.setEnglishStrings();\n\n    this.titleStr='Operations whith the exhibitors list';\n    this.setOneFilterStr='Set filter of the parameter';\n    this.cancelOneFilterStr='Cancel filter of the parameter';\n    this.setFilterStr='Set filter of the parameter';\n    this.cancelFilterStr='Cancel filter of the parameter';\n  }\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad ParticipantHelpPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/help/participant-help/participant-help.ts","import {Component} from '@angular/core';\nimport { Events, NavController, NavParams, Platform} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the ParticipantHelpPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-conference-help',\n  templateUrl: 'conference-help.html',\n})\nexport class ConferenceHelpPage extends BaseLangPageProvider {\n\n  setOneFilterStr='Set filter of the parameter';\n  cancelOneFilterStr='Cancel filter of the parameter';\n\n\n  widthScroll:any;\n  heightScroll:any;\n//lang:string;\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public events: Events,\n              public http: Http,\n              public platform:Platform) {\n    super(navCtrl, events, http);\n\n    this.widthScroll=\"100%\";\n   // this.heightScroll=\"500px\";\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n\n    this.titleStr = 'Работа с конференцией';\n    this.setOneFilterStr='Установить фильтр для параметра';\n    this.cancelOneFilterStr='Сбросить фильтр для параметра';\n    this.setFilterStr='Установить фильтр для параметра';\n    this.cancelFilterStr='Сбросить фильтр для параметра';\n  }\n\n  setEnglishStrings(){\n    super.setEnglishStrings();\n\n    this.titleStr='Operations whith the conference';\n    this.setOneFilterStr='Set filter of the parameter';\n    this.cancelOneFilterStr='Cancel filter of the parameter';\n    this.setFilterStr='Set filter of the parameter';\n    this.cancelFilterStr='Cancel filter of the parameter';\n  }\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad ParticipantHelpPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/help/conference-help/conference-help.ts","import { Component } from '@angular/core';\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the MapHelpPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-map-help',\n  templateUrl: 'map-help.html',\n})\nexport class MapHelpPage extends BaseLangPageProvider{\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public events:Events,\n              public http:Http) {\n    super(navCtrl,events,http)\n  }\n\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad MapHelpPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/help/map-help/map-help.ts","import {Component} from '@angular/core';\nimport {AlertController, Events, NavController, NavParams} from 'ionic-angular';\n\nimport {BaseSql} from \"../../providers/base-sql\";\nimport {Http} from \"@angular/http\";\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {participant} from \"../../providers/participant-sql\";\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\n\n/**\n * Generated class for the QrScannerPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-qr-scanner',\n  templateUrl: 'qr-scanner.html',\n})\nexport class QrScannerPage extends BaseLangPageProvider {\n\n  participantId = 1;\n  conferenceId = 14;\n  badgeId = 22;\n  contactId = 23;\n\n  participantStr: string;\n  conferenceStr: string;\n  contactStr: string;\n  inMyForumStr: string;\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              //public qrScanner: QRScanner,\n              public http: Http,\n              public alertCtrl: AlertController,\n              public events: Events) {\n    super(navCtrl, events, http);\n    //console.log('create QrScannerPage');\n\n  }\n\n  ionViewDidLoad() {\n    super.ionViewDidLoad();\n    //console.log('ionViewDidLoad QrScannerPage');\n    //  this.scan2();\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings('QR сканер');\n    this.participantStr = 'Участник';\n    this.conferenceStr = 'Мероприятие';\n    this.contactStr = 'Контакт';\n    this.inMyForumStr = ' (Мой форум)';\n\n\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings('QR scanner');\n    this.participantStr = 'Exhibitor';\n    this.conferenceStr = 'Event';\n    this.contactStr = 'Contact';\n    this.inMyForumStr = ' in My Forum';\n\n  }\n\n  /*  status=\n      Object\n\n    authorized: true\n\n    canChangeCamera: true\n\n    canEnableLight: true\n\n    canOpenSettings: true\n\n    currentCamera: 0\n\n    denied: false\n\n    lightEnabled: false\n\n    prepared: false\n\n    previewing: true\n\n    restricted: false\n\n    scanning: false\n\n    showing: false\n\n    Прототип Object*/\n  scan2() {\n    /*this.qrScanner.prepare()\n      .then((status: QRScannerStatus) => {\n        //console.log(\"status=\", status);\n        if (status.authorized) {\n          // camera permission was granted\n\n          //console.log(\"start scanning\");\n          // start scanning\n\n          let scanSub = this.qrScanner.scan().subscribe((text: string) => {\n            //console.log('Scanned something', text);\n            //alert(text);\n            this.qrScanner.hide(); // hide camera preview\n            scanSub.unsubscribe(); // stop scanning\n          });\n\n          // show camera preview\n          this.qrScanner.show().then(data => //console.log(data),err => //console.log(err));\n\n          // wait for user to scan something, then the observable callback will be called\n\n        } else if (status.denied) {\n          // camera permission was permanently denied\n          // you must use QRScanner.openSettings() method to guide the user to the settings page\n          // then they can grant the permission from there\n          alert('denied');\n        } else {\n          // permission was denied, but not permanently. You can ask for permission again at a later time.\n          alert('denied slightly');\n        }\n      })\n      .catch((e: any) => //console.log('Error is', e));*/\n  }\n\n  scan() {\n\n// Optionally request the permission early\n   /* this.qrScanner.prepare()\n      .then((status: QRScannerStatus) => {\n        if (status.authorized) {\n          // camera permission was granted\n\n\n          // start scanning\n          let scanSub = this.qrScanner.scan().subscribe((qrcode: string) => {\n            //console.log('Scanned something', qrcode);\n            this.qrScanner.show();\n            this.qrScanner.hide(); // hide camera preview\n            scanSub.unsubscribe(); // stop scanning\n//check for qr-code in the base;\n            let tableParticipant = new BaseSql(this.http, 'participant');\n            tableParticipant.selectWhere('qrcode=\"' + qrcode).then(res => {\n              if (!res) {\n                let rec = <any>res[0];\n                let tableMyForum = new MyForumSql(this.http);\n                tableMyForum.selectWhere('my_block_id=' + this.conferenceId + ' and my_id=' + rec.id).then(rs => {\n                  if (!rs) {\n                    let alert = this.alertCtrl.create({\n                      title: this.participantStr + this.inMyForumStr,\n                      subTitle: ((this.lang == 'ru') ? rec.name_ru : rec.name_eng),\n                      buttons: ['OK']\n                    });\n                    alert.present();\n                  }\n                  else {\n                    let confirm = this.alertCtrl.create({\n                      title: this.participantStr,\n                      message: this.addStr + this.inMyForumStr,\n                      buttons: [\n                        {\n                          text: this.yesStr,\n                          handler: () => {\n                            //console.log('Yes clicked');\n                            tableMyForum.addToMyForumSite(rec.id, this.participantId, this.userId).then(res => {\n                              //console.log(rec.name_rus, \" added\");\n                            })\n                          }\n                        },\n                        {\n                          text: this.noStr,\n                          handler: () => {\n                            //console.log('No clicked');\n                          }\n                        }\n                      ]\n                    });\n                    confirm.present();\n                  }\n\n                });\n              }\n              else {\n                let tableConference = new BaseSql(this.http, 'conference');\n                tableConference.selectWhere('qrcode=\"' + qrcode).then(resConference => {\n                  if (!resConference) {\n                    let rec = <any>resConference[0];\n                    let tableMyForum = new MyForumSql(this.http);\n                    tableMyForum.selectWhere('my_block_id=' + this.conferenceId +\n                      ' and my_id=' + rec.id).then(rsMyForumConference => {\n                      if (!rsMyForumConference) {\n                        let alert = this.alertCtrl.create({\n                          title: this.conferenceStr + this.inMyForumStr,\n                          subTitle: ((this.lang == 'ru') ? rec.name_ru : rec.name_eng),\n                          buttons: ['OK']\n                        });\n                        alert.present();\n                      }\n                      else {\n                        let confirm = this.alertCtrl.create({\n                          title: this.conferenceStr,\n                          message: this.addStr + this.inMyForumStr,\n                          buttons: [\n                            {\n                              text: this.yesStr,\n                              handler: () => {\n                                //console.log('Yes clicked');\n                                tableMyForum.addToMyForumSite(rec.id, this.conferenceId, this.userId).then(res => {\n                                  //console.log(rec.name_rus, \" added\");\n                                });\n                              }\n                            },\n                            {\n                              text: this.noStr,\n                              handler: () => {\n                                //console.log('No clicked');\n                              }\n                            }\n                          ]\n                        });\n                        confirm.present();\n                      }\n\n                    });\n                  }\n\n                });\n              }\n            });\n\n\n          });\n\n          // show camera preview\n\n\n          // wait for user to scan something, then the observable callback will be called\n\n        } else if (status.denied) {\n          // camera permission was permanently denied\n          // you must use QRScanner.openSettings() method to guide the user to the settings page\n          // then they can grant the permission from there\n        } else {\n          // permission was denied, but not permanently. You can ask for permission again at a later time.\n        }\n      })\n      .catch((e: any) => //console.log('Error is', e));*/\n\n  }\n\n}\n\n//[{\"name\":\"id\", \"type\":\"text PRIMARY KEY\"},{\"name\":\"name_rus\", \"type\":\"text\"},{\"name\":\"name_eng\", \"type\":\"text\"},{\"name\":\"desc_rus\", \"type\":\"text\"},{\"name\":\"desc_eng\", \"type\":\"text\"},{\"name\":\"logo\", \"type\":\"text\"},{\"name\":\"country_rus\", \"type\":\"text\"},{\"name\":\"country_eng\", \"type\":\"text\"},{\"name\":\"address_rus\", \"type\":\"text\"},{\"name\":\"address_eng\", \"type\":\"text\"},{\"name\":\"phone\", \"type\":\"text\"},{\"name\":\"email\", \"type\":\"text\"},{\"name\":\"www\", \"type\":\"text\"},{\"name\":\"qrcode\", \"type\":\"text\"},{\"name\":\"place\", \"type\":\"text\"},{\"name\":\"thematic\",\"type\":\"text\"},{\"name\":\"name_rus_upper\", \"type\":\"text\"}]\n//[{\"name\":\"id\", \"type\":\"text PRIMARY KEY\"}, {\"name\":\"name_rus\", \"type\":\"text\"}, {\"name\":\"name_eng\", \"type\":\"text\"}, {\"name\":\"place_name\", \"type\":\"text\"}, {\"name\":\"place_name_eng\", \"type\":\"text\"}, {\"name\":\"place\", \"type\":\"text\"}, {\"name\":\"format\", \"type\":\"text\"}, {\"name\":\"format_eng\", \"type\":\"text\"}, {\"name\":\"contact\", \"type\":\"text\"}, {\"name\":\"contact_eng\", \"type\":\"text\"}, {\"name\":\"thematic_conference\", \"type\":\"text\"}, {\"name\":\"organizer\", \"type\":\"text\"}, {\"name\":\"organizer_eng\", \"type\":\"text\"}, {\"name\":\"date_event\", \"type\":\"text\"}, {\"name\":\"time_beg\", \"type\":\"text\"}, {\"name\":\"time_end\", \"type\":\"text\"},{\"name\":\"qrcode\", \"type\":\"text\"},  {\"name\":\"name_rus_upper\", \"type\":\"text\"}]\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/qr-scanner/qr-scanner.ts","import {Component, Injectable} from '@angular/core';\nimport {ModalController, NavController, NavParams, Events} from 'ionic-angular';\nimport {FilterPage} from \"../filter\";\nimport {BaseSql} from \"../../../providers/base-sql\";\nimport {Http} from \"@angular/http\";\n\n\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {FilterExhibitProvider} from \"../../../providers/filter-provider/filter-exhibit-provider\";\n\n@Injectable()\n@Component({\n  selector: 'page-filter-exhibit',\n  templateUrl: 'filter-exhibit.html',\n//  providers: [FilterExhibitProvider],\n})\nexport class FilterExhibitPage extends BaseLangPageProvider {\n\n\n /* userId: string;\n  lang: string;*/\n\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public modalCtrl: ModalController,\n              public http: Http,\n              public filterProvider: FilterExhibitProvider,\n              public events: Events) {\n    super(navCtrl, events, http);\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n    //console.log('this.setRussianStrings()');\n/*    this.filterProvider.thematicTitle = 'Тематика';\n    this.filterProvider.mapTitle = 'Павильоны';\n    this.filterProvider.placeTitle = 'Стенды';\n    this.filterProvider.countryTitle = 'Страны';\n\n    //interface strings\n    this.filterProvider.setFilterStr = 'Установить';\n    this.filterProvider.cancelFilterStr = 'Отменить';\n    this.filterProvider.findName = 'Наименование';*/\n\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings();\n    //console.log('this.setEnglishStrings()');\n\n  }\n\n\n\n  setWholeFilter() {\n    if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }\n\n  filterMap() {\n    let parameters = {\n      table: 'map', field: 'name_rus',\n      value: 'name_map', title: 'Павильон'\n    };\n    if (this.lang == 'en') {\n      parameters = {\n        table: 'map', field: 'name_eng',\n        value: 'name_map', title: 'Hall'\n      };\n    }\n    let filterModal = this.modalCtrl.create(FilterPage, parameters);\n    filterModal.onDidDismiss(\n      data => {\n        //console.log(data);\n        this.filterProvider.mapField = data[\"field\"];\n        this.filterProvider.mapValue = data[\"value\"];\n        // this.filterStr=this.filterCreateWhereStr();\n        this.setWholeFilter();\n      });\n    filterModal.present();\n  }\n\n  filterPlace() {\n    let parameters = {\n      table: 'place', field: 'name_rus',\n      value: 'id', where: ' name_map=\"' + this.filterProvider.mapValue + '\"', title: 'Стенд'\n    };\n    if (this.lang == 'en') {\n      parameters =\n        {\n          table: 'place', field: 'name_eng',\n          value: 'id', where: ' name_map=\"' + this.filterProvider.mapValue + '\"', title: 'Stand'\n        }\n    }\n    if (this.filterProvider.mapField != '') {\n      let filterModal = this.modalCtrl.create(FilterPage, parameters);\n      filterModal.onDidDismiss(\n        data => {\n          //console.log(data);\n          this.filterProvider.placeField = data[\"field\"];\n          this.filterProvider.placeValue = data[\"value\"];\n          //this.filterProvider.filterStr=\n         this.setWholeFilter();\n        });\n      filterModal.present();\n    }\n  }\n\n\n\n  filterCreateWhereStr() {\n    //console.log(\"this.thematicValue\", this.filterProvider.thematicValue);\n    //console.log(\"this.countryValue\", this.filterProvider.countryValue);\n    //console.log(\"this.mapValue=\", this.filterProvider.mapValue);\n    //console.log(\"(this.placeValue=\", this.filterProvider.placeValue);\n    return new Promise(res => {\n      let whereStr = '';\n\n      if ((this.filterProvider.partOfName) && (this.filterProvider.partOfName != '')) {\n        if (this.lang == 'ru') {\n          whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"';\n        }\n        else {\n          whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"'\n        }\n\n      }\n\n     /* if ((this.filterProvider.countryValue) && (this.filterProvider.countryValue != '')) {\n        if (this.lang == 'ru') {\n          whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_rus=\"' + this.filterProvider.countryValue + '\"';\n        }\n        else {\n          whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_eng=\"' + this.filterProvider.countryValue + '\"';\n        }\n      }*/\n      if ((this.filterProvider.mapValue) && ((this.filterProvider.placeValue == '') && (this.filterProvider.mapValue != ''))) {\n\n        let places = new BaseSql(this.http, 'place');\n        places.selectDistinct(\"id\", \"name_map='\" + this.filterProvider.mapValue + \"'\").then(rs => {\n          let placeList = <any>rs;\n          //console.log(\"place\", placeList);\n          if (placeList.length > 0) whereStr += ((whereStr != '') ? ' and (' : ' (');\n          for (let i = 0; i < placeList.length; i++) {\n            whereStr += ' place=' + placeList[i].id;\n            if (i < placeList.length - 1) whereStr += ' or ';\n          }\n          whereStr += ')';\n          //console.log(\"((this.placeValue=='') && (this.mapValue!=''))\", whereStr);\n        })\n\n      }\n\n      /*if (this.filterProvider.thematicValue) {\n\n        whereStr += ((whereStr != '') ? ' and ' : '') + '(a.thematic=\"' + this.filterProvider.thematicValue + '\" or a.thematic like \"' + this.filterProvider.thematicValue +\n          ',%\"' + ' or a.thematic like \"%,' + this.filterProvider.thematicValue + '\" or  a.thematic like \"%,' + this.filterProvider.thematicValue + ',%\")';\n      }\n      //console.log(\"(whereStr after thematic=\", whereStr);*/\n\n      /*if (this.partOfName != '') whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus like ' + '\"%' + this.partOfName + '%\"';\n       */\n      if (this.filterProvider.placeValue && (this.filterProvider.placeValue != ''))\n        whereStr += ((whereStr != '') ? ' and ' : '') + '  a.place=\"' + this.filterProvider.placeValue + '\"';\n      if (whereStr != '') whereStr = ' where ' + whereStr;\n\n      //console.log('so whereStr is =', whereStr);\n      this.filterProvider.setFilterValue(whereStr);\n      //console.log('so whereStr is =', whereStr);\n\n      return res(whereStr)\n    });\n  }\n\n  filterCreateWhereStrMap() {\n    //console.log(\"this.thematicValue\", this.filterProvider.thematicValue);\n    //console.log(\"this.countryValue\", this.filterProvider.countryValue);\n    //console.log(\"this.mapValue=\", this.filterProvider.mapValue);\n    //console.log(\"(this.placeValue=\", this.filterProvider.placeValue);\n    return new Promise(res => {\n      let whereStr = '';\n\n\n      if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == ''))) {\n\n        let places = new BaseSql(this.http, 'place');\n        places.selectDistinct(\"id\", \"name_map='\" + this.filterProvider.mapValue + \"'\").then(rs => {\n          let placeList = <any>rs;\n          //console.log(\"place\", placeList);\n          if (placeList.length > 0) whereStr += ((whereStr != '') ? ' and (' : ' (');\n          for (let i = 0; i < placeList.length; i++) {\n            whereStr += ' place=' + placeList[i].id;\n            if (i < placeList.length - 1) whereStr += ' or ';\n          }\n          whereStr += ')';\n\n          if ((this.filterProvider.countryValue) && (this.filterProvider.countryValue != '')) {\n            if (this.lang == 'ru') {\n              whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_rus=\"' + this.filterProvider.countryValue + '\"';\n            }\n            else {\n              whereStr += ((whereStr != '') ? ' and ' : '') + 'a.country_eng=\"' + this.filterProvider.countryValue + '\"';\n            }\n          }\n          //console.log(\"((this.placeValue=='') && (this.mapValue!=''))\", whereStr);\n         /* if (this.filterProvider.thematicValue) {\n\n            whereStr += ((whereStr != '') ? ' and ' : '') + '(a.thematic=\"' + this.filterProvider.thematicValue + '\" or a.thematic like \"' + this.filterProvider.thematicValue +\n              ',%\"' + ' or a.thematic like \"%,' + this.filterProvider.thematicValue + '\" or  a.thematic like \"%,' + this.filterProvider.thematicValue + ',%\")';\n          }\n          //console.log(\"(whereStr after thematic=\", whereStr);*/\n          if ((this.filterProvider.partOfName) && (this.filterProvider.partOfName != '')) {\n            if (this.lang == 'ru') {\n              whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"';\n            }\n            else {\n              whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"'\n            }\n\n          }\n\n          if (whereStr != '') whereStr = ' where ' + whereStr;\n          //console.log('so whereStr is =', whereStr);\n          this.filterProvider.setFilterValue(whereStr);\n          //console.log('so whereStr is =', whereStr);\n        });\n\n\n      }\n\n      res(whereStr);\n    });\n\n\n  }\n\n  setFilter() {\n    //console.log(this.filterCreateWhereStr());\n    //this.filterStr = this.filterCreateWhereStr();\n\n    this.filterProvider.setFilterValue(this.filterCreateWhereStr());\n  }\n\n  selectParticipantSearch() {\n    //  this.filterStr=this.filterCreateWhereStr();\n    // this.filterProvider.setFilterValue(this.filterCreateWhereStr());\n    this.setWholeFilter();\n    /*if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);*/\n  }\n\n/*\n  cancelFilterCountry() {\n    this.filterProvider.countryField = '';\n    this.filterProvider.countryValue = '';\n    if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }*/\n\n  cancelFilterMap() {\n    this.filterProvider.mapField = '';\n    this.filterProvider.mapValue = '';\n    this.setWholeFilter();\n    /*if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);*/\n\n  }\n\n  cancelFilterPlace() {\n    this.filterProvider.placeField = '';\n    this.filterProvider.placeValue = '';\n    this.setWholeFilter();\n    /*if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);*/\n\n  }\n\n/*  cancelFilterThematic() {\n    this.filterProvider.thematicField = '';\n    this.filterProvider.thematicValue = '';\n    if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }*/\n\n  cancelFilterName() {\n    this.filterProvider.partOfName = '';\n    this.setWholeFilter();\n   /* if ((this.filterProvider.mapValue) && ( (!this.filterProvider.placeValue) || (this.filterProvider.placeValue == '')))\n      this.filterCreateWhereStrMap().then(res => {\n        //console.log(' filterMap()1 res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    else\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);*/\n\n\n  }\n}\n//400 strings before refactoring\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/filter/filter-exhibit/filter-exhibit.ts","import {Component} from '@angular/core';\nimport { Events, NavController, NavParams, Platform} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the ParticipantHelpPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-exhibit-help',\n  templateUrl: 'exhibit-help.html',\n})\nexport class ExhibitHelpPage extends BaseLangPageProvider {\n\n  setOneFilterStr='Set filter of the parameter';\n  cancelOneFilterStr='Cancel filter of the parameter';\n\n\n  widthScroll:any;\n  heightScroll:any;\n//lang:string;\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public events: Events,\n              public http: Http,\n              public platform:Platform) {\n    super(navCtrl, events, http);\n\n    this.widthScroll=\"100%\";\n   // this.heightScroll=\"500px\";\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n\n    this.titleStr = 'Работа со списком экспонатов';\n    this.setOneFilterStr='Установить фильтр для параметра';\n    this.cancelOneFilterStr='Сбросить фильтр для параметра';\n    this.setFilterStr='Установить фильтр для параметра';\n    this.cancelFilterStr='Сбросить фильтр для параметра';\n  }\n\n  setEnglishStrings(){\n    super.setEnglishStrings();\n\n    this.titleStr='Operations whith the exhibits list';\n    this.setOneFilterStr='Set filter of the parameter';\n    this.cancelOneFilterStr='Cancel filter of the parameter';\n    this.setFilterStr='Set filter of the parameter';\n    this.cancelFilterStr='Cancel filter of the parameter';\n  }\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad ParticipantHelpPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/help/exhibit-help/exhibit-help.ts","import {Component, Injectable} from '@angular/core';\nimport {ModalController, NavController, NavParams, Events} from 'ionic-angular';\nimport {FilterPage} from \"../filter\";\nimport {BaseSql} from \"../../../providers/base-sql\";\nimport {Http} from \"@angular/http\";\n\nimport {FilterConferenceProvider} from \"../../../providers/filter-provider/filter-conference-provider\";\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {FilterDemoProgramProvider} from \"../../../providers/filter-provider/filter-demo-program-provider\";\n\n@Injectable()\n@Component({\n  selector: 'page-filter-demo-program',\n  templateUrl: 'filter-demo-program.html',\n})\nexport class FilterDemoProgramPage extends BaseLangPageProvider {\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public modalCtrl: ModalController,\n              public http: Http,\n              public filterProvider: FilterDemoProgramProvider,\n              public events: Events) {\n    super(navCtrl, events, http);\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n    //console.log('this.setRussianStrings()');\n\n\n  }\n\n  setEnglishStrings() {\n    super.setEnglishStrings();\n    //console.log('this.setEnglishStrings()');\n\n  }\n\n    setWholeFilter() {\n\n            this.filterCreateWhereStr().then(res => {\n                //console.log(' filterMap() res=', <any>res);\n                this.filterProvider.setFilterValue(<string>res);\n            });\n\n\n    }\n\n\n  filterCreate() {\n    /* this.filterProvider.filterStr=this.filterCreateWhereStr();*/\n\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n\n  }\n\n\n    /**\n     * rigid filter!!!\n     */\n\n  filterPlace() {\n    let parameters = {\n      table: 'place', field: 'name_rus',\n      value: 'id', where: \" (name_rus='Сухопутный кластер' or name_rus='Аэродром \"+'\"'+'Кубинка\"'+\"'\"+')'\n    };\n    if (this.lang == 'en') {\n      parameters =\n        {\n          table: 'place', field: 'name_eng',\n          value: 'id', where: \" (name_rus='Сухопутный кластер' or name_rus='Аэродром \"+'\"'+'Кубинка\"'+\"'\"+')'\n        }\n    }\n\n      let filterModal = this.modalCtrl.create(FilterPage, parameters);\n      filterModal.onDidDismiss(\n        data => {\n          //console.log(data);\n          this.filterProvider.placeField = data[\"field\"];\n          this.filterProvider.placeValue = data[\"value\"];\n          //this.filterProvider.filterStr=\n          this.filterCreate();\n        });\n      filterModal.present();\n\n  }\n\n  filterDate() {\n    let parameters = {\n      table: 'conference', field: 'date_event',\n      value: 'date_event', distinct: 'date_event',\n      title: 'Дата', order: 'date_event'\n    };\n    if (this.lang == 'en') {\n      parameters =\n        {\n          table: 'conference', field: 'date_event',\n          value: 'date_event', distinct: 'date_event',\n          title: 'Date', order: 'date_event'\n        }\n    }\n    let filterModal = this.modalCtrl.create(FilterPage, parameters);\n    filterModal.onDidDismiss(\n      data => {\n        //console.log(data);\n        this.filterProvider.dateField = data[\"field\"];\n        this.filterProvider.dateValue = data[\"value\"];\n        this.filterCreate();\n      }\n    );\n\n    filterModal.present();\n  }\n\n  filterCreateWhereStr() {\n\n    //console.log(\"this.dateValue\", this.filterProvider.dateValue);\n    //console.log(\"this.placeValue=\", this.filterProvider.placeValue);\n    return new Promise(res => {\n      let whereStr = '';\n\n      if ((this.filterProvider.partOfName) && (this.filterProvider.partOfName != '')) {\n        if (this.lang == 'ru') {\n          whereStr += ((whereStr != '') ? ' and ' : '') + ' a.name_rus_upper like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"';\n        }\n        else {\n          whereStr += ((whereStr != '') ? ' and ' : '') + 'a.name_eng like' + '\"%' + this.filterProvider.partOfName.toUpperCase() + '%\"'\n        }\n\n      }\n\n      if ((this.filterProvider.dateValue) && (this.filterProvider.dateValue != '')) {\n\n        whereStr += ((whereStr != '') ? ' and ' : '') + 'a.date_event=\"' + this.filterProvider.dateValue + '\"';\n\n      }\n\n\n\n\n\n      if (this.filterProvider.placeValue && (this.filterProvider.placeValue != ''))\n        whereStr += ((whereStr != '') ? ' and ' : '') + '  a.place=\"' + this.filterProvider.placeValue + '\"';\n\n\n      if (whereStr != '') whereStr = ' where ' + whereStr;\n      this.filterProvider.setFilterValue(whereStr);\n      //console.log('so whereStr is =', whereStr);\n      return res(whereStr);\n    });\n  }\n\n\n\n\n/*  setFilter() {\n    //console.log(this.filterCreateWhereStr());\n    //this.filterStr = this.filterCreateWhereStr();\n\n\n      this.filterCreateWhereStr().then(res => {\n          //console.log(' filterMap() res=', <any>res);\n          this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n  }*/\n\n  selectConferenceSearch() {\n    //  this.filterStr=this.filterCreateWhereStr();\n    // this.filterProvider.setFilterValue(this.filterCreateWhereStr());\n\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n  }\n\n  cancelFilterDate() {\n    this.filterProvider.dateField = '';\n    this.filterProvider.dateValue = '';\n\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }\n\n\n\n  cancelFilterPlace() {\n    this.filterProvider.placeField = '';\n    this.filterProvider.placeValue = '';\n\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n\n  }\n\n\n  cancelFilterName() {\n    this.filterProvider.partOfName = '';\n\n      this.filterCreateWhereStr().then(res => {\n        //console.log(' filterMap() res=', <any>res);\n        this.filterProvider.setFilterValue(<string>res);\n      });\n    //console.log('this.filterProvider.filterStr=', this.filterProvider.filterStr);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/filter/filter-demo-program/filter-demo-program.ts","import {Component} from '@angular/core';\nimport { Events, NavController, NavParams, Platform} from 'ionic-angular';\nimport {BaseLangPageProvider} from \"../../../providers/base-lang-page/base-lang-page\";\nimport {Http} from \"@angular/http\";\n\n/**\n * Generated class for the ParticipantHelpPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-demo-program-help',\n  templateUrl: 'demo-program-help.html',\n})\nexport class DemoProgramHelpPage extends BaseLangPageProvider {\n\n  setOneFilterStr='Set filter of the parameter';\n  cancelOneFilterStr='Cancel filter of the parameter';\n\n\n  widthScroll:any;\n  heightScroll:any;\n//lang:string;\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public events: Events,\n              public http: Http,\n              public platform:Platform) {\n    super(navCtrl, events, http);\n\n    this.widthScroll=\"100%\";\n   // this.heightScroll=\"500px\";\n\n\n  }\n\n  setRussianStrings() {\n    super.setRussianStrings();\n\n    this.titleStr = 'Работа c демо программой';\n    this.setOneFilterStr='Установить фильтр для параметра';\n    this.cancelOneFilterStr='Сбросить фильтр для параметра';\n    this.setFilterStr='Установить фильтр для параметра';\n    this.cancelFilterStr='Сбросить фильтр для параметра';\n  }\n\n  setEnglishStrings(){\n    super.setEnglishStrings();\n\n    this.titleStr='Operations whith the demo program';\n    this.setOneFilterStr='Set filter of the parameter';\n    this.cancelOneFilterStr='Cancel filter of the parameter';\n    this.setFilterStr='Set filter of the parameter';\n    this.cancelFilterStr='Cancel filter of the parameter';\n  }\n  ionViewDidLoad() {\n    //console.log('ionViewDidLoad ParticipantHelpPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/help/demo-program-help/demo-program-help.ts","import {Component} from '@angular/core';\n\nimport {Events, NavController, NavParams} from 'ionic-angular';\nimport {ThematicSql} from \"../../providers/thematic-sql\";\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {Http} from \"@angular/http\";\n\n\nimport {BaseLangPageProvider} from \"../../providers/base-lang-page/base-lang-page\";\nimport {place, PlaceSql} from \"../../providers/place-sql/place-sql\";\nimport {map, MapSql} from \"../../providers/map-sql/map-sql\";\nimport {LeafletMapPage} from \"../leaflet-map/leaflet-map\";\n\n\n@Component({\n    selector: 'page-participant-detail',\n    templateUrl: 'participant-detail.html'\n\n})\nexport class ParticipantDetailPage extends BaseLangPageProvider {\n\n    participantList: any;\n    // participant: any;\n    thematic: any;\n    // myForum: any;\n\n    //   showMap: boolean;\n\n    iblockId: any;\n    //interface strings\n    title: string;\n    onMapStr: string;\n    myForumStr: string;\n    thematicStr: string;\n    listOut: any;\n\n    constructor(public navParams: NavParams,\n                public navCtrl: NavController,\n                public thematicSql: ThematicSql,\n                public sqlMyForum: MyForumSql,\n                public placeSql: PlaceSql,\n                public mapSql: MapSql,\n                public events: Events,\n                http: Http) {\n        super(navCtrl, events, http);\n        //this.lang = localStorage.getItem('lang');\n        //console.log(\"now in Participant detail\");\n        //console.log(navParams);\n        this.thematic = [];\n        /* if (this.navParams.data.map) this.showMap = this.navParams.data.map;\n         else this.showMap = true;*/\n\n        if (navParams.data.participant) {\n            if (navParams.data.participant.length)\n            //  this.participant = navParams.data.participant[0];\n                this.participantList = navParams.data.participant\n            //else this.participant = navParams.data.participant;\n            else this.participantList.push(navParams.data.participant);\n        }\n        else {\n            //   if (navParams.data.res) this.participant = navParams.data.res;\n            if (navParams.data.res) this.participantList.push(navParams.data.res);\n        }\n\n\n        if (navParams.data.listOut) {\n            this.listOut = navParams.data.listOut;\n        }\n        this.changeName();\n\n        this.prepareParticipant();\n        // if (this.showMap) this.showMap =\n        //console.log('this.participant=', this.participantList[0]);\n\n\n        this.iblockId = 1;\n\n\n\n\n    }\n\n    async prepareParticipant() {\n        for (let participant of this.participantList) {\n            participant[\"thematic\"] = [];\n            if (this.navParams.data.map != null)\n                participant[\"showMap\"] = this.navParams.data.map;\n            else participant[\"showMap\"] = true;\n            participant[\"showMap\"] = !!this.participantList[0].place_name;\n            let res = await       this.thematicSql.getThematicOfParticipant(participant.id)\n            //console.log(\"res in thematic page=\", res);\n            participant[\"thematic\"] = res;\n            //console.log(\"participant=\", participant);\n        }\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Участник');\n\n        this.onMapStr = 'На карте';\n        this.myForumStr = 'Мой форум';\n        this.thematicStr = 'Тематика:'\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Exhibitor');\n\n        this.onMapStr = 'Map';\n        this.myForumStr = 'My Forum';\n        this.thematicStr = 'Thematic Section:'\n    }\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n    }\n\n    async changeMyForum(id) {\n        if (this.userId) {\n            let participant = this.participantList.find(x => x.id == id);\n            //element.my_forum_id = id.my_forum_id;\n            // //console.log('was added =', element);\n            if (participant.my_forum_id > 0) {\n\n                participant.my_forum_id = await this.deleteFromMyForum(id);\n                this.events.publish('myforum:delete:participant', (id)\n                );\n            }\n            else {\n                participant.my_forum_id = await this.addToMyForumSite(id);\n                // ''this.participantApi\n                this.events.publish('myforum:add:participant', ({id: id, my_forum_id: participant.my_forum_id})\n                );\n\n\n\n            }\n        }\n    }\n\n    deleteFromMyForum(id) {\n        if (this.userId) {\n            this.sqlMyForum.delFromMyForum(id).then(res => {\n                if (res) return null;\n                else return -1;\n            });\n        }\n    }\n\n    async addToMyForumSite(id) {\n        if (this.userId) {\n            return await this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId);\n        }\n    }\n\n\n    async changeName() {\n        // for (let i = 0; i < this.listOut.length; i++) {\n\n        for (let participant of  this.participantList) {\n            participant.name = participant.name.replace(/&quot;/g, '\"');\n            participant.desc = participant.desc.replace(/&quot;/g, '\"');\n            participant.desc = participant.desc.replace(/\\\\r\\\\n/g, '');\n            //console.log(\"this.listOut[i]=\", participant);\n            //console.log(\"this.listOut[i].name=\", participant.name);\n            //console.log(\"this.listOut[i].place=\", participant.place);\n\n\n            //console.log(participant.place);\n\n            if (participant.place && participant.place.includes(',')) {\n                let placeStr = '';\n\n                let listPlaces = participant.place.split(',');\n                for (let m = 0; m < listPlaces.length; m++) {\n\n                    let res = await this.placeSql.selectWhere('id=' + listPlaces[m]);\n                    if (res) {\n                        //console.log(\"res=\", res);\n                        placeStr += (placeStr == '' ? '' : ', ') + (this.lang == 'ru' ? res[0].name_rus : res[0].name_eng);\n                        //console.log(listPlaces[m]);\n                        participant.place_name_place = placeStr;\n                        participant.place_name = placeStr;\n                    }\n                }\n                if ((participant[\"showMap\"]) && (this.participantList.length==1)) participant[\"showMap\"] = !!participant.place_name;\n\n            }\n        }\n\n    }\n\n    showLeafLetMap1(participant) {\n        //console.log(\"participant=\", participant);\n\n\n        this.placeSql.selectWhere('id=' + participant.place).then(res => {\n            //console.log('showLeafLetMap res=', res);\n            let place: place[] = (<place[]>res);\n            this.mapSql.getRecordForFieldValue('name_map', \"'\" + place[0].name_map + \"'\").then(res => {\n                //console.log(\"res=\", res);\n                let map = <map[]>res;\n                this.navCtrl.push(LeafletMapPage, {\n                    typeOfMap: 'participantDetail',\n                    popupElement: participant,\n                    place: place,\n                    map: map\n                });\n            });\n        });\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/participant-detail/participant-detail.ts","import {Injectable} from '@angular/core';\n\nimport {Events, ToastController} from 'ionic-angular';\nimport {Storage} from '@ionic/storage';\nimport {UserApi} from \"./user/user-api.service\";\n\n\n@Injectable()\nexport class UserData {\n    _favorites: string[] = [];\n    //HAS_LOGGED_IN = 'hasLoggedIn';\n    //HAS_SEEN_TUTORIAL = 'hasSeenTutorial';\n\n\n    authSuccessStr: string;\n    wrongLogStr: string;\n    signupSuccessStr: string;\n    signupWrongStr: string;\n    lang: string;\n\n    constructor(public events: Events,\n                public storage: Storage,\n                public userApi: UserApi,\n                public toastCtrl: ToastController) {\n        this.events.subscribe('language:change', () => {\n\n\n            this.lang = localStorage.getItem('lang');\n            if (this.lang == 'ru') {\n                //console.log('this.events.subscribe(language:change)', this.lang);\n                this.setRussianStrings();\n            }\n            else {\n                this.setEnglishStrings();\n            }\n        });\n    }\n\n    setRussianStrings() {\n        this.authSuccessStr = 'Вы успешно авторизовались';\n        this.signupSuccessStr = 'Вы успешно зарегистрировались';\n        this.signupWrongStr = 'Ошибка при регистрации';\n        this.wrongLogStr = 'Неправильный логин или пароль';\n    }\n\n    setEnglishStrings() {\n        this.authSuccessStr = 'Successful login';\n        this.signupSuccessStr = 'Successful sign up';\n        this.signupWrongStr = 'Error on sign up';\n        this.wrongLogStr = 'Login or password is wrong';\n    }\n\n    hasFavorite(sessionName: string): boolean {\n        return (this._favorites.indexOf(sessionName) > -1);\n    };\n\n    addFavorite(sessionName: string): void {\n        this._favorites.push(sessionName);\n    };\n\n    removeFavorite(sessionName: string): void {\n        let index = this._favorites.indexOf(sessionName);\n        if (index > -1) {\n            this._favorites.splice(index, 1);\n        }\n    };\n\n    login(login, password: string): void {\n        this.userApi.checkUser(login, password).subscribe(\n            res => {\n                //console.log(\"res after login\");\n                //console.log(res);\n                try {\n                    if (res.result.ID > 0) {\n                        //console.log(\"successful auth\");\n                        localStorage.setItem('userid', res.result.ID);\n                        //console.log(\"login\",res.result.LOGIN);\n                        localStorage.setItem('login',res.result.LOGIN);\n                        //console.log(\"lastname\",res.result.LAST_NAME);\n                        localStorage.setItem('lastname',res.result.LAST_NAME);\n                        //console.log(res.result.NAME);\n                        localStorage.setItem('name',res.result.NAME);\n                        //console.log(res.result.EMAIL);\n                        localStorage.setItem('email',res.result.EMAIL);\n                        //console.log(\"userID\");\n                        this.events.publish('user:login');\n                        let toast = this.toastCtrl.create({\n                            message: this.authSuccessStr,\n                            duration: 3000\n                        });\n                        toast.present();\n                    }\n                    else {\n                        let toast = this.toastCtrl.create({\n                            message: this.wrongLogStr,\n                            duration: 3000\n                        });\n                        toast.present();\n                    }\n                } catch (err) {\n                    let toast = this.toastCtrl.create({\n                        message: this.wrongLogStr,\n                        duration: 3000\n                    });\n                    toast.present();\n                    //console.log(\"error\");\n                    //console.log(err);\n                    return err;\n                }\n            }\n        );\n\n    };\n\n    async signup(login: string, password: string, name: string, lastname: string, email: string, confirm_password: string) {\n        confirm_password = confirm_password || confirm_password;\n\n        this.userApi.createUser(login, password, name, lastname, email, confirm_password).subscribe(res => {\n            if (res > 0) {\n                // localStorage.set(this.HAS_LOGGED_IN, true);\n                localStorage.setItem('login', login);\n                localStorage.setItem('lastname', lastname);\n                localStorage.setItem('lastname', name);\n                localStorage.setItem('email', email);\n                this.events.publish('user:signup');\n\n            }\n            else {\n                let toast = this.toastCtrl.create({\n                    message: this.signupWrongStr,\n                    duration: 3000\n                });\n                toast.present();\n            }\n        });\n\n    };\n\n    logout(): void {\n        //   localStorage.remove(this.HAS_LOGGED_IN);\n        localStorage.removeItem('login');\n        localStorage.removeItem('userid');\n        localStorage.removeItem('name');\n        localStorage.removeItem('lastname');\n        localStorage.removeItem('email');\n        this.events.publish('user:logout');\n    };\n\n\n\n\n\n\n    hasLoggedIn() {\n\n        let value = localStorage.getItem('userid');\n        //console.log('value=', value);\n        return !!((value) && (value != '0'));\n    };\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user-data.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams, ViewController} from 'ionic-angular';\n\nimport {BaseSql} from \"../../providers/base-sql\";\nimport {Http} from \"@angular/http\";\n\n\n/**\n * Generated class for the FilterPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\ninterface filter {\n  field: string;\n  value: string;\n}\n@Component({\n  selector: 'page-filter',\n  templateUrl: 'filter.html',\n})\nexport class FilterPage {\n\n  filterList: filter[];\n  filterTable: string;//f.i. thematic\n  filterField: string;\n  filterValue: string;\n  filterWhere: string;\n  filterTitle: string;\n  filterDistinct: string;\n  filterOrder:string;\n  userId: string;\n  lang: string;\n\n  filterSql: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public http: Http, public viewCtrl: ViewController) {\n    this.filterTable = navParams.get('table');\n    this.filterField = navParams.get('field');\n    this.filterValue = navParams.get('value');\n    this.filterWhere = navParams.get('where');\n    this.filterTitle = navParams.get('title');\n    this.filterDistinct = navParams.get('distinct');\n    this.filterOrder = navParams.get('order');\n\n\n    //console.log(\"this.filterTable=\", this.filterTable);\n    //console.log(\"this.filterField=\", this.filterField);\n    //console.log(\"this.filterValue=\", this.filterValue);\n    //console.log(\"this.filterWhere=\", this.filterWhere);\n    //console.log(\"this.filteTitle=\", this.filterTitle);\n    //console.log(\"this.filteOrder=\", this.filterOrder);\n\n    this.filterSql = new BaseSql(http, this.filterTable);\n    this.filterSql.tableName = this.filterTable;\n  }\n\n  ionViewDidLoad() {\n    this.userId = localStorage.getItem('userid');\n    this.lang = localStorage.getItem('lang');\n    //console.log('ionViewDidLoad FilterPage');\n    this.filterList = [];\n    if (this.filterDistinct) {\n      this.filterSql.selectDistinct(this.filterDistinct,this.filterWhere,this.filterOrder).then(res => {\n        //console.log(\" distinct res=\", res);\n        for (let i = 0; i < res.length; i++) {\n          let tmpFilter: filter = {field: '', value: ''};\n          //console.log(\"res[i]=\", res[i]);\n          let tmpRes = <any>res[i];\n          tmpFilter.field = tmpRes[this.filterField];\n          tmpFilter.value = tmpRes[this.filterValue];\n          //console.log(\"tmpFilter=\", tmpFilter);\n          this.filterList.push(tmpFilter);\n        }\n      })\n    }\n    else {\n      if (this.filterWhere) {\n\n        this.filterSql.selectWhere(this.filterWhere,this.filterOrder).then(res => {\n          //console.log(\"res=\", res);\n          for (let i = 0; i < res.length; i++) {\n            let tmpFilter: filter = {field: '', value: ''};\n            //console.log(\"res[i]=\", res[i]);\n            let tmpRes = <any>res[i];\n            tmpFilter.field = tmpRes[this.filterField];\n            tmpFilter.value = tmpRes[this.filterValue];\n            //console.log(\"tmpFilter=\", tmpFilter);\n            this.filterList.push(tmpFilter);\n          }\n        })\n      }\n      else {\n        this.filterSql.select(this.filterOrder).then(res => {\n          //console.log(\"res=\", res);\n          for (let i = 0; i < res.length; i++) {\n            let tmpFilter: filter = {field: '', value: ''};\n            //console.log(\"res[i]=\", res[i]);\n            let tmpRes = <any>res[i];\n            //console.log(\"tmpRes=\", tmpRes);\n            tmpFilter.field = tmpRes[this.filterField];\n            tmpFilter.value = tmpRes[this.filterValue];\n            //console.log(\"tmpFilter=\", tmpFilter);\n            this.filterList.push(tmpFilter);\n          }\n        })\n\n      }\n    }\n  }\n\n  dismiss(value, field) {\n    let data = {'value': value, 'field': field};\n    this.viewCtrl.dismiss(data);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/filter/filter.ts","/**\n * Created by lsl-info on 14.04.17.\n * list of participants\n */\nimport {Component} from '@angular/core';\nimport {Events, NavController, NavParams, ToastController} from 'ionic-angular';\nimport {Http} from '@angular/http';\n\nimport {participant} from \"../../providers/participant-sql\";\nimport {MyForumSql} from \"../../providers/my-forum-sql\";\nimport {ParticipantDetailPage} from \"../participant-detail/participant-detail\";\n\n\nimport {FilterParticipantProvider} from \"../../providers/filter-provider/filter-participant-provider\";\nimport {BaseListPageProvider} from \"../../providers/base-list-page/base-list-page\";\nimport {PlaceSql} from \"../../providers/place-sql/place-sql\";\nimport {ParticipantApi} from \"../../providers/participant/participant-api.service\";\n\n\n@Component({\n    selector: 'page-participant',\n    templateUrl: 'participant.html',\n    providers: [FilterParticipantProvider],\n})\n\nexport class ParticipantPage extends BaseListPageProvider {\n\n\n    constructor(public navCtrl: NavController,\n                public http: Http,\n                public participantApi: ParticipantApi,\n                public sqlMyForum: MyForumSql,\n                public navParams: NavParams,\n                public toastCtrl: ToastController,\n                public filterProvider: FilterParticipantProvider,\n                public events: Events,\n                public placeSql: PlaceSql) {\n//подгружаем список участников выставки\n        super(navCtrl, navParams, events, http);//, placeSql, mapSql);\n        events.subscribe('myforum:add:participant', (id) => {\n                //console.log('was added id =', id);\n                let element = this.listOut.find(x => x.id == id.id);\n                element.my_forum_id = id.my_forum_id;\n                //console.log('was added =', element);\n            }\n        );\n        events.subscribe('myforum:delete:participant', (id) => {\n                //console.log('was deleted id=', id);\n                let element = this.listOut.find(x => x.id == id);\n                element.my_forum_id = null;\n                //console.log('was deleted =', element);\n            }\n        );\n        //console.log(\"navParams in constructor\", navParams);\n        //console.log(\"navParams==null\", this.navParams == null);\n        //console.log(\"navParams.data.length\", navParams.data.length);\n        let param = navParams.get('select');\n        //console.log(\"navParams.get('select')\", param);\n        if (param == 'thematic') {\n            let toast = this.toastCtrl.create({\n                message: this.loadStr,\n                duration: 5000\n            });\n            toast.present();\n            //console.log(\"navParams.data\", navParams.data.data);\n            this.listOut = navParams.data.data;\n        }\n        this.iblockId = 1;//for my_forum\n\n\n    }\n\n    setRussianStrings() {\n        super.setRussianStrings('Участники');\n    }\n\n    setEnglishStrings() {\n        super.setEnglishStrings('Exhibitors');\n    }\n\n\n    ionViewDidLoad() {\n        super.ionViewDidLoad();\n        //console.log('ionViewDidLoad MyForumPage');\n        //console.log(\"this.navParams=\", this.navParams);\n        //console.log(\"this.navParams.data=\", this.navParams.data);\n        //console.log(\"navParams==null\", this.navParams == null);\n        let param = this.navParams.get('select');\n        if (param == 'thematic') {\n            //console.log(\"this.navParams in ioViewDidLoad =\", this.navParams);\n            this.listOut = this.navParams.data.data;\n        }\n        else {\n            //console.log(\"this.selectParticipantAll()\");\n            let toast = this.toastCtrl.create({\n                message: this.loadStr,\n                duration: 2000\n            });\n            toast.present();\n            this.selectParticipantAll()\n        }\n\n    }\n\n\n    /**\n     * add a record in to the myforum table and in site infoblock \"myforum\" for current Participant element\n     * @param id\n     */\n\n    /*    addToMyForum(id) {\n            //console.log('add', id);\n            this.myForumApi.addToMyForumSite(this.iblockId, id).subscribe(data => {\n                //console.log(\"here are the results of adding through api\");\n                //console.log(data);\n\n                //  this.sqlMyForum.addItemAndSelect(data, this.userId, this.iblockId, id).then(res => {\n                this.sqlMyForum.addItem({id: data, user: this.userId, my_iblock_id: this.iblockId, my_id: id}).then(res => {\n                    //console.log('added', id);\n                    //console.log(res);\n                    if (this.lang == 'ru') {\n                        this.selectParticipantRus()\n                    }\n                    else {\n                        this.selectParticipantEng()\n                    }\n                });\n            });\n        }*/\n\n    /**\n     * Show the detail view of the Participant\n     * @param participant - record in the json format for current Participant element\n     */\n    goToParticipantDetail(participant) {\n        //console.log(\"goToParticipantDetail()\");\n        //console.log(participant);\n        // go to the session detail page\n        // and pass in the session data\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusParticipantFull('where a.id=' + participant.id).then(res => {\n                let participant = <any>res;\n                //console.log(\"participantDetail=\", participant);\n                this.navCtrl.push(ParticipantDetailPage, {\n                    participant: participant,\n                    listOut: this.listOut\n                }).then(res => {\n                    //console.log(\"i return from page\", res);\n                });\n            });\n        } else\n            this.sqlMyForum.getEngParticipantFull('where a.id=' + participant.id).then(res => {\n                let participant = <any>res;\n                this.navCtrl.push(ParticipantDetailPage, {\n                    participant: participant,\n                    listOut: this.listOut\n                }).then(res => {\n                        //console.log(\"i return from page\", res);\n\n                    }\n                );\n            });\n\n    }\n\n\n    async changeName() {\n        for (let i = 0; i < this.listOut.length; i++) {\n            this.listOut[i].name = this.listOut[i].name.replace(/&quot;/g, '\"');\n            //console.log(\"this.listOut[i]=\", this.listOut[i]);\n            //console.log(\"this.listOut[i].name=\", this.listOut[i].name);\n            //console.log(\"this.listOut[i].place=\", this.listOut[i].place);\n\n\n            //console.log(this.listOut[i].place);\n\n            if (this.listOut[i].place && this.listOut[i].place.includes(',')) {\n                let placeStr = '';\n\n                let listPlaces = this.listOut[i].place.split(',');\n                for (let m = 0; m < listPlaces.length; m++) {\n\n                    let res = await this.placeSql.selectWhere('id=' + listPlaces[m]);\n                    if (res) {\n                        //console.log(\"res=\", res);\n                        placeStr += (placeStr == '' ? '' : ', ') + (this.lang == 'ru' ? res[0].name_rus : res[0].name_eng);\n                        //console.log(listPlaces[m]);\n                        this.listOut[i].place_name_place = placeStr;\n                        this.listOut[i].place_name = placeStr;\n                    }\n                }\n\n            }\n\n\n        }\n    }\n\n    selectParticipantAll() {\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusParticipant().then(res => {\n                //console.log('this.sqlMyForum.getRusParticipant().then( res=', res);\n                //console.log('(<participant[]>res).length=', (<participant[]>res).length);\n                this.listOut = res;\n                this.changeName();\n\n            })\n        }\n        else {\n            this.sqlMyForum.getEngParticipant().then(res => {\n                //console.log('this.sqlMyForum.getEngParticipant().then( res=', res);\n                //console.log('(<participant[]>res).length=', (<participant[]>res).length);\n                this.listOut = res;\n                this.changeName();\n\n            })\n        }\n    }\n\n\n    deleteFromMyForum(id) {\n        this.sqlMyForum.delFromMyForum(id).then(res => {\n                //  this.selectParticipantAll();\n                this.getListOut();\n                this.changeName();\n            }\n        );\n    }\n\n    addToMyForumSite(id) {\n        this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId, this.listOut).then(res => {\n            }\n        );\n    }\n\n\n    getListOut() {\n        this.filterStr = this.filterProvider.filterStr;\n        //console.log(\"this.filterStr\", this.filterStr);\n        if (this.lang == 'ru') {\n            this.sqlMyForum.getRusParticipant(this.filterStr).then(res => {\n                //console.log('our select');\n                //console.log(res);\n                this.listOut = res;\n                this.changeName();\n\n            });\n        }\n        else {\n            this.sqlMyForum.getEngParticipant(this.filterStr).then(res => {\n                //console.log('our select');\n                //console.log(res);\n                this.listOut = res;\n                this.changeName();\n\n            });\n        }\n    }\n\n    setFilterStrParticipant() {\n\n        this.getListOut();\n        this.showHideFilter();\n    }\n\n    cancelFilterStrParticipant() {\n        this.filterProvider.cancelFilter();\n\n        this.getListOut();\n        this.showHideFilter();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/participant/participant.ts"],"sourceRoot":""}