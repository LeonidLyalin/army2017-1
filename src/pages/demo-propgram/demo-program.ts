import {Component} from '@angular/core';import {Events, NavController, NavParams, ToastController} from 'ionic-angular';import {MyForumSql} from "../../providers/my-forum-sql";/*import {conferenceRusMyForum, ConferenceSql} from "../../providers/conference-sql/conference-sql";*/import {Http} from "@angular/http";import {MapSql} from "../../providers/map-sql/map-sql";import { PlaceSql} from "../../providers/place-sql/place-sql";import {BaseListPageProvider} from "../../providers/base-list-page/base-list-page";import {DemoProgramDetailPage} from "../demo-program-detail/demo-program-detail";import {FilterDemoProgramProvider} from "../../providers/filter-provider/filter-demo-program-provider";@Component({    selector: 'page-demo-program',    templateUrl: 'demo-program.html',    providers: [FilterDemoProgramProvider],})export class DemoProgramPage extends BaseListPageProvider {    /**     * @TODO change BaseApi for Base api for ConferenceSql     */    constructor(public navCtrl: NavController,                public http: Http,                public sqlMyForum: MyForumSql,                public navParams: NavParams,                public toastCtrl: ToastController,                public mapSql: MapSql,                public placeSql: PlaceSql,                public filterProvider: FilterDemoProgramProvider,                public events: Events) {        super(navCtrl, navParams, events, http);        console.log("navParams in constructor", navParams);        console.log("navParams==null", this.navParams == null);        console.log("navParams.data.length", navParams.data.length);        let param = navParams.get('select');        console.log("navParams.get('select')", param);        if (param == 'thematicConference') {            let toast = this.toastCtrl.create({                message: 'Загрузка из API ',                duration: 5000            });            toast.present();            console.log("navParams.data", navParams.data.data);            this.listOut = navParams.data.data;        }        this.iblockId = 19;    }    ionViewDidLoad() {        super.ionViewDidLoad();        console.log("this.navParams=", this.navParams);        console.log("this.navParams.data=", this.navParams.data);        console.log("navParams==null", this.navParams == null);        let param = this.navParams.get('select');        if (param == 'thematicConference') {            console.log("this.navParams in ioViewDidLoad =", this.navParams);            this.listOut = this.navParams.data;        }        else {            this.DemoProgramRefresh();        }    }    DemoProgramRefresh() {        console.log("this.selectConferenceAll()");        let toast = this.toastCtrl.create({            message: 'Загрузка из базы ',            duration: 5000        });        toast.present();        this.selectDemoProgramAll();        console.log("step 1");    }    /**     *     * @param conferenceSingle     */    goToListDetail(element) {        console.log("goToParticipantDetail()");        console.log(element);        // go to the session detail page        // and pass in the session data        this.navCtrl.push(DemoProgramDetailPage, {            element        });    }    selectDemoProgramRus() {        this.sqlMyForum.getRusDemoProgram().then(res => {            console.log('our select');            console.log(res);            this.listOut = res;        })    }    changeName() {        this.listOut.forEach(element => {            //element.name.replace('&quot;','"');            let name = element.name.split('::');            if (name[0]) element["name_first"] = name[0].replace(/&quot;/g,'"');            else (element["name_first"] = element.name);            if (name[1]) element["name_second"] = name[1].replace(/&quot;/g,'"');        });    }    selectDemoProgramAll(whereStr = '') {        console.log("selectConferenceAll() where=", whereStr);        if (this.lang == 'ru') {            this.sqlMyForum.getRusDemoProgram(whereStr).then(res => {                console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);                console.log('(<any[]>res).length=', (<any[]>res).length);                if ((<any[]>res).length) {                    console.log('DemoProgram() after  select res');                    console.log(res);                    this.listOut = <any[]>res;                    this.changeName();                    console.log("this listOut");                    console.log(this.listOut);                }            })        }        else {            this.sqlMyForum.getEngDemoProgram(whereStr).then(res => {                console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);                console.log('(<any[]>res).length=', (<any[]>res).length);                if ((<any[]>res).length) {                    console.log('selectCDemoProgram() after  select res');                    console.log(res);                    this.listOut = <any[]>res;                    this.changeName();                    console.log("this.listOut");                    console.log(this.listOut);                }            })        }    }    deleteFromMyForum(id) {        this.sqlMyForum.delFromMyForum(id).then(res => {            this.DemoProgramRefresh();        });    }    /**     * add a record in to the myforum table and in site infoblock "myforum" for current Conference element     * @param id     */    addToMyForumSite(id) {        this.sqlMyForum.addToMyForumSite(id, this.iblockId, this.userId, this.listOut).then(res => {                console.log("and refresh now");                console.log("res=", res);                /* if (res) {                 for (let conference of this.demoProgramList) {                 if (conference.id == id) conference.my_forum_id = res;                 console.log("demoProgramList after inserting=", this.demoProgramList);                 }                 }*/                // this.conferenceRefresh();            }        );        // console.log("and refresh now2");        // this.conferenceRefresh();    }    setRussianStrings() {        super.setRussianStrings('Демо-программа');        console.log('this.setRussianStrings()');    }    setEnglishStrings() {        super.setEnglishStrings('Demo program');        console.log('this.setEnglishStrings()');    }    setFilterStrDemoProgram() {        this.filterStr = this.filterProvider.filterStr;        console.log("this.filterStr", this.filterStr);        this.listOut=[];        if (this.lang == 'ru') {            this.sqlMyForum.getRusDemoProgram(this.filterStr).then(res => {                console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);                console.log('(<any[]>res).length=', (<any[]>res).length);                if ((<any[]>res).length) {                    console.log('DemoProgram() after  select res');                    console.log(res);                    this.listOut = <any[]>res;                    this.changeName();                    console.log("this listOut");                    console.log(this.listOut);                }            })        }        else {            this.sqlMyForum.getEngDemoProgram(this.filterStr).then(res => {                console.log('this.sqlMyForum.getRusDemoProgram().then( res=', res);                console.log('(<any[]>res).length=', (<any[]>res).length);                if ((<any[]>res).length) {                    console.log('selectCDemoProgram() after  select res');                    console.log(res);                    this.listOut = <any[]>res;                    this.changeName();                    console.log("this.listOut");                    console.log(this.listOut);                }            })        }        this.showHideFilter();    }    cancelFilterStrDemoProgram() {        this.filterProvider.cancelFilter();        this.showHideFilter();    }}