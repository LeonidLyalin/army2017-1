{
  "_args": [
    [
      {
        "raw": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
        "spec": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
        "type": "remote"
      },
      "/Users/leonidlyalin/WebstormProjects/army2017"
    ]
  ],
  "_from": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
  "_id": "ionic-native@3.5.0",
  "_inCache": true,
  "_location": "/ionic-native",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
    "spec": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
    "type": "remote"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
  "_shasum": "8619c7840b349c8f51bf9eef5f120c623c746f19",
  "_shrinkwrap": null,
  "_spec": "https://github.com/ionic-team/ionic-native/tarball/v3.5.0",
  "_where": "/Users/leonidlyalin/WebstormProjects/army2017",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "description": "Native plugin wrappers for Cordova and Ionic with TypeScript, ES6+, Promise and Observable support",
  "devDependencies": {
    "@angular/compiler": "2.4.8",
    "@angular/compiler-cli": "2.4.8",
    "@angular/core": "2.4.8",
    "canonical-path": "0.0.2",
    "child-process-promise": "2.2.0",
    "conventional-changelog-cli": "1.2.0",
    "cpr": "2.0.2",
    "cz-conventional-changelog": "1.2.0",
    "decamelize": "1.2.0",
    "dgeni": "0.4.7",
    "dgeni-packages": "0.16.10",
    "fs-extra": "2.0.0",
    "fs-extra-promise": "0.4.1",
    "gulp": "3.9.1",
    "gulp-rename": "1.2.2",
    "gulp-replace": "0.5.4",
    "gulp-tslint": "6.1.2",
    "lodash": "4.17.4",
    "minimist": "1.1.3",
    "node-html-encoder": "0.0.2",
    "q": "1.4.1",
    "queue": "4.2.1",
    "rimraf": "2.5.4",
    "rxjs": "5.0.1",
    "semver": "5.3.0",
    "tslint": "3.15.1",
    "tslint-ionic-rules": "0.0.7",
    "typescript": "2.0.09",
    "zone.js": "0.7.2"
  },
  "license": "MIT",
  "name": "ionic-native",
  "optionalDependencies": {},
  "readme": "[![Circle CI](https://circleci.com/gh/driftyco/ionic-native.svg?style=shield)](https://circleci.com/gh/driftyco/ionic-native) [![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/) ![](https://img.shields.io/npm/v/@ionic-native/core.svg)\n\n\n# Ionic Native\n\nIonic Native is a curated set of wrappers for Cordova plugins that make adding any native functionality you need to your [Ionic 2](http://ionicframework.com/) mobile app easy.\n\nIonic Native wraps plugin callbacks in a Promise or Observable, providing a common interface for all plugins and making it easy to use plugins with Angular change detection.\n\n## Installation\n\nRun following command to install Ionic Native in your project.\n```\nnpm install @ionic-native/core --save\n```\n\nYou also need to install the Ionic Native package for each plugin you want to add. Please see the [Ionic Native documentation](http://ionicframework.com/docs/native/) for complete instructions on how to add and use the plugins.\n\n## Documentation\n\nFor the full Ionic Native documentation, please visit [http://ionicframework.com/docs/native/](http://ionicframework.com/docs/native/).\n\n### Basic Usage\n\nTo use a plugin, import and add the plugin provider to your `@NgModule`, and then inject it where you wish to use it.\n\n```typescript\n// app.module.ts\nimport { Camera } from '@ionic-native/camera';\n\n...\n\n@NgModule({\n  ...\n\n  providers: [\n    ...\n    Camera\n    ...\n  ]\n  ...\n})\nexport class AppModule { }\n```\n\n```typescript\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { Platform } from 'ionic-angular';\n\nimport { NgZone } from '@angular/core';\n\n@Component({ ... })\nexport class MyComponent {\n\n  constructor(private geolocation: Geolocation, private platform: Platform, private ngZone: NgZone) {\n\n    platform.ready().then(() => {\n\n      // get position\n      geolocation.getCurrentPosition().then(pos => {\n\n        console.log(`lat: ${pos.coords.latitude}, lon: ${pos.coords.longitude}`)\n\n      });\n\n\n      // watch position\n      const watch = geolocation.watchPosition().subscribe(pos => {\n\n        console.log(`lat: ${pos.coords.latitude}, lon: ${pos.coords.longitude}`)\n\n        // Currently, observables from Ionic Native plugins\n        // need to run inside of zone to trigger change detection\n        ngZone.run(() => {\n          this.position = pos;\n        })\n\n      });\n\n      // to stop watching\n      watch.unsubscribe();\n\n    });\n\n  }\n\n}\n```\n\n### Mocking and Browser Development\n\nIonic Native 3.x makes it possible to mock plugins and develop nearly the entirety of your app in the browser or in `ionic serve`.\n\nTo do this, you need to provide a mock implementation of the plugins you wish to use. Here's an example of mocking the `Camera` plugin to return a stock image while in development:\n\nFirst import the `Camera` class in your `src/app/app.module.ts` file:\n\n```ts\nimport { Camera } from '@ionic-native/camera';\n```\n\nThen create a new class that extends the `Camera` class with a mock implementation:\n\n```ts\nclass CameraMock extends Camera {\n  getPicture(options) {\n    return new Promise((resolve, reject) => {\n      resolve(\"BASE_64_ENCODED_DATA_GOES_HERE\");\n    })\n  }\n}\n```\n\nFinally, override the previous `Camera` class in your `providers` for this module:\n\n```ts\nproviders: [\n  { provide: Camera, useClass: CameraMock }\n]\n```\n\nHere's the full example:\n\n```ts\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\nimport { Camera } from '@ionic-native/camera';\n\nclass CameraMock extends Camera {\n  getPicture(options) {\n    return new Promise((resolve, reject) => {\n      resolve(\"BASE_64_ENCODED_DATA_GOES_HERE\");\n    })\n  }\n}\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    { provide: Camera, useClass: CameraMock }\n  ]\n})\nexport class AppModule {}\n```\n\n\n### Runtime Diagnostics\n\nSpent way too long diagnosing an issue only to realize a plugin wasn't firing or installed? Ionic Native lets you know what the issue is and how you can resolve it.\n\n![img](http://ionic-io-assets.s3.amazonaws.com/ionic-native-console.png)\n\n\n## Plugin Missing?\nLet us know or submit a PR! Take a look at [the Developer Guide](https://github.com/driftyco/ionic-native/blob/master/DEVELOPER.md) for more on how to contribute. :heart:\n\n## Ionic 1/Angular 1 support\n\nIonic Native 3.x supports Ionic 2.x and above. For Ionic/Angular 1 support, please use version 2 of Ionic Native. See the [2.x README](https://github.com/driftyco/ionic-native/blob/8cd648db5cddd7bdbe2bd78839b19c620cc8c04c/README.md) for usage information.\n\n# Credits\n\nIbby Hadeed - [@ihadeed](http://github.com/ihadeed)\n\nTim Lancina - [@timlancina](http://twitter.com/timlancina)\n\nMike Hartington - [@mhartington](https://twitter.com/mhartington)\n\nMax Lynch - [@maxlynch](http://twitter.com/maxlynch)\n\nRob Wormald - [@robwormald](https://twitter.com/robwormald)\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "npm run clean && npm run lint && npm run build:core && npm run build:modules",
    "build:core": "ngc -p scripts/build/tsconfig-core.json",
    "build:modules": "node scripts/build/build.js",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0",
    "clean": "rimraf dist .tmp",
    "lint": "gulp lint",
    "npmpub": "node scripts/build/publish.js",
    "postchangelog": "git commit -am \"chore(): update changelog\"",
    "shipit": "npm run build && gulp readmes && npm run npmpub",
    "start": "npm run test:watch"
  },
  "version": "3.5.0"
}
